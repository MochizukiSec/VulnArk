package models

import (
	"time"

	"go.mongodb.org/mongo-driver/bson/primitive"
)

// 漏洞严重程度
const (
	SeverityCritical = "critical"
	SeverityHigh     = "high"
	SeverityMedium   = "medium"
	SeverityLow      = "low"
	SeverityInfo     = "info"
)

// 漏洞状态
const (
	StatusOpen          = "open"
	StatusInProgress    = "in_progress"
	StatusResolved      = "resolved"
	StatusClosed        = "closed"
	StatusFalsePositive = "false_positive"
)

// Vulnerability 表示漏洞数据模型
type Vulnerability struct {
	ID               primitive.ObjectID `bson:"_id,omitempty" json:"id"`
	Title            string             `bson:"title" json:"title"`
	Description      string             `bson:"description" json:"description"`
	CVE              string             `bson:"cve" json:"cve"`
	CVSS             float64            `bson:"cvss" json:"cvss"`
	Severity         string             `bson:"severity" json:"severity"`
	Status           string             `bson:"status" json:"status"`
	AffectedSystems  []string           `bson:"affected_systems" json:"affectedSystems"`
	AffectedVersions []string           `bson:"affected_versions" json:"affectedVersions"`
	Remediation      string             `bson:"remediation" json:"remediation"`
	References       []string           `bson:"references" json:"references"`
	// 时间跟踪
	DiscoveredAt time.Time  `bson:"discovered_at" json:"discoveredAt"`
	ReportedAt   time.Time  `bson:"reported_at" json:"reportedAt"`
	ResolvedAt   *time.Time `bson:"resolved_at,omitempty" json:"resolvedAt"`
	ClosedAt     *time.Time `bson:"closed_at,omitempty" json:"closedAt"`
	// 责任人和跟踪信息
	AssignedTo primitive.ObjectID `bson:"assigned_to,omitempty" json:"assignedTo"`
	ReportedBy primitive.ObjectID `bson:"reported_by" json:"reportedBy"`
	// 额外信息
	Tags        []string     `bson:"tags" json:"tags"`
	Notes       []Note       `bson:"notes" json:"notes"`
	Attachments []Attachment `bson:"attachments" json:"attachments"`
	CreatedAt   time.Time    `bson:"created_at" json:"createdAt"`
	UpdatedAt   time.Time    `bson:"updated_at" json:"updatedAt"`
}

// Note 表示关于漏洞的备注
type Note struct {
	ID        primitive.ObjectID `bson:"_id,omitempty" json:"id"`
	Content   string             `bson:"content" json:"content"`
	CreatedBy primitive.ObjectID `bson:"created_by" json:"createdBy"`
	CreatedAt time.Time          `bson:"created_at" json:"createdAt"`
}

// Attachment 表示漏洞的附件
type Attachment struct {
	ID          primitive.ObjectID `bson:"_id,omitempty" json:"id"`
	FileName    string             `bson:"file_name" json:"fileName"`
	FileType    string             `bson:"file_type" json:"fileType"`
	FileSize    int64              `bson:"file_size" json:"fileSize"`
	FilePath    string             `bson:"file_path" json:"filePath"`
	Description string             `bson:"description" json:"description"`
	UploadedBy  primitive.ObjectID `bson:"uploaded_by" json:"uploadedBy"`
	UploadedAt  time.Time          `bson:"uploaded_at" json:"uploadedAt"`
}

// VulnerabilityCreate 用于创建漏洞的请求结构
type VulnerabilityCreate struct {
	Title            string   `json:"title" binding:"required"`
	Description      string   `json:"description" binding:"required"`
	CVE              string   `json:"cve"`
	CVSS             float64  `json:"cvss"`
	Severity         string   `json:"severity" binding:"required"`
	AffectedSystems  []string `json:"affectedSystems"`
	AffectedVersions []string `json:"affectedVersions"`
	Remediation      string   `json:"remediation"`
	References       []string `json:"references"`
	Tags             []string `json:"tags"`
}

// VulnerabilityUpdate 用于更新漏洞的请求结构
type VulnerabilityUpdate struct {
	Title            *string  `json:"title"`
	Description      *string  `json:"description"`
	CVE              *string  `json:"cve"`
	CVSS             *float64 `json:"cvss"`
	Severity         *string  `json:"severity"`
	Status           *string  `json:"status"`
	AffectedSystems  []string `json:"affectedSystems"`
	AffectedVersions []string `json:"affectedVersions"`
	Remediation      *string  `json:"remediation"`
	References       []string `json:"references"`
	AssignedTo       *string  `json:"assignedTo"`
	Tags             []string `json:"tags"`
}

// VulnerabilityImport 用于导入漏洞的请求结构
type VulnerabilityImport struct {
	Source          string          `json:"source" binding:"required"`
	Format          string          `json:"format" binding:"required"`
	Vulnerabilities []Vulnerability `json:"vulnerabilities" binding:"required"`
}

// VulnerabilitySearchParams 用于搜索漏洞的参数
type VulnerabilitySearchParams struct {
	Severity   string `form:"severity"`
	Status     string `form:"status"`
	AssignedTo string `form:"assignedTo"`
	SearchTerm string `form:"q"`
	SortBy     string `form:"sortBy"`
	SortOrder  string `form:"sortOrder"`
	Page       int    `form:"page,default=1"`
	PerPage    int    `form:"perPage,default=20"`
}

// AddNote 给漏洞添加一条备注
func (v *Vulnerability) AddNote(content string, userID primitive.ObjectID) {
	note := Note{
		ID:        primitive.NewObjectID(),
		Content:   content,
		CreatedBy: userID,
		CreatedAt: time.Now(),
	}

	v.Notes = append(v.Notes, note)
	v.UpdatedAt = time.Now()
}
