{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  name: 'Reports',\n  setup() {\n    // 加载状态\n    const loading = ref(false);\n    const generating = ref(false);\n\n    // 报告生成表单\n    const reportForm = reactive({\n      type: 'summary',\n      format: 'pdf',\n      dateRange: [],\n      severities: ['critical', 'high', 'medium']\n    });\n\n    // 模拟报告数据\n    const reports = ref([{\n      id: '1',\n      name: '2023年第二季度漏洞摘要报告',\n      type: 'summary',\n      format: 'pdf',\n      createdAt: '2023-07-01T08:30:00Z',\n      url: '#'\n    }, {\n      id: '2',\n      name: '网络安全合规性检查报告',\n      type: 'compliance',\n      format: 'word',\n      createdAt: '2023-06-15T14:20:00Z',\n      url: '#'\n    }, {\n      id: '3',\n      name: '漏洞详细分析报告',\n      type: 'detailed',\n      format: 'excel',\n      createdAt: '2023-06-10T11:45:00Z',\n      url: '#'\n    }]);\n\n    // 获取报告类型文本\n    const getReportTypeText = type => {\n      const typeMap = {\n        summary: '摘要报告',\n        detailed: '详细报告',\n        compliance: '合规报告',\n        trend: '趋势分析'\n      };\n      return typeMap[type] || type;\n    };\n\n    // 格式化日期\n    const formatDate = dateString => {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n\n    // 生成报告\n    const generateReport = () => {\n      if (!reportForm.dateRange || reportForm.dateRange.length !== 2) {\n        ElMessage.warning('请选择报告时间范围');\n        return;\n      }\n      if (reportForm.severities.length === 0) {\n        ElMessage.warning('请至少选择一个严重程度级别');\n        return;\n      }\n      generating.value = true;\n\n      // 模拟报告生成过程\n      setTimeout(() => {\n        generating.value = false;\n        const reportTypes = {\n          summary: '漏洞摘要报告',\n          detailed: '详细漏洞报告',\n          compliance: '合规性报告',\n          trend: '趋势分析报告'\n        };\n\n        // 创建新报告对象\n        const newReport = {\n          id: Date.now().toString(),\n          name: `${new Date().getFullYear()}年${reportTypes[reportForm.type]}`,\n          type: reportForm.type,\n          format: reportForm.format,\n          createdAt: new Date().toISOString(),\n          url: '#'\n        };\n\n        // 添加到报告列表\n        reports.value.unshift(newReport);\n        ElMessage.success('报告生成成功');\n      }, 2000);\n    };\n\n    // 下载报告\n    const downloadReport = report => {\n      // 实际应用中，这里应该进行实际的下载操作\n      ElMessage.success(`开始下载：${report.name}.${report.format}`);\n    };\n\n    // 确认删除\n    const confirmDelete = report => {\n      ElMessageBox.confirm(`确定要删除报告\"${report.name}\"吗？`, '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteReport(report.id);\n      }).catch(() => {\n        // 用户取消删除\n      });\n    };\n\n    // 删除报告\n    const deleteReport = id => {\n      const index = reports.value.findIndex(r => r.id === id);\n      if (index !== -1) {\n        reports.value.splice(index, 1);\n        ElMessage.success('报告已删除');\n      }\n    };\n    return {\n      loading,\n      generating,\n      reportForm,\n      reports,\n      getReportTypeText,\n      formatDate,\n      generateReport,\n      downloadReport,\n      confirmDelete\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","ElMessage","ElMessageBox","name","setup","loading","generating","reportForm","type","format","dateRange","severities","reports","id","createdAt","url","getReportTypeText","typeMap","summary","detailed","compliance","trend","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","generateReport","length","warning","value","setTimeout","reportTypes","newReport","now","toString","getFullYear","toISOString","unshift","success","downloadReport","report","confirmDelete","confirm","confirmButtonText","cancelButtonText","then","deleteReport","catch","index","findIndex","r","splice"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/reports/Reports.vue"],"sourcesContent":["<template>\n  <div class=\"reports-page\">\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">安全报告</h1>\n      <p class=\"page-subtitle\">查看和生成安全漏洞相关报告</p>\n    </div>\n\n    <el-card shadow=\"hover\" class=\"report-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2 class=\"section-title\">报告生成</h2>\n        </div>\n      </template>\n\n      <div class=\"report-options\">\n        <el-form :model=\"reportForm\" label-position=\"top\">\n          <el-row :gutter=\"20\">\n            <el-col :xs=\"24\" :sm=\"12\">\n              <el-form-item label=\"报告类型\">\n                <el-select v-model=\"reportForm.type\" placeholder=\"选择报告类型\" style=\"width: 100%\">\n                  <el-option label=\"漏洞摘要报告\" value=\"summary\" />\n                  <el-option label=\"详细漏洞报告\" value=\"detailed\" />\n                  <el-option label=\"合规性报告\" value=\"compliance\" />\n                  <el-option label=\"趋势分析报告\" value=\"trend\" />\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :xs=\"24\" :sm=\"12\">\n              <el-form-item label=\"报告格式\">\n                <el-select v-model=\"reportForm.format\" placeholder=\"选择输出格式\" style=\"width: 100%\">\n                  <el-option label=\"PDF文档\" value=\"pdf\" />\n                  <el-option label=\"Excel工作表\" value=\"excel\" />\n                  <el-option label=\"Word文档\" value=\"word\" />\n                  <el-option label=\"HTML网页\" value=\"html\" />\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n\n          <el-form-item label=\"报告时间范围\">\n            <el-date-picker\n              v-model=\"reportForm.dateRange\"\n              type=\"daterange\"\n              range-separator=\"至\"\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              style=\"width: 100%\"\n            />\n          </el-form-item>\n\n          <el-form-item label=\"包含的严重程度\">\n            <el-checkbox-group v-model=\"reportForm.severities\">\n              <el-checkbox label=\"critical\">严重</el-checkbox>\n              <el-checkbox label=\"high\">高危</el-checkbox>\n              <el-checkbox label=\"medium\">中危</el-checkbox>\n              <el-checkbox label=\"low\">低危</el-checkbox>\n              <el-checkbox label=\"info\">信息</el-checkbox>\n            </el-checkbox-group>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"generateReport\" :loading=\"generating\">\n              生成报告\n            </el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n\n    <el-card shadow=\"hover\" class=\"recent-reports-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2 class=\"section-title\">最近生成的报告</h2>\n        </div>\n      </template>\n\n      <el-table \n        :data=\"reports\" \n        style=\"width: 100%\"\n        v-loading=\"loading\"\n      >\n        <el-table-column prop=\"name\" label=\"报告名称\" min-width=\"180\" />\n        <el-table-column prop=\"type\" label=\"类型\" width=\"120\">\n          <template #default=\"scope\">\n            <el-tag>{{ getReportTypeText(scope.row.type) }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"format\" label=\"格式\" width=\"100\">\n          <template #default=\"scope\">\n            <span class=\"format-badge\">{{ scope.row.format.toUpperCase() }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createdAt\" label=\"生成时间\" width=\"160\">\n          <template #default=\"scope\">\n            {{ formatDate(scope.row.createdAt) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button \n              size=\"small\" \n              type=\"primary\" \n              link\n              @click=\"downloadReport(scope.row)\"\n            >\n              下载\n            </el-button>\n            <el-button \n              size=\"small\" \n              type=\"danger\" \n              link\n              @click=\"confirmDelete(scope.row)\"\n            >\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div v-if=\"reports.length === 0 && !loading\" class=\"no-reports\">\n        <el-empty description=\"暂无报告记录\" />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\n\nexport default {\n  name: 'Reports',\n  \n  setup() {\n    // 加载状态\n    const loading = ref(false)\n    const generating = ref(false)\n    \n    // 报告生成表单\n    const reportForm = reactive({\n      type: 'summary',\n      format: 'pdf',\n      dateRange: [],\n      severities: ['critical', 'high', 'medium']\n    })\n    \n    // 模拟报告数据\n    const reports = ref([\n      {\n        id: '1',\n        name: '2023年第二季度漏洞摘要报告',\n        type: 'summary',\n        format: 'pdf',\n        createdAt: '2023-07-01T08:30:00Z',\n        url: '#'\n      },\n      {\n        id: '2',\n        name: '网络安全合规性检查报告',\n        type: 'compliance',\n        format: 'word',\n        createdAt: '2023-06-15T14:20:00Z',\n        url: '#'\n      },\n      {\n        id: '3',\n        name: '漏洞详细分析报告',\n        type: 'detailed',\n        format: 'excel',\n        createdAt: '2023-06-10T11:45:00Z',\n        url: '#'\n      }\n    ])\n    \n    // 获取报告类型文本\n    const getReportTypeText = (type) => {\n      const typeMap = {\n        summary: '摘要报告',\n        detailed: '详细报告',\n        compliance: '合规报告',\n        trend: '趋势分析'\n      }\n      return typeMap[type] || type\n    }\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      const date = new Date(dateString)\n      return date.toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }\n    \n    // 生成报告\n    const generateReport = () => {\n      if (!reportForm.dateRange || reportForm.dateRange.length !== 2) {\n        ElMessage.warning('请选择报告时间范围')\n        return\n      }\n      \n      if (reportForm.severities.length === 0) {\n        ElMessage.warning('请至少选择一个严重程度级别')\n        return\n      }\n      \n      generating.value = true\n      \n      // 模拟报告生成过程\n      setTimeout(() => {\n        generating.value = false\n        \n        const reportTypes = {\n          summary: '漏洞摘要报告',\n          detailed: '详细漏洞报告',\n          compliance: '合规性报告',\n          trend: '趋势分析报告'\n        }\n        \n        // 创建新报告对象\n        const newReport = {\n          id: Date.now().toString(),\n          name: `${new Date().getFullYear()}年${reportTypes[reportForm.type]}`,\n          type: reportForm.type,\n          format: reportForm.format,\n          createdAt: new Date().toISOString(),\n          url: '#'\n        }\n        \n        // 添加到报告列表\n        reports.value.unshift(newReport)\n        \n        ElMessage.success('报告生成成功')\n      }, 2000)\n    }\n    \n    // 下载报告\n    const downloadReport = (report) => {\n      // 实际应用中，这里应该进行实际的下载操作\n      ElMessage.success(`开始下载：${report.name}.${report.format}`)\n    }\n    \n    // 确认删除\n    const confirmDelete = (report) => {\n      ElMessageBox.confirm(\n        `确定要删除报告\"${report.name}\"吗？`,\n        '警告',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(() => {\n        deleteReport(report.id)\n      }).catch(() => {\n        // 用户取消删除\n      })\n    }\n    \n    // 删除报告\n    const deleteReport = (id) => {\n      const index = reports.value.findIndex(r => r.id === id)\n      if (index !== -1) {\n        reports.value.splice(index, 1)\n        ElMessage.success('报告已删除')\n      }\n    }\n    \n    return {\n      loading,\n      generating,\n      reportForm,\n      reports,\n      getReportTypeText,\n      formatDate,\n      generateReport,\n      downloadReport,\n      confirmDelete\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.reports-page {\n  margin-bottom: 40px;\n}\n\n.page-header {\n  margin-bottom: 24px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.page-subtitle {\n  color: #909399;\n  margin: 4px 0 0;\n}\n\n.report-card,\n.recent-reports-card {\n  margin-bottom: 24px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.section-title {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.report-options {\n  padding: 10px 0;\n}\n\n.format-badge {\n  background-color: #f0f9eb;\n  color: #67c23a;\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.no-reports {\n  padding: 30px 0;\n  text-align: center;\n}\n\n@media (max-width: 768px) {\n  .el-date-picker {\n    width: 100%;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}