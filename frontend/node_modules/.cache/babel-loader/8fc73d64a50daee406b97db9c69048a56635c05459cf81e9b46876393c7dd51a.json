{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  name: 'VulnerabilityImport',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    // 当前选中的导入标签页\n    const activeTab = ref('file');\n\n    // 标准文件导入\n    const fileList = ref([]);\n    const importOptions = reactive({\n      duplicateStrategy: 'skip',\n      defaultSeverity: 'medium',\n      defaultStatus: 'open',\n      sendNotifications: true\n    });\n\n    // 扫描结果导入\n    const scanFileList = ref([]);\n    const scanImportOptions = reactive({\n      scanTool: 'auto',\n      minSeverity: '',\n      defaultStatus: 'open',\n      skipExisting: true,\n      sendNotifications: true\n    });\n\n    // 导入状态\n    const importing = ref(false);\n    const progressDialogVisible = ref(false);\n    const importProgress = ref(0);\n    const progressMessage = ref('正在准备导入...');\n    const importStats = reactive({\n      success: 0,\n      failed: 0,\n      skipped: 0\n    });\n\n    // 导入的漏洞ID列表\n    const importedIds = ref([]);\n\n    // 处理文件变化\n    const handleFileChange = file => {\n      fileList.value = [file];\n    };\n    const handleScanFileChange = file => {\n      scanFileList.value = [file];\n    };\n\n    // 导入前检查\n    const beforeImport = file => {\n      // 检查文件大小\n      const maxSize = activeTab.value === 'file' ? 10 : 20; // MB\n      const isValidSize = file.size / 1024 / 1024 < maxSize;\n      if (!isValidSize) {\n        ElMessage.error(`文件大小不能超过${maxSize}MB!`);\n        return false;\n      }\n\n      // 检查文件类型\n      let validExtensions = [];\n      if (activeTab.value === 'file') {\n        validExtensions = ['.csv', '.xlsx', '.xls', '.json', '.xml'];\n      } else {\n        validExtensions = ['.nessus', '.xml', '.json'];\n      }\n      const fileName = file.name.toLowerCase();\n      const isValidType = validExtensions.some(ext => fileName.endsWith(ext));\n      if (!isValidType) {\n        ElMessage.error('不支持的文件类型!');\n        return false;\n      }\n      return true;\n    };\n\n    // 处理导入成功\n    const handleImportSuccess = response => {\n      importing.value = false;\n      importProgress.value = 100;\n      progressMessage.value = '导入完成!';\n\n      // 更新导入统计信息\n      Object.assign(importStats, response.data.stats);\n\n      // 保存导入的漏洞ID列表，用于跳转查看\n      if (response.data.ids) {\n        importedIds.value = response.data.ids;\n      }\n      ElMessage.success('漏洞导入成功');\n    };\n\n    // 处理导入错误\n    const handleImportError = error => {\n      importing.value = false;\n      progressDialogVisible.value = false;\n      let errorMessage = '导入失败';\n      if (error && error.message) {\n        errorMessage += ': ' + error.message;\n      }\n      ElMessage.error(errorMessage);\n    };\n\n    // 开始标准文件导入\n    const startImport = () => {\n      if (fileList.value.length === 0) {\n        ElMessage.warning('请选择要导入的文件');\n        return;\n      }\n      ElMessageBox.confirm('确定要开始导入吗？根据数据量大小，这可能需要一些时间。', '开始导入', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'info'\n      }).then(() => {\n        importing.value = true;\n        progressDialogVisible.value = true;\n        importProgress.value = 0;\n        progressMessage.value = '正在解析文件并导入数据...';\n\n        // 注意：这里只是模拟导入进度\n        // 实际应用中应该使用WebSocket或轮询来获取实时进度\n        simulateImportProgress();\n\n        // 这里应该提交表单，触发文件上传\n        // 为了演示，我们使用setTimeout模拟上传过程\n        setTimeout(() => {\n          const uploadInstance = document.querySelector('.upload-area .el-upload').querySelector('input[type=file]');\n          if (uploadInstance && uploadInstance.files.length > 0) {\n            // 触发自动上传\n            // 在实际实现中，这里应该调用el-upload的submit方法\n          }\n        }, 500);\n      }).catch(() => {\n        // 用户取消导入\n      });\n    };\n\n    // 开始扫描结果导入\n    const startScanImport = () => {\n      if (scanFileList.value.length === 0) {\n        ElMessage.warning('请选择扫描结果文件');\n        return;\n      }\n      ElMessageBox.confirm('确定要开始导入扫描结果吗？根据数据量大小，这可能需要一些时间。', '开始导入', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'info'\n      }).then(() => {\n        importing.value = true;\n        progressDialogVisible.value = true;\n        importProgress.value = 0;\n        progressMessage.value = '正在解析扫描结果...';\n\n        // 注意：这里只是模拟导入进度\n        simulateImportProgress();\n\n        // 这里应该提交表单，触发文件上传\n        setTimeout(() => {\n          const uploadInstance = document.querySelector('.upload-area .el-upload').querySelector('input[type=file]');\n          if (uploadInstance && uploadInstance.files.length > 0) {\n            // 触发自动上传\n          }\n        }, 500);\n      }).catch(() => {\n        // 用户取消导入\n      });\n    };\n\n    // 模拟导入进度\n    const simulateImportProgress = () => {\n      let currentProgress = 0;\n      const interval = setInterval(() => {\n        currentProgress += Math.random() * 10;\n        if (currentProgress >= 90) {\n          currentProgress = 90;\n          clearInterval(interval);\n          progressMessage.value = '即将完成...';\n        }\n        importProgress.value = Math.floor(currentProgress);\n      }, 800);\n    };\n\n    // 下载模板文件\n    const downloadTemplate = () => {\n      // 实际应用中，这里应该指向一个模板文件的URL\n      ElMessage.info('模板下载功能即将上线，敬请期待');\n    };\n\n    // 关闭进度对话框\n    const closeProgressDialog = () => {\n      progressDialogVisible.value = false;\n    };\n\n    // 查看导入的漏洞\n    const viewImportedItems = () => {\n      progressDialogVisible.value = false;\n\n      // 如果有导入的漏洞ID，可以跳转到过滤后的漏洞列表\n      if (importedIds.value && importedIds.value.length > 0) {\n        router.push({\n          path: '/vulnerabilities',\n          query: {\n            importBatch: Math.random().toString(36).substring(2, 15)\n          }\n        });\n      } else {\n        router.push('/vulnerabilities');\n      }\n    };\n\n    // 取消导入\n    const cancel = () => {\n      router.push('/vulnerabilities');\n    };\n    return {\n      activeTab,\n      fileList,\n      importOptions,\n      scanFileList,\n      scanImportOptions,\n      importing,\n      progressDialogVisible,\n      importProgress,\n      progressMessage,\n      importStats,\n      handleFileChange,\n      handleScanFileChange,\n      beforeImport,\n      handleImportSuccess,\n      handleImportError,\n      startImport,\n      startScanImport,\n      downloadTemplate,\n      closeProgressDialog,\n      viewImportedItems,\n      cancel\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","useStore","useRouter","ElMessage","ElMessageBox","name","setup","store","router","activeTab","fileList","importOptions","duplicateStrategy","defaultSeverity","defaultStatus","sendNotifications","scanFileList","scanImportOptions","scanTool","minSeverity","skipExisting","importing","progressDialogVisible","importProgress","progressMessage","importStats","success","failed","skipped","importedIds","handleFileChange","file","value","handleScanFileChange","beforeImport","maxSize","isValidSize","size","error","validExtensions","fileName","toLowerCase","isValidType","some","ext","endsWith","handleImportSuccess","response","Object","assign","data","stats","ids","handleImportError","errorMessage","message","startImport","length","warning","confirm","confirmButtonText","cancelButtonText","type","then","simulateImportProgress","setTimeout","uploadInstance","document","querySelector","files","catch","startScanImport","currentProgress","interval","setInterval","Math","random","clearInterval","floor","downloadTemplate","info","closeProgressDialog","viewImportedItems","push","path","query","importBatch","toString","substring","cancel"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/vulnerabilities/VulnerabilityImport.vue"],"sourcesContent":["<template>\n  <div class=\"vulnerability-import\">\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">导入漏洞</h1>\n      <p class=\"page-subtitle\">批量导入安全漏洞数据</p>\n    </div>\n\n    <el-card shadow=\"hover\" class=\"import-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>选择导入方式</span>\n        </div>\n      </template>\n\n      <el-tabs v-model=\"activeTab\" type=\"card\" class=\"import-tabs\">\n        <!-- 文件导入 -->\n        <el-tab-pane label=\"文件导入\" name=\"file\">\n          <div class=\"tab-content\">\n            <div class=\"import-description\">\n              <p>支持从以下格式的文件导入漏洞数据：</p>\n              <ul>\n                <li>CSV文件 (.csv)</li>\n                <li>Excel文件 (.xlsx, .xls)</li>\n                <li>JSON文件 (.json)</li>\n                <li>XML文件 (.xml)</li>\n              </ul>\n              <p>请确保文件包含必要的字段，如漏洞标题、严重程度、描述等。您可以\n                <a href=\"#\" @click.prevent=\"downloadTemplate\">下载模板文件</a>\n                来了解正确的格式。\n              </p>\n              <el-alert\n                type=\"warning\"\n                show-icon\n                :closable=\"false\"\n              >\n                <p>导入大量数据可能需要一些时间，请耐心等待并不要刷新页面。</p>\n              </el-alert>\n            </div>\n\n            <el-upload\n              class=\"upload-area\"\n              drag\n              action=\"/api/vulnerabilities/import\"\n              :auto-upload=\"false\"\n              :on-change=\"handleFileChange\"\n              :on-success=\"handleImportSuccess\"\n              :on-error=\"handleImportError\"\n              :before-upload=\"beforeImport\"\n              :file-list=\"fileList\"\n              :limit=\"1\"\n            >\n              <i class=\"el-icon-upload\"></i>\n              <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n              <template #tip>\n                <div class=\"el-upload__tip\">支持CSV、Excel、JSON和XML文件，文件大小不超过10MB</div>\n              </template>\n            </el-upload>\n\n            <div class=\"import-options\">\n              <h3>导入选项</h3>\n              <el-form :model=\"importOptions\" label-width=\"180px\">\n                <el-form-item label=\"导入重复项时\">\n                  <el-radio-group v-model=\"importOptions.duplicateStrategy\">\n                    <el-radio label=\"skip\">跳过重复项</el-radio>\n                    <el-radio label=\"update\">更新重复项</el-radio>\n                    <el-radio label=\"create_new\">创建为新记录</el-radio>\n                  </el-radio-group>\n                </el-form-item>\n                \n                <el-form-item label=\"默认严重程度\">\n                  <el-select v-model=\"importOptions.defaultSeverity\" placeholder=\"选择默认严重程度\">\n                    <el-option label=\"未指定\" value=\"\" />\n                    <el-option label=\"严重\" value=\"critical\" />\n                    <el-option label=\"高危\" value=\"high\" />\n                    <el-option label=\"中危\" value=\"medium\" />\n                    <el-option label=\"低危\" value=\"low\" />\n                    <el-option label=\"信息\" value=\"info\" />\n                  </el-select>\n                  <div class=\"option-description\">当导入数据未指定严重程度时使用</div>\n                </el-form-item>\n                \n                <el-form-item label=\"默认状态\">\n                  <el-select v-model=\"importOptions.defaultStatus\" placeholder=\"选择默认状态\">\n                    <el-option label=\"开放\" value=\"open\" />\n                    <el-option label=\"处理中\" value=\"in_progress\" />\n                    <el-option label=\"已解决\" value=\"resolved\" />\n                    <el-option label=\"已关闭\" value=\"closed\" />\n                    <el-option label=\"误报\" value=\"false_positive\" />\n                  </el-select>\n                  <div class=\"option-description\">当导入数据未指定状态时使用</div>\n                </el-form-item>\n                \n                <el-form-item label=\"发送通知\">\n                  <el-switch v-model=\"importOptions.sendNotifications\" />\n                  <div class=\"option-description\">完成导入后是否发送通知</div>\n                </el-form-item>\n              </el-form>\n            </div>\n          </div>\n\n          <div class=\"import-actions\">\n            <el-button @click=\"cancel\">取消</el-button>\n            <el-button type=\"primary\" @click=\"startImport\" :loading=\"importing\" :disabled=\"fileList.length === 0\">\n              开始导入\n            </el-button>\n          </div>\n        </el-tab-pane>\n\n        <!-- 扫描结果导入 -->\n        <el-tab-pane label=\"扫描结果导入\" name=\"scan\">\n          <div class=\"tab-content\">\n            <div class=\"import-description\">\n              <p>支持从以下安全扫描工具的报告中导入漏洞数据：</p>\n              <ul>\n                <li>Nessus (.nessus)</li>\n                <li>OpenVAS/Greenbone (.xml)</li>\n                <li>OWASP ZAP (.xml, .json)</li>\n                <li>Qualys (.xml)</li>\n                <li>Acunetix (.xml)</li>\n                <li>Burp Suite (.xml)</li>\n              </ul>\n              <p>系统会自动解析扫描工具的报告格式，并将漏洞信息导入到平台中。</p>\n              <el-alert\n                type=\"info\"\n                show-icon\n                :closable=\"false\"\n              >\n                <p>导入后请检查数据准确性，不同扫描工具的数据格式可能略有差异。</p>\n              </el-alert>\n            </div>\n\n            <el-upload\n              class=\"upload-area\"\n              drag\n              action=\"/api/vulnerabilities/import/scan\"\n              :auto-upload=\"false\"\n              :on-change=\"handleScanFileChange\"\n              :on-success=\"handleImportSuccess\"\n              :on-error=\"handleImportError\"\n              :before-upload=\"beforeImport\"\n              :file-list=\"scanFileList\"\n              :limit=\"1\"\n            >\n              <i class=\"el-icon-upload\"></i>\n              <div class=\"el-upload__text\">将扫描结果文件拖到此处，或<em>点击上传</em></div>\n              <template #tip>\n                <div class=\"el-upload__tip\">支持主流安全扫描工具的报告格式，文件大小不超过20MB</div>\n              </template>\n            </el-upload>\n\n            <div class=\"import-options\">\n              <h3>导入选项</h3>\n              <el-form :model=\"scanImportOptions\" label-width=\"180px\">\n                <el-form-item label=\"选择扫描工具\">\n                  <el-select v-model=\"scanImportOptions.scanTool\" placeholder=\"选择扫描工具类型\">\n                    <el-option label=\"自动检测\" value=\"auto\" />\n                    <el-option label=\"Nessus\" value=\"nessus\" />\n                    <el-option label=\"OpenVAS/Greenbone\" value=\"openvas\" />\n                    <el-option label=\"OWASP ZAP\" value=\"zap\" />\n                    <el-option label=\"Qualys\" value=\"qualys\" />\n                    <el-option label=\"Acunetix\" value=\"acunetix\" />\n                    <el-option label=\"Burp Suite\" value=\"burp\" />\n                  </el-select>\n                </el-form-item>\n                \n                <el-form-item label=\"最低严重程度\">\n                  <el-select v-model=\"scanImportOptions.minSeverity\" placeholder=\"选择最低严重程度\">\n                    <el-option label=\"所有级别\" value=\"\" />\n                    <el-option label=\"严重\" value=\"critical\" />\n                    <el-option label=\"高危\" value=\"high\" />\n                    <el-option label=\"中危\" value=\"medium\" />\n                    <el-option label=\"低危\" value=\"low\" />\n                    <el-option label=\"信息\" value=\"info\" />\n                  </el-select>\n                  <div class=\"option-description\">仅导入指定严重程度及以上的漏洞</div>\n                </el-form-item>\n                \n                <el-form-item label=\"默认状态\">\n                  <el-select v-model=\"scanImportOptions.defaultStatus\" placeholder=\"选择默认状态\">\n                    <el-option label=\"开放\" value=\"open\" />\n                    <el-option label=\"处理中\" value=\"in_progress\" />\n                    <el-option label=\"已解决\" value=\"resolved\" />\n                    <el-option label=\"已关闭\" value=\"closed\" />\n                    <el-option label=\"误报\" value=\"false_positive\" />\n                  </el-select>\n                </el-form-item>\n                \n                <el-form-item label=\"忽略已存在的漏洞\">\n                  <el-switch v-model=\"scanImportOptions.skipExisting\" />\n                </el-form-item>\n                \n                <el-form-item label=\"发送通知\">\n                  <el-switch v-model=\"scanImportOptions.sendNotifications\" />\n                </el-form-item>\n              </el-form>\n            </div>\n          </div>\n\n          <div class=\"import-actions\">\n            <el-button @click=\"cancel\">取消</el-button>\n            <el-button type=\"primary\" @click=\"startScanImport\" :loading=\"importing\" :disabled=\"scanFileList.length === 0\">\n              开始导入\n            </el-button>\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n\n    <!-- 导入进度对话框 -->\n    <el-dialog\n      title=\"导入进度\"\n      v-model=\"progressDialogVisible\"\n      width=\"500px\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :show-close=\"false\"\n    >\n      <div class=\"progress-dialog-content\">\n        <el-progress\n          :percentage=\"importProgress\"\n          :status=\"importProgress === 100 ? 'success' : ''\"\n          :stroke-width=\"20\"\n        ></el-progress>\n        <div class=\"progress-info\">\n          <p>{{ progressMessage }}</p>\n          <p v-if=\"importProgress === 100\">\n            成功导入: {{ importStats.success }} 条记录\n            <br>\n            失败: {{ importStats.failed }} 条记录\n            <br>\n            重复跳过: {{ importStats.skipped }} 条记录\n          </p>\n        </div>\n      </div>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button v-if=\"importProgress === 100\" @click=\"closeProgressDialog\">关闭</el-button>\n          <el-button type=\"primary\" v-if=\"importProgress === 100\" @click=\"viewImportedItems\">\n            查看导入的漏洞\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\n\nexport default {\n  name: 'VulnerabilityImport',\n  \n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    \n    // 当前选中的导入标签页\n    const activeTab = ref('file')\n    \n    // 标准文件导入\n    const fileList = ref([])\n    const importOptions = reactive({\n      duplicateStrategy: 'skip',\n      defaultSeverity: 'medium',\n      defaultStatus: 'open',\n      sendNotifications: true\n    })\n    \n    // 扫描结果导入\n    const scanFileList = ref([])\n    const scanImportOptions = reactive({\n      scanTool: 'auto',\n      minSeverity: '',\n      defaultStatus: 'open',\n      skipExisting: true,\n      sendNotifications: true\n    })\n    \n    // 导入状态\n    const importing = ref(false)\n    const progressDialogVisible = ref(false)\n    const importProgress = ref(0)\n    const progressMessage = ref('正在准备导入...')\n    const importStats = reactive({\n      success: 0,\n      failed: 0,\n      skipped: 0\n    })\n    \n    // 导入的漏洞ID列表\n    const importedIds = ref([])\n    \n    // 处理文件变化\n    const handleFileChange = (file) => {\n      fileList.value = [file]\n    }\n    \n    const handleScanFileChange = (file) => {\n      scanFileList.value = [file]\n    }\n    \n    // 导入前检查\n    const beforeImport = (file) => {\n      // 检查文件大小\n      const maxSize = activeTab.value === 'file' ? 10 : 20 // MB\n      const isValidSize = file.size / 1024 / 1024 < maxSize\n      \n      if (!isValidSize) {\n        ElMessage.error(`文件大小不能超过${maxSize}MB!`)\n        return false\n      }\n      \n      // 检查文件类型\n      let validExtensions = []\n      \n      if (activeTab.value === 'file') {\n        validExtensions = ['.csv', '.xlsx', '.xls', '.json', '.xml']\n      } else {\n        validExtensions = ['.nessus', '.xml', '.json']\n      }\n      \n      const fileName = file.name.toLowerCase()\n      const isValidType = validExtensions.some(ext => fileName.endsWith(ext))\n      \n      if (!isValidType) {\n        ElMessage.error('不支持的文件类型!')\n        return false\n      }\n      \n      return true\n    }\n    \n    // 处理导入成功\n    const handleImportSuccess = (response) => {\n      importing.value = false\n      importProgress.value = 100\n      progressMessage.value = '导入完成!'\n      \n      // 更新导入统计信息\n      Object.assign(importStats, response.data.stats)\n      \n      // 保存导入的漏洞ID列表，用于跳转查看\n      if (response.data.ids) {\n        importedIds.value = response.data.ids\n      }\n      \n      ElMessage.success('漏洞导入成功')\n    }\n    \n    // 处理导入错误\n    const handleImportError = (error) => {\n      importing.value = false\n      progressDialogVisible.value = false\n      \n      let errorMessage = '导入失败'\n      if (error && error.message) {\n        errorMessage += ': ' + error.message\n      }\n      \n      ElMessage.error(errorMessage)\n    }\n    \n    // 开始标准文件导入\n    const startImport = () => {\n      if (fileList.value.length === 0) {\n        ElMessage.warning('请选择要导入的文件')\n        return\n      }\n      \n      ElMessageBox.confirm(\n        '确定要开始导入吗？根据数据量大小，这可能需要一些时间。',\n        '开始导入',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'info'\n        }\n      ).then(() => {\n        importing.value = true\n        progressDialogVisible.value = true\n        importProgress.value = 0\n        progressMessage.value = '正在解析文件并导入数据...'\n        \n        // 注意：这里只是模拟导入进度\n        // 实际应用中应该使用WebSocket或轮询来获取实时进度\n        simulateImportProgress()\n        \n        // 这里应该提交表单，触发文件上传\n        // 为了演示，我们使用setTimeout模拟上传过程\n        setTimeout(() => {\n          const uploadInstance = document.querySelector('.upload-area .el-upload').querySelector('input[type=file]')\n          if (uploadInstance && uploadInstance.files.length > 0) {\n            // 触发自动上传\n            // 在实际实现中，这里应该调用el-upload的submit方法\n          }\n        }, 500)\n      }).catch(() => {\n        // 用户取消导入\n      })\n    }\n    \n    // 开始扫描结果导入\n    const startScanImport = () => {\n      if (scanFileList.value.length === 0) {\n        ElMessage.warning('请选择扫描结果文件')\n        return\n      }\n      \n      ElMessageBox.confirm(\n        '确定要开始导入扫描结果吗？根据数据量大小，这可能需要一些时间。',\n        '开始导入',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'info'\n        }\n      ).then(() => {\n        importing.value = true\n        progressDialogVisible.value = true\n        importProgress.value = 0\n        progressMessage.value = '正在解析扫描结果...'\n        \n        // 注意：这里只是模拟导入进度\n        simulateImportProgress()\n        \n        // 这里应该提交表单，触发文件上传\n        setTimeout(() => {\n          const uploadInstance = document.querySelector('.upload-area .el-upload').querySelector('input[type=file]')\n          if (uploadInstance && uploadInstance.files.length > 0) {\n            // 触发自动上传\n          }\n        }, 500)\n      }).catch(() => {\n        // 用户取消导入\n      })\n    }\n    \n    // 模拟导入进度\n    const simulateImportProgress = () => {\n      let currentProgress = 0\n      const interval = setInterval(() => {\n        currentProgress += Math.random() * 10\n        if (currentProgress >= 90) {\n          currentProgress = 90\n          clearInterval(interval)\n          progressMessage.value = '即将完成...'\n        }\n        importProgress.value = Math.floor(currentProgress)\n      }, 800)\n    }\n    \n    // 下载模板文件\n    const downloadTemplate = () => {\n      // 实际应用中，这里应该指向一个模板文件的URL\n      ElMessage.info('模板下载功能即将上线，敬请期待')\n    }\n    \n    // 关闭进度对话框\n    const closeProgressDialog = () => {\n      progressDialogVisible.value = false\n    }\n    \n    // 查看导入的漏洞\n    const viewImportedItems = () => {\n      progressDialogVisible.value = false\n      \n      // 如果有导入的漏洞ID，可以跳转到过滤后的漏洞列表\n      if (importedIds.value && importedIds.value.length > 0) {\n        router.push({\n          path: '/vulnerabilities',\n          query: { importBatch: Math.random().toString(36).substring(2, 15) }\n        })\n      } else {\n        router.push('/vulnerabilities')\n      }\n    }\n    \n    // 取消导入\n    const cancel = () => {\n      router.push('/vulnerabilities')\n    }\n    \n    return {\n      activeTab,\n      fileList,\n      importOptions,\n      scanFileList,\n      scanImportOptions,\n      importing,\n      progressDialogVisible,\n      importProgress,\n      progressMessage,\n      importStats,\n      handleFileChange,\n      handleScanFileChange,\n      beforeImport,\n      handleImportSuccess,\n      handleImportError,\n      startImport,\n      startScanImport,\n      downloadTemplate,\n      closeProgressDialog,\n      viewImportedItems,\n      cancel\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.vulnerability-import {\n  max-width: 1000px;\n  margin: 0 auto 40px;\n}\n\n.page-header {\n  margin-bottom: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.page-subtitle {\n  color: #909399;\n  margin: 4px 0 0;\n}\n\n.import-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  span {\n    font-weight: 600;\n  }\n}\n\n.import-tabs {\n  margin-top: 10px;\n}\n\n.tab-content {\n  padding: 20px 0;\n}\n\n.import-description {\n  margin-bottom: 20px;\n  \n  p {\n    margin-bottom: 12px;\n    line-height: 1.6;\n  }\n  \n  ul {\n    padding-left: 20px;\n    margin-bottom: 12px;\n    \n    li {\n      margin-bottom: 6px;\n    }\n  }\n  \n  a {\n    color: #409EFF;\n    text-decoration: none;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n  \n  .el-alert {\n    margin-top: 16px;\n  }\n}\n\n.upload-area {\n  margin: 20px 0;\n  display: flex;\n  flex-direction: column;\n  \n  ::v-deep(.el-upload-dragger) {\n    width: 100%;\n  }\n}\n\n.import-options {\n  margin: 30px 0;\n  \n  h3 {\n    font-size: 16px;\n    font-weight: 600;\n    margin-bottom: 16px;\n    color: #303133;\n  }\n  \n  .option-description {\n    color: #909399;\n    font-size: 12px;\n    margin-top: 4px;\n  }\n}\n\n.import-actions {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n  \n  .el-button {\n    min-width: 100px;\n    margin-left: 12px;\n  }\n}\n\n.progress-dialog-content {\n  padding: 10px;\n  \n  .progress-info {\n    margin-top: 20px;\n    text-align: center;\n    \n    p {\n      margin-bottom: 10px;\n      color: #606266;\n    }\n  }\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}