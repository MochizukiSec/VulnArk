{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'Profile',\n  setup() {\n    const store = useStore();\n    const profileForm = ref(null);\n\n    // 获取当前用户\n    const user = computed(() => store.getters['auth/currentUser'] || {});\n\n    // 用户首字母缩写\n    const userInitials = computed(() => {\n      if (user.value.firstName && user.value.lastName) {\n        return `${user.value.firstName.charAt(0)}${user.value.lastName.charAt(0)}`.toUpperCase();\n      }\n      return user.value.username ? user.value.username.charAt(0).toUpperCase() : '?';\n    });\n\n    // 表单数据\n    const profileData = reactive({\n      firstName: '',\n      lastName: '',\n      department: '',\n      profilePicture: '',\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n\n    // 表单验证规则\n    const rules = {\n      firstName: [{\n        required: true,\n        message: '请输入名',\n        trigger: 'blur'\n      }],\n      lastName: [{\n        required: true,\n        message: '请输入姓',\n        trigger: 'blur'\n      }],\n      newPassword: [{\n        min: 8,\n        message: '密码长度不能少于8个字符',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        validator: (rule, value, callback) => {\n          if (profileData.newPassword && value !== profileData.newPassword) {\n            callback(new Error('两次输入的密码不一致'));\n          } else {\n            callback();\n          }\n        },\n        trigger: 'blur'\n      }]\n    };\n\n    // 加载状态和错误信息\n    const loading = computed(() => store.getters['user/isLoading']);\n    const error = computed(() => store.getters['user/error']);\n\n    // 角色格式化\n    const formatRole = role => {\n      switch (role) {\n        case 'admin':\n          return '管理员';\n        case 'user':\n          return '普通用户';\n        case 'viewer':\n          return '仅查看用户';\n        default:\n          return role;\n      }\n    };\n\n    // 初始化表单\n    const initForm = () => {\n      // 填充个人资料表单\n      profileData.firstName = user.value.firstName || '';\n      profileData.lastName = user.value.lastName || '';\n      profileData.department = user.value.department || '';\n      profileData.profilePicture = user.value.profilePicture || '';\n\n      // 清空密码字段\n      profileData.currentPassword = '';\n      profileData.newPassword = '';\n      profileData.confirmPassword = '';\n    };\n\n    // 提交表单\n    const submitForm = async () => {\n      if (!profileForm.value) return;\n      await profileForm.value.validate(async valid => {\n        if (valid) {\n          // 构建更新数据\n          const updateData = {};\n\n          // 只包含修改过的基本信息字段\n          if (profileData.firstName !== user.value.firstName) {\n            updateData.firstName = profileData.firstName;\n          }\n          if (profileData.lastName !== user.value.lastName) {\n            updateData.lastName = profileData.lastName;\n          }\n          if (profileData.department !== user.value.department) {\n            updateData.department = profileData.department;\n          }\n          if (profileData.profilePicture !== user.value.profilePicture) {\n            updateData.profilePicture = profileData.profilePicture;\n          }\n\n          // 如果有提供密码字段，添加到更新数据\n          if (profileData.currentPassword && profileData.newPassword) {\n            updateData.currentPassword = profileData.currentPassword;\n            updateData.newPassword = profileData.newPassword;\n          }\n\n          // 只有在有数据更新时才发送请求\n          if (Object.keys(updateData).length > 0) {\n            try {\n              await store.dispatch('user/updateProfile', updateData);\n              initForm(); // 重新加载表单\n            } catch (error) {\n              // 错误已在store中处理\n            }\n          } else {\n            // 如果没有改动\n            store.dispatch('addNotification', {\n              type: 'info',\n              message: '没有检测到任何改动',\n              title: '信息'\n            });\n          }\n        }\n      });\n    };\n\n    // 页面加载时初始化\n    onMounted(() => {\n      initForm();\n    });\n    return {\n      user,\n      userInitials,\n      profileForm,\n      profileData,\n      rules,\n      loading,\n      error,\n      formatRole,\n      submitForm\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useStore","name","setup","store","profileForm","user","getters","userInitials","value","firstName","lastName","charAt","toUpperCase","username","profileData","department","profilePicture","currentPassword","newPassword","confirmPassword","rules","required","message","trigger","min","validator","rule","callback","Error","loading","error","formatRole","role","initForm","submitForm","validate","valid","updateData","Object","keys","length","dispatch","type","title"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/user/Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <el-row :gutter=\"20\">\n      <el-col :xs=\"24\" :md=\"8\">\n        <!-- 个人资料卡片 -->\n        <el-card shadow=\"hover\" class=\"profile-card\">\n          <div class=\"profile-card-header\">\n            <el-avatar :size=\"90\" :src=\"user.profilePicture\">\n              {{ userInitials }}\n            </el-avatar>\n            <h2 class=\"user-name\">{{ `${user.firstName} ${user.lastName}` }}</h2>\n            <p class=\"user-role\">{{ formatRole(user.role) }}</p>\n          </div>\n          \n          <div class=\"profile-info\">\n            <div class=\"info-item\">\n              <span class=\"info-label\">用户名</span>\n              <span class=\"info-value\">{{ user.username }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"info-label\">邮箱</span>\n              <span class=\"info-value\">{{ user.email }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"info-label\">部门</span>\n              <span class=\"info-value\">{{ user.department || '未设置' }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"info-label\">加入时间</span>\n              <span class=\"info-value\">{{ $filters.formatDateOnly(user.createdAt) }}</span>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :xs=\"24\" :md=\"16\">\n        <!-- 编辑个人资料 -->\n        <el-card shadow=\"hover\" class=\"edit-profile-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <h3>个人资料设置</h3>\n            </div>\n          </template>\n          \n          <el-form \n            ref=\"profileForm\" \n            :model=\"profileData\" \n            :rules=\"rules\" \n            label-position=\"top\"\n          >\n            <el-alert \n              v-if=\"error\" \n              :title=\"error\" \n              type=\"error\" \n              show-icon \n              :closable=\"false\"\n              style=\"margin-bottom: 20px\"\n            />\n              \n            <el-tabs>\n              <el-tab-pane label=\"基本信息\">\n                <el-row :gutter=\"20\">\n                  <el-col :xs=\"24\" :sm=\"12\">\n                    <el-form-item label=\"姓\" prop=\"lastName\">\n                      <el-input v-model=\"profileData.lastName\" />\n                    </el-form-item>\n                  </el-col>\n                  <el-col :xs=\"24\" :sm=\"12\">\n                    <el-form-item label=\"名\" prop=\"firstName\">\n                      <el-input v-model=\"profileData.firstName\" />\n                    </el-form-item>\n                  </el-col>\n                </el-row>\n                \n                <el-form-item label=\"部门\" prop=\"department\">\n                  <el-input v-model=\"profileData.department\" />\n                </el-form-item>\n                \n                <el-form-item label=\"头像\" prop=\"profilePicture\">\n                  <el-input v-model=\"profileData.profilePicture\" placeholder=\"头像URL\" />\n                </el-form-item>\n              </el-tab-pane>\n              \n              <el-tab-pane label=\"修改密码\">\n                <el-form-item label=\"当前密码\" prop=\"currentPassword\">\n                  <el-input \n                    v-model=\"profileData.currentPassword\" \n                    type=\"password\"\n                    show-password\n                  />\n                </el-form-item>\n                \n                <el-form-item label=\"新密码\" prop=\"newPassword\">\n                  <el-input \n                    v-model=\"profileData.newPassword\" \n                    type=\"password\"\n                    show-password\n                  />\n                </el-form-item>\n                \n                <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\n                  <el-input \n                    v-model=\"profileData.confirmPassword\" \n                    type=\"password\"\n                    show-password\n                  />\n                </el-form-item>\n              </el-tab-pane>\n            </el-tabs>\n            \n            <div class=\"form-actions\">\n              <el-button \n                type=\"primary\" \n                :loading=\"loading\" \n                @click=\"submitForm\"\n              >\n                保存更改\n              </el-button>\n            </div>\n          </el-form>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'Profile',\n  \n  setup() {\n    const store = useStore()\n    const profileForm = ref(null)\n    \n    // 获取当前用户\n    const user = computed(() => store.getters['auth/currentUser'] || {})\n    \n    // 用户首字母缩写\n    const userInitials = computed(() => {\n      if (user.value.firstName && user.value.lastName) {\n        return `${user.value.firstName.charAt(0)}${user.value.lastName.charAt(0)}`.toUpperCase()\n      }\n      return user.value.username ? user.value.username.charAt(0).toUpperCase() : '?'\n    })\n    \n    // 表单数据\n    const profileData = reactive({\n      firstName: '',\n      lastName: '',\n      department: '',\n      profilePicture: '',\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    })\n    \n    // 表单验证规则\n    const rules = {\n      firstName: [\n        { required: true, message: '请输入名', trigger: 'blur' }\n      ],\n      lastName: [\n        { required: true, message: '请输入姓', trigger: 'blur' }\n      ],\n      newPassword: [\n        { min: 8, message: '密码长度不能少于8个字符', trigger: 'blur' }\n      ],\n      confirmPassword: [\n        {\n          validator: (rule, value, callback) => {\n            if (profileData.newPassword && value !== profileData.newPassword) {\n              callback(new Error('两次输入的密码不一致'))\n            } else {\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ]\n    }\n    \n    // 加载状态和错误信息\n    const loading = computed(() => store.getters['user/isLoading'])\n    const error = computed(() => store.getters['user/error'])\n    \n    // 角色格式化\n    const formatRole = (role) => {\n      switch (role) {\n        case 'admin':\n          return '管理员'\n        case 'user':\n          return '普通用户'\n        case 'viewer':\n          return '仅查看用户'\n        default:\n          return role\n      }\n    }\n    \n    // 初始化表单\n    const initForm = () => {\n      // 填充个人资料表单\n      profileData.firstName = user.value.firstName || ''\n      profileData.lastName = user.value.lastName || ''\n      profileData.department = user.value.department || ''\n      profileData.profilePicture = user.value.profilePicture || ''\n      \n      // 清空密码字段\n      profileData.currentPassword = ''\n      profileData.newPassword = ''\n      profileData.confirmPassword = ''\n    }\n    \n    // 提交表单\n    const submitForm = async () => {\n      if (!profileForm.value) return\n      \n      await profileForm.value.validate(async (valid) => {\n        if (valid) {\n          // 构建更新数据\n          const updateData = {}\n          \n          // 只包含修改过的基本信息字段\n          if (profileData.firstName !== user.value.firstName) {\n            updateData.firstName = profileData.firstName\n          }\n          \n          if (profileData.lastName !== user.value.lastName) {\n            updateData.lastName = profileData.lastName\n          }\n          \n          if (profileData.department !== user.value.department) {\n            updateData.department = profileData.department\n          }\n          \n          if (profileData.profilePicture !== user.value.profilePicture) {\n            updateData.profilePicture = profileData.profilePicture\n          }\n          \n          // 如果有提供密码字段，添加到更新数据\n          if (profileData.currentPassword && profileData.newPassword) {\n            updateData.currentPassword = profileData.currentPassword\n            updateData.newPassword = profileData.newPassword\n          }\n          \n          // 只有在有数据更新时才发送请求\n          if (Object.keys(updateData).length > 0) {\n            try {\n              await store.dispatch('user/updateProfile', updateData)\n              initForm() // 重新加载表单\n            } catch (error) {\n              // 错误已在store中处理\n            }\n          } else {\n            // 如果没有改动\n            store.dispatch('addNotification', {\n              type: 'info',\n              message: '没有检测到任何改动',\n              title: '信息'\n            })\n          }\n        }\n      })\n    }\n    \n    // 页面加载时初始化\n    onMounted(() => {\n      initForm()\n    })\n    \n    return {\n      user,\n      userInitials,\n      profileForm,\n      profileData,\n      rules,\n      loading,\n      error,\n      formatRole,\n      submitForm\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.profile-container {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.profile-card {\n  margin-bottom: 20px;\n  border-radius: 8px;\n  overflow: hidden;\n  \n  .profile-card-header {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 24px;\n    background-color: #f9fafc;\n    border-bottom: 1px solid #f0f2f5;\n  }\n  \n  .user-name {\n    margin: 16px 0 4px;\n    font-size: 18px;\n    font-weight: 600;\n  }\n  \n  .user-role {\n    margin: 0;\n    font-size: 14px;\n    color: #909399;\n  }\n  \n  .profile-info {\n    padding: 24px;\n  }\n  \n  .info-item {\n    display: flex;\n    justify-content: space-between;\n    padding: 12px 0;\n    border-bottom: 1px solid #f0f2f5;\n    \n    &:last-child {\n      border-bottom: none;\n    }\n  }\n  \n  .info-label {\n    color: #909399;\n    font-size: 14px;\n  }\n  \n  .info-value {\n    font-weight: 500;\n    font-size: 14px;\n  }\n}\n\n.edit-profile-card {\n  border-radius: 8px;\n  overflow: hidden;\n  \n  .card-header {\n    h3 {\n      margin: 0;\n      font-size: 16px;\n      font-weight: 600;\n    }\n  }\n}\n\n.form-actions {\n  margin-top: 30px;\n  text-align: right;\n}\n\n@media (max-width: 768px) {\n  .profile-card, .edit-profile-card {\n    margin-bottom: 20px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}