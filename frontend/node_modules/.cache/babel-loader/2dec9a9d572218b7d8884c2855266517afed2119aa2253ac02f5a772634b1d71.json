{"ast":null,"code":"import _objectSpread from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { createStore } from 'vuex';\nimport auth from './modules/auth';\nimport vulnerability from './modules/vulnerability';\nimport dashboard from './modules/dashboard';\nimport user from './modules/user';\nimport report from './modules/report';\nexport default createStore({\n  state: {\n    loading: false,\n    error: null,\n    notifications: []\n  },\n  getters: {\n    isLoading: function isLoading(state) {\n      return state.loading;\n    },\n    error: function error(state) {\n      return state.error;\n    },\n    notifications: function notifications(state) {\n      return state.notifications;\n    }\n  },\n  mutations: {\n    SET_LOADING: function SET_LOADING(state, loading) {\n      state.loading = loading;\n    },\n    SET_ERROR: function SET_ERROR(state, error) {\n      state.error = error;\n    },\n    CLEAR_ERROR: function CLEAR_ERROR(state) {\n      state.error = null;\n    },\n    ADD_NOTIFICATION: function ADD_NOTIFICATION(state, notification) {\n      state.notifications.push(_objectSpread(_objectSpread({\n        id: Date.now()\n      }, notification), {}, {\n        read: false,\n        timestamp: new Date()\n      }));\n    },\n    MARK_NOTIFICATION_READ: function MARK_NOTIFICATION_READ(state, id) {\n      var notification = state.notifications.find(function (n) {\n        return n.id === id;\n      });\n      if (notification) {\n        notification.read = true;\n      }\n    },\n    CLEAR_NOTIFICATIONS: function CLEAR_NOTIFICATIONS(state) {\n      state.notifications = [];\n    }\n  },\n  actions: {\n    setLoading: function setLoading(_ref, loading) {\n      var commit = _ref.commit;\n      commit('SET_LOADING', loading);\n    },\n    setError: function setError(_ref2, error) {\n      var commit = _ref2.commit;\n      commit('SET_ERROR', error);\n    },\n    clearError: function clearError(_ref3) {\n      var commit = _ref3.commit;\n      commit('CLEAR_ERROR');\n    },\n    addNotification: function addNotification(_ref4, notification) {\n      var commit = _ref4.commit;\n      commit('ADD_NOTIFICATION', notification);\n    },\n    markNotificationRead: function markNotificationRead(_ref5, id) {\n      var commit = _ref5.commit;\n      commit('MARK_NOTIFICATION_READ', id);\n    },\n    clearNotifications: function clearNotifications(_ref6) {\n      var commit = _ref6.commit;\n      commit('CLEAR_NOTIFICATIONS');\n    }\n  },\n  modules: {\n    auth: auth,\n    vulnerability: vulnerability,\n    dashboard: dashboard,\n    user: user,\n    report: report\n  }\n});","map":{"version":3,"names":["createStore","auth","vulnerability","dashboard","user","report","state","loading","error","notifications","getters","isLoading","mutations","SET_LOADING","SET_ERROR","CLEAR_ERROR","ADD_NOTIFICATION","notification","push","_objectSpread","id","Date","now","read","timestamp","MARK_NOTIFICATION_READ","find","n","CLEAR_NOTIFICATIONS","actions","setLoading","_ref","commit","setError","_ref2","clearError","_ref3","addNotification","_ref4","markNotificationRead","_ref5","clearNotifications","_ref6","modules"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport auth from './modules/auth'\nimport vulnerability from './modules/vulnerability'\nimport dashboard from './modules/dashboard'\nimport user from './modules/user'\nimport report from './modules/report'\n\nexport default createStore({\n  state: {\n    loading: false,\n    error: null,\n    notifications: []\n  },\n  \n  getters: {\n    isLoading: state => state.loading,\n    error: state => state.error,\n    notifications: state => state.notifications\n  },\n  \n  mutations: {\n    SET_LOADING(state, loading) {\n      state.loading = loading\n    },\n    \n    SET_ERROR(state, error) {\n      state.error = error\n    },\n    \n    CLEAR_ERROR(state) {\n      state.error = null\n    },\n    \n    ADD_NOTIFICATION(state, notification) {\n      state.notifications.push({\n        id: Date.now(),\n        ...notification,\n        read: false,\n        timestamp: new Date()\n      })\n    },\n    \n    MARK_NOTIFICATION_READ(state, id) {\n      const notification = state.notifications.find(n => n.id === id)\n      if (notification) {\n        notification.read = true\n      }\n    },\n    \n    CLEAR_NOTIFICATIONS(state) {\n      state.notifications = []\n    }\n  },\n  \n  actions: {\n    setLoading({ commit }, loading) {\n      commit('SET_LOADING', loading)\n    },\n    \n    setError({ commit }, error) {\n      commit('SET_ERROR', error)\n    },\n    \n    clearError({ commit }) {\n      commit('CLEAR_ERROR')\n    },\n    \n    addNotification({ commit }, notification) {\n      commit('ADD_NOTIFICATION', notification)\n    },\n    \n    markNotificationRead({ commit }, id) {\n      commit('MARK_NOTIFICATION_READ', id)\n    },\n    \n    clearNotifications({ commit }) {\n      commit('CLEAR_NOTIFICATIONS')\n    }\n  },\n  \n  modules: {\n    auth,\n    vulnerability,\n    dashboard,\n    user,\n    report\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}