{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, withCtx as _withCtx, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  id: \"app\"\n};\nvar _hoisted_2 = {\n  key: 1,\n  \"class\": \"loading-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_view = _resolveComponent(\"router-view\");\n  var _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  var _component_el_empty = _resolveComponent(\"el-empty\");\n  var _component_el_config_provider = _resolveComponent(\"el-config-provider\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_config_provider, null, {\n    \"default\": _withCtx(function () {\n      return [!$setup.loading ? (_openBlock(), _createBlock(_component_router_view, {\n        key: 0\n      })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_empty, {\n        description: \"加载中...\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_skeleton, {\n            style: {\n              \"width\": \"100%\"\n            },\n            rows: 8,\n            animated: \"\"\n          })];\n        }),\n        _: 1 /* STABLE */\n      })]))];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","_createVNode","_component_el_config_provider","_withCtx","$setup","loading","_createBlock","_component_router_view","_hoisted_2","_component_el_empty","description","_component_el_skeleton","style","rows","animated","_"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <el-config-provider>\n      <router-view v-if=\"!loading\" />\n      <div v-else class=\"loading-container\">\n        <el-empty description=\"加载中...\">\n          <el-skeleton style=\"width: 100%\" :rows=\"8\" animated />\n        </el-empty>\n      </div>\n    </el-config-provider>\n  </div>\n</template>\n\n<script>\nimport { onMounted, ref, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  name: 'App',\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    const loading = ref(false)\n    \n    const isAuthenticated = computed(() => store.getters['auth/isAuthenticated'])\n    \n    onMounted(async () => {\n      try {\n        console.log('当前路径:', window.location.pathname);\n        \n        // 如果当前路径是根路径，不执行其他操作\n        if (window.location.pathname === '/') {\n          console.log('首页路径，不执行其他操作');\n          return;\n        }\n        \n        // 只有非首页才会有加载状态\n        loading.value = true;\n        \n        // 尝试从本地存储恢复用户会话\n        await store.dispatch('auth/restoreSession')\n        \n        // 其他情况，如果未认证且需要认证，则重定向到登录页面\n        if (!isAuthenticated.value && \n            router.currentRoute.value.name !== 'Login' && \n            router.currentRoute.value.name !== 'Register' &&\n            router.currentRoute.value.meta.requiresAuth) {\n          console.log('未认证用户访问需要认证的页面，重定向到登录页面')\n          router.push('/login')\n        }\n      } catch (error) {\n        console.error('初始化错误:', error)\n      } finally {\n        // 无论发生什么，都完成加载\n        loading.value = false\n      }\n    })\n    \n    return {\n      loading\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n/* 重置样式 */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml, body {\n  height: 100%;\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-size: 16px;\n  color: #333;\n  background-color: #f5f7fa;\n}\n\n#app {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.loading-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\n/* 页面过渡动画 */\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n/* 现代化主题样式覆盖 */\n.el-card {\n  border-radius: 8px;\n  border: none;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  margin-bottom: 20px;\n}\n\n.el-button {\n  border-radius: 6px;\n}\n\n.el-table {\n  border-radius: 8px;\n}\n\n.el-dialog {\n  border-radius: 12px;\n}\n\n/* 自定义元素样式 */\n.page-header {\n  margin-bottom: 24px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n}\n\n.page-subtitle {\n  font-size: 16px;\n  color: #909399;\n  margin-top: 4px;\n}\n\n.section-title {\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  color: #303133;\n}\n\n/* 状态标签样式 */\n.status-label {\n  text-transform: capitalize;\n  font-weight: 500;\n}\n\n/* 严重性标签样式 */\n.severity-label {\n  text-transform: capitalize;\n  font-weight: 500;\n}\n\n.critical-bg {\n  background-color: #f56c6c;\n  color: white;\n}\n\n.high-bg {\n  background-color: #e6a23c;\n  color: white;\n}\n\n.medium-bg {\n  background-color: #f2d864;\n  color: #333;\n}\n\n.low-bg {\n  background-color: #67c23a;\n  color: white;\n}\n\n.info-bg {\n  background-color: #909399;\n  color: white;\n}\n</style> "],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EADfC,GAAA;EAIkB,SAAM;;;;;;;uBAHtBC,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAOqBC,6BAAA;IATzB,WAAAC,QAAA,CAGM;MAAA,OAA+B,C,CAAXC,MAAA,CAAAC,OAAO,I,cAA3BC,YAAA,CAA+BC,sBAAA;QAHrCT,GAAA;MAAA,O,cAIMC,mBAAA,CAIM,OAJNS,UAIM,GAHJP,YAAA,CAEWQ,mBAAA;QAFDC,WAAW,EAAC;MAAQ;QALtC,WAAAP,QAAA,CAMU;UAAA,OAAsD,CAAtDF,YAAA,CAAsDU,sBAAA;YAAzCC,KAAmB,EAAnB;cAAA;YAAA,CAAmB;YAAEC,IAAI,EAAE,CAAC;YAAEC,QAAQ,EAAR;;;QANrDC,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}