{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { ref, reactive, computed, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'UserManagement',\n  setup: function setup() {\n    var store = useStore();\n\n    // 加载和提交状态\n    var loading = ref(false);\n    var submitting = ref(false);\n\n    // 筛选表单\n    var filterForm = reactive({\n      status: '',\n      role: '',\n      search: ''\n    });\n\n    // 分页信息\n    var pagination = reactive({\n      page: 1,\n      pageSize: 10,\n      total: 0\n    });\n\n    // 用户表单对话框\n    var userDialogVisible = ref(false);\n    var userFormRef = ref(null);\n    var isEditMode = ref(false);\n\n    // 用户表单\n    var userForm = reactive({\n      id: '',\n      username: '',\n      name: '',\n      email: '',\n      role: 'user',\n      status: 'active',\n      password: '',\n      confirmPassword: ''\n    });\n\n    // 表单验证规则\n    var userFormRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '用户名长度在3到20个字符之间',\n        trigger: 'blur'\n      }],\n      name: [{\n        required: true,\n        message: '请输入姓名',\n        trigger: 'blur'\n      }],\n      email: [{\n        required: true,\n        message: '请输入邮箱',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入有效的邮箱地址',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码至少需要6个字符',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        required: true,\n        message: '请确认密码',\n        trigger: 'blur'\n      }, {\n        validator: function validator(rule, value, callback) {\n          if (value !== userForm.password) {\n            callback(new Error('两次输入的密码不一致'));\n          } else {\n            callback();\n          }\n        },\n        trigger: 'blur'\n      }]\n    };\n\n    // 用户数据来自Vuex store\n    var users = computed(function () {\n      return store.getters['user/allUsers'];\n    });\n\n    // 获取角色显示名称\n    var getRoleDisplayName = function getRoleDisplayName(role) {\n      var roleMap = {\n        admin: '管理员',\n        user: '普通用户',\n        readonly: '只读用户'\n      };\n      return roleMap[role] || role;\n    };\n\n    // 获取角色标签类型\n    var getRoleTagType = function getRoleTagType(role) {\n      var typeMap = {\n        admin: 'danger',\n        user: 'primary',\n        readonly: 'info'\n      };\n      return typeMap[role] || '';\n    };\n\n    // 获取角色图标\n    var getRoleIcon = function getRoleIcon(role) {\n      var iconMap = {\n        admin: 'el-icon-s-tools',\n        user: 'el-icon-user',\n        readonly: 'el-icon-view'\n      };\n      return iconMap[role] || 'el-icon-user';\n    };\n\n    // 获取状态显示名称\n    var getStatusDisplayName = function getStatusDisplayName(status) {\n      var statusMap = {\n        active: '已激活',\n        inactive: '未激活',\n        disabled: '已禁用'\n      };\n      return statusMap[status] || status;\n    };\n\n    // 获取状态标签类型\n    var getStatusTagType = function getStatusTagType(status) {\n      var typeMap = {\n        active: 'success',\n        inactive: 'warning',\n        disabled: 'info'\n      };\n      return typeMap[status] || '';\n    };\n\n    // 格式化日期时间\n    var formatDateTime = function formatDateTime(dateTimeString) {\n      if (!dateTimeString) return '从未登录';\n      try {\n        var date = new Date(dateTimeString);\n        if (isNaN(date.getTime())) return '无效日期';\n        return date.toLocaleDateString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return '无效日期';\n      }\n    };\n\n    // 搜索用户\n    var searchUsers = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var storePagination;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return store.dispatch('user/fetchUsers', {\n                page: pagination.page,\n                limit: pagination.pageSize,\n                search: filterForm.search,\n                status: filterForm.status,\n                role: filterForm.role\n              });\n            case 4:\n              // 更新分页数据\n              storePagination = store.getters['user/pagination'];\n              pagination.total = storePagination.total;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              ElMessage.error(\"\\u52A0\\u8F7D\\u7528\\u6237\\u6570\\u636E\\u5931\\u8D25: \".concat(_context.t0.message || '未知错误'));\n            case 11:\n              _context.prev = 11;\n              loading.value = false;\n              return _context.finish(11);\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 8, 11, 14]]);\n      }));\n      return function searchUsers() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 在页面加载时获取用户数据\n    onMounted(function () {\n      searchUsers();\n    });\n\n    // 处理分页变化\n    var handlePageChange = function handlePageChange(newPage) {\n      pagination.page = newPage;\n      searchUsers();\n    };\n\n    // 处理每页显示数量变化\n    var handleSizeChange = function handleSizeChange(newSize) {\n      pagination.pageSize = newSize;\n      pagination.page = 1; // 重置到第一页\n      searchUsers();\n    };\n\n    // 显示添加用户对话框\n    var showAddUserDialog = function showAddUserDialog() {\n      isEditMode.value = false;\n      // 重置表单\n      Object.assign(userForm, {\n        id: '',\n        username: '',\n        name: '',\n        email: '',\n        role: 'user',\n        status: 'active',\n        password: '',\n        confirmPassword: ''\n      });\n      userDialogVisible.value = true;\n    };\n\n    // 显示编辑用户对话框\n    var showEditUserDialog = function showEditUserDialog(user) {\n      isEditMode.value = true;\n      // 填充表单数据\n      Object.assign(userForm, {\n        id: user.id,\n        username: user.username,\n        first_name: user.first_name || '',\n        last_name: user.last_name || '',\n        name: \"\".concat(user.first_name || '', \" \").concat(user.last_name || '').trim(),\n        email: user.email,\n        role: user.role,\n        status: user.status,\n        password: '',\n        confirmPassword: ''\n      });\n      userDialogVisible.value = true;\n    };\n\n    // 提交用户表单\n    var submitUserForm = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return userFormRef.value.validate(/*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(valid, fields) {\n                  var userData, _error$response;\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!valid) {\n                          _context2.next = 24;\n                          break;\n                        }\n                        submitting.value = true;\n                        _context2.prev = 2;\n                        // 准备提交数据\n                        userData = {\n                          username: userForm.username,\n                          email: userForm.email,\n                          first_name: userForm.name.split(' ')[0],\n                          last_name: userForm.name.split(' ').slice(1).join(' ') || '',\n                          role: userForm.role,\n                          status: userForm.status\n                        }; // 对于新用户，需要添加密码\n                        if (!isEditMode.value) {\n                          userData.password = userForm.password;\n                        } else if (userForm.password) {\n                          // 编辑时，仅在提供密码的情况下更新密码\n                          userData.new_password = userForm.password;\n                        }\n                        if (!isEditMode.value) {\n                          _context2.next = 11;\n                          break;\n                        }\n                        _context2.next = 8;\n                        return store.dispatch('user/updateUser', {\n                          id: userForm.id,\n                          data: userData\n                        });\n                      case 8:\n                        ElMessage.success('用户信息已成功更新');\n                        _context2.next = 14;\n                        break;\n                      case 11:\n                        _context2.next = 13;\n                        return store.dispatch('user/createUser', userData);\n                      case 13:\n                        ElMessage.success('用户已成功创建');\n                      case 14:\n                        userDialogVisible.value = false;\n                        // 刷新用户列表\n                        searchUsers();\n                        _context2.next = 21;\n                        break;\n                      case 18:\n                        _context2.prev = 18;\n                        _context2.t0 = _context2[\"catch\"](2);\n                        ElMessage.error(\"\\u64CD\\u4F5C\\u5931\\u8D25: \".concat(((_error$response = _context2.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || _context2.t0.message || '未知错误'));\n                      case 21:\n                        _context2.prev = 21;\n                        submitting.value = false;\n                        return _context2.finish(21);\n                      case 24:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }, _callee2, null, [[2, 18, 21, 24]]);\n                }));\n                return function (_x, _x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function submitUserForm() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 删除用户\n    var confirmDeleteUser = function confirmDeleteUser(user) {\n      ElMessageBox.confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u7528\\u6237 \".concat(user.name || user.username, \" \\u5417\\uFF1F\\u6B64\\u64CD\\u4F5C\\u4E0D\\u53EF\\u6062\\u590D\\u3002\"), '确认删除', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _error$response2;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              loading.value = true;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return store.dispatch('user/deleteUser', user.id);\n            case 4:\n              ElMessage.success('用户已成功删除');\n              // 刷新用户列表\n              searchUsers();\n              _context4.next = 11;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              ElMessage.error(\"\\u5220\\u9664\\u5931\\u8D25: \".concat(((_error$response2 = _context4.t0.response) === null || _error$response2 === void 0 || (_error$response2 = _error$response2.data) === null || _error$response2 === void 0 ? void 0 : _error$response2.error) || _context4.t0.message || '未知错误'));\n            case 11:\n              _context4.prev = 11;\n              loading.value = false;\n              return _context4.finish(11);\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 8, 11, 14]]);\n      })))[\"catch\"](function () {\n        // 用户取消删除\n      });\n    };\n\n    // 切换用户状态\n    var toggleUserStatus = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(user) {\n        var newStatus, _error$response3;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              loading.value = true;\n              _context5.prev = 1;\n              newStatus = user.status === 'active' ? 'disabled' : 'active';\n              _context5.next = 5;\n              return store.dispatch('user/updateUser', {\n                id: user.id,\n                data: {\n                  status: newStatus\n                }\n              });\n            case 5:\n              ElMessage.success(\"\\u7528\\u6237\\u72B6\\u6001\\u5DF2\\u66F4\\u65B0\\u4E3A\".concat(getStatusDisplayName(newStatus)));\n              // 刷新用户列表\n              searchUsers();\n              _context5.next = 12;\n              break;\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              ElMessage.error(\"\\u66F4\\u65B0\\u72B6\\u6001\\u5931\\u8D25: \".concat(((_error$response3 = _context5.t0.response) === null || _error$response3 === void 0 || (_error$response3 = _error$response3.data) === null || _error$response3 === void 0 ? void 0 : _error$response3.error) || _context5.t0.message || '未知错误'));\n            case 12:\n              _context5.prev = 12;\n              loading.value = false;\n              return _context5.finish(12);\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[1, 9, 12, 15]]);\n      }));\n      return function toggleUserStatus(_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // 重置筛选条件\n    var resetFilter = function resetFilter() {\n      Object.assign(filterForm, {\n        status: '',\n        role: '',\n        search: ''\n      });\n      searchUsers();\n    };\n    return {\n      users: users,\n      loading: loading,\n      submitting: submitting,\n      filterForm: filterForm,\n      pagination: pagination,\n      userDialogVisible: userDialogVisible,\n      userFormRef: userFormRef,\n      userForm: userForm,\n      userFormRules: userFormRules,\n      isEditMode: isEditMode,\n      getRoleDisplayName: getRoleDisplayName,\n      getRoleTagType: getRoleTagType,\n      getRoleIcon: getRoleIcon,\n      getStatusDisplayName: getStatusDisplayName,\n      getStatusTagType: getStatusTagType,\n      formatDateTime: formatDateTime,\n      searchUsers: searchUsers,\n      resetFilter: resetFilter,\n      handlePageChange: handlePageChange,\n      handleSizeChange: handleSizeChange,\n      showAddUserDialog: showAddUserDialog,\n      showEditUserDialog: showEditUserDialog,\n      submitUserForm: submitUserForm,\n      confirmDeleteUser: confirmDeleteUser,\n      toggleUserStatus: toggleUserStatus\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","ElMessage","ElMessageBox","useStore","name","setup","store","loading","submitting","filterForm","status","role","search","pagination","page","pageSize","total","userDialogVisible","userFormRef","isEditMode","userForm","id","username","email","password","confirmPassword","userFormRules","required","message","trigger","min","max","type","validator","rule","value","callback","Error","users","getters","getRoleDisplayName","roleMap","admin","user","readonly","getRoleTagType","typeMap","getRoleIcon","iconMap","getStatusDisplayName","statusMap","active","inactive","disabled","getStatusTagType","formatDateTime","dateTimeString","date","Date","isNaN","getTime","toLocaleDateString","year","month","day","hour","minute","error","console","searchUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","storePagination","wrap","_callee$","_context","prev","next","dispatch","limit","t0","concat","finish","stop","apply","arguments","handlePageChange","newPage","handleSizeChange","newSize","showAddUserDialog","Object","assign","showEditUserDialog","first_name","last_name","trim","submitUserForm","_ref2","_callee3","_callee3$","_context3","validate","_ref3","_callee2","valid","fields","userData","_error$response","_callee2$","_context2","split","slice","join","new_password","data","success","response","_x","_x2","confirmDeleteUser","confirm","confirmButtonText","cancelButtonText","then","_callee4","_error$response2","_callee4$","_context4","toggleUserStatus","_ref5","_callee5","newStatus","_error$response3","_callee5$","_context5","_x3","resetFilter"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/admin/UserManagement.vue"],"sourcesContent":["<template>\n  <div class=\"user-management-page\">\n    <!-- 页面标题 -->\n    <div class=\"page-header\">\n      <div class=\"header-content\">\n        <h1 class=\"page-title\">\n          <span class=\"title-icon\"><i class=\"el-icon-user\"></i></span>\n          用户管理\n          <span class=\"title-highlight\">中心</span>\n        </h1>\n        <p class=\"page-subtitle\">管理系统用户、权限和组织结构</p>\n      </div>\n      <div class=\"header-actions\">\n        <el-button type=\"primary\" @click=\"showAddUserDialog\" class=\"add-user-btn\">\n          <i class=\"el-icon-plus\"></i> 添加用户\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 用户筛选和搜索 -->\n    <div class=\"filter-container\">\n      <el-card shadow=\"hover\" class=\"filter-card\">\n        <template #header>\n          <div class=\"card-header\">\n            <h3 class=\"filter-title\">\n              <i class=\"el-icon-search\"></i> 高级筛选\n            </h3>\n          </div>\n        </template>\n        <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\n          <el-form-item label=\"状态\">\n            <el-select v-model=\"filterForm.status\" placeholder=\"选择状态\" clearable class=\"filter-select\">\n              <el-option label=\"已激活\" value=\"active\">\n                <template #default>\n                  <div class=\"status-option\">\n                    <span class=\"status-dot active\"></span>\n                    <span>已激活</span>\n                  </div>\n                </template>\n              </el-option>\n              <el-option label=\"未激活\" value=\"inactive\">\n                <template #default>\n                  <div class=\"status-option\">\n                    <span class=\"status-dot inactive\"></span>\n                    <span>未激活</span>\n                  </div>\n                </template>\n              </el-option>\n              <el-option label=\"已禁用\" value=\"disabled\">\n                <template #default>\n                  <div class=\"status-option\">\n                    <span class=\"status-dot disabled\"></span>\n                    <span>已禁用</span>\n                  </div>\n                </template>\n              </el-option>\n            </el-select>\n          </el-form-item>\n          \n          <el-form-item label=\"角色\">\n            <el-select v-model=\"filterForm.role\" placeholder=\"选择角色\" clearable class=\"filter-select\">\n              <el-option label=\"管理员\" value=\"admin\">\n                <template #default>\n                  <div class=\"role-option\">\n                    <i class=\"el-icon-s-tools role-icon admin\"></i>\n                    <span>管理员</span>\n                  </div>\n                </template>\n              </el-option>\n              <el-option label=\"普通用户\" value=\"user\">\n                <template #default>\n                  <div class=\"role-option\">\n                    <i class=\"el-icon-user role-icon user\"></i>\n                    <span>普通用户</span>\n                  </div>\n                </template>\n              </el-option>\n              <el-option label=\"只读用户\" value=\"readonly\">\n                <template #default>\n                  <div class=\"role-option\">\n                    <i class=\"el-icon-view role-icon readonly\"></i>\n                    <span>只读用户</span>\n                  </div>\n                </template>\n              </el-option>\n            </el-select>\n          </el-form-item>\n          \n          <el-form-item label=\"搜索\">\n            <el-input \n              v-model=\"filterForm.search\" \n              placeholder=\"搜索用户名、邮箱或姓名\"\n              clearable\n              prefix-icon=\"el-icon-search\"\n              class=\"search-input\"\n            />\n          </el-form-item>\n          \n          <el-form-item class=\"filter-buttons\">\n            <el-button type=\"primary\" @click=\"searchUsers\" class=\"search-btn\">\n              <i class=\"el-icon-search\"></i> 搜索\n            </el-button>\n            <el-button @click=\"resetFilter\" class=\"reset-btn\">\n              <i class=\"el-icon-refresh\"></i> 重置\n            </el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n    </div>\n\n    <!-- 用户列表 -->\n    <div class=\"user-table-container\">\n      <el-card shadow=\"hover\" class=\"user-table-card\">\n        <template #header>\n          <div class=\"card-header\">\n            <h3 class=\"user-table-title\">\n              <i class=\"el-icon-user-solid\"></i> 用户列表\n            </h3>\n            <div class=\"table-actions\">\n              <el-tooltip content=\"刷新列表\" placement=\"top\">\n                <el-button circle size=\"small\" @click=\"searchUsers\">\n                  <i class=\"el-icon-refresh\"></i>\n                </el-button>\n              </el-tooltip>\n            </div>\n          </div>\n        </template>\n        <div v-loading=\"loading\">\n          <el-table \n            :data=\"users\" \n            style=\"width: 100%\"\n            class=\"user-table\"\n            :header-cell-style=\"{ background: '#f5f7fa', color: '#606266' }\"\n          >\n            <el-table-column prop=\"username\" label=\"用户名\" min-width=\"120\">\n              <template #default=\"scope\">\n                <div class=\"user-info\">\n                  <el-avatar :size=\"32\" :src=\"scope.row.profile_picture\" class=\"user-avatar\">\n                    {{ scope.row.username.charAt(0).toUpperCase() }}\n                  </el-avatar>\n                  <span class=\"username\">{{ scope.row.username }}</span>\n                </div>\n              </template>\n            </el-table-column>\n            \n            <el-table-column prop=\"name\" label=\"姓名\" min-width=\"120\">\n              <template #default=\"scope\">\n                <span>{{ (scope.row.first_name || '') + ' ' + (scope.row.last_name || '') }}</span>\n              </template>\n            </el-table-column>\n            \n            <el-table-column prop=\"email\" label=\"邮箱\" min-width=\"180\">\n              <template #default=\"scope\">\n                <div class=\"email-info\">\n                  <i class=\"el-icon-message email-icon\"></i>\n                  <span>{{ scope.row.email }}</span>\n                </div>\n              </template>\n            </el-table-column>\n            \n            <el-table-column prop=\"role\" label=\"角色\" width=\"120\">\n              <template #default=\"scope\">\n                <el-tag \n                  :type=\"getRoleTagType(scope.row.role)\" \n                  effect=\"light\"\n                  class=\"role-tag\"\n                >\n                  <i class=\"role-icon\" :class=\"getRoleIcon(scope.row.role)\"></i>\n                  {{ getRoleDisplayName(scope.row.role) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            \n            <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n              <template #default=\"scope\">\n                <el-tag \n                  :type=\"getStatusTagType(scope.row.status)\" \n                  effect=\"light\"\n                  class=\"status-tag\"\n                >\n                  <span class=\"status-dot\" :class=\"scope.row.status\"></span>\n                  {{ getStatusDisplayName(scope.row.status) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            \n            <el-table-column prop=\"last_login\" label=\"最后登录\" width=\"180\">\n              <template #default=\"scope\">\n                <div class=\"login-info\">\n                  <i class=\"el-icon-time login-icon\"></i>\n                  <span>{{ formatDateTime(scope.row.last_login) }}</span>\n                </div>\n              </template>\n            </el-table-column>\n            \n            <el-table-column label=\"操作\" width=\"220\" fixed=\"right\">\n              <template #default=\"scope\">\n                <div class=\"table-actions\">\n                  <el-button \n                    size=\"small\" \n                    type=\"primary\" \n                    @click=\"showEditUserDialog(scope.row)\"\n                    class=\"action-btn edit-btn\"\n                  >\n                    <i class=\"el-icon-edit\"></i> 编辑\n                  </el-button>\n                  \n                  <el-button \n                    size=\"small\" \n                    :type=\"scope.row.status === 'active' ? 'warning' : 'success'\" \n                    @click=\"toggleUserStatus(scope.row)\"\n                    class=\"action-btn toggle-btn\"\n                  >\n                    <i :class=\"scope.row.status === 'active' ? 'el-icon-lock' : 'el-icon-unlock'\"></i>\n                    {{ scope.row.status === 'active' ? '禁用' : '启用' }}\n                  </el-button>\n                  \n                  <el-button \n                    size=\"small\" \n                    type=\"danger\" \n                    @click=\"confirmDeleteUser(scope.row)\"\n                    class=\"action-btn delete-btn\"\n                  >\n                    <i class=\"el-icon-delete\"></i> 删除\n                  </el-button>\n                </div>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <!-- 分页 -->\n          <div class=\"pagination-container\">\n            <el-pagination\n              v-model:currentPage=\"pagination.page\"\n              v-model:page-size=\"pagination.pageSize\"\n              :page-sizes=\"[10, 20, 50, 100]\"\n              layout=\"total, sizes, prev, pager, next, jumper\"\n              :total=\"pagination.total\"\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handlePageChange\"\n              background\n              class=\"pagination\"\n            />\n          </div>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 添加/编辑用户对话框 -->\n    <el-dialog\n      :title=\"isEditMode ? '编辑用户' : '添加用户'\"\n      v-model=\"userDialogVisible\"\n      width=\"520px\"\n      class=\"user-dialog\"\n      destroy-on-close\n    >\n      <div class=\"dialog-header\" v-if=\"isEditMode\">\n        <div class=\"user-preview\">\n          <el-avatar :size=\"60\" :src=\"userForm.profile_picture\" class=\"preview-avatar\">\n            {{ userForm.username ? userForm.username.charAt(0).toUpperCase() : 'U' }}\n          </el-avatar>\n          <div class=\"preview-info\">\n            <h3>{{ userForm.username || '新用户' }}</h3>\n            <p>{{ userForm.email || '无邮箱信息' }}</p>\n          </div>\n        </div>\n      </div>\n\n      <el-form \n        ref=\"userFormRef\"\n        :model=\"userForm\" \n        :rules=\"userFormRules\" \n        label-width=\"100px\"\n        class=\"user-form\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input \n            v-model=\"userForm.username\" \n            :disabled=\"isEditMode\"\n            prefix-icon=\"el-icon-user\"\n            placeholder=\"请输入用户名\"\n          />\n          <div class=\"form-tip\" v-if=\"!isEditMode\">用户名一旦创建无法修改</div>\n        </el-form-item>\n        \n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input \n            v-model=\"userForm.name\"\n            prefix-icon=\"el-icon-user\"\n            placeholder=\"请输入姓名\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input \n            v-model=\"userForm.email\" \n            type=\"email\"\n            prefix-icon=\"el-icon-message\"\n            placeholder=\"请输入邮箱地址\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"角色\" prop=\"role\">\n          <el-select v-model=\"userForm.role\" style=\"width: 100%\" placeholder=\"请选择用户角色\">\n            <el-option label=\"管理员\" value=\"admin\">\n              <template #default>\n                <div class=\"role-option\">\n                  <i class=\"el-icon-s-tools role-icon admin\"></i>\n                  <span>管理员</span>\n                </div>\n              </template>\n            </el-option>\n            <el-option label=\"普通用户\" value=\"user\">\n              <template #default>\n                <div class=\"role-option\">\n                  <i class=\"el-icon-user role-icon user\"></i>\n                  <span>普通用户</span>\n                </div>\n              </template>\n            </el-option>\n            <el-option label=\"只读用户\" value=\"readonly\">\n              <template #default>\n                <div class=\"role-option\">\n                  <i class=\"el-icon-view role-icon readonly\"></i>\n                  <span>只读用户</span>\n                </div>\n              </template>\n            </el-option>\n          </el-select>\n          <div class=\"form-tip\">管理员拥有系统所有权限</div>\n        </el-form-item>\n        \n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"userForm.status\" style=\"width: 100%\" placeholder=\"请选择账户状态\">\n            <el-option label=\"已激活\" value=\"active\">\n              <template #default>\n                <div class=\"status-option\">\n                  <span class=\"status-dot active\"></span>\n                  <span>已激活</span>\n                </div>\n              </template>\n            </el-option>\n            <el-option label=\"未激活\" value=\"inactive\">\n              <template #default>\n                <div class=\"status-option\">\n                  <span class=\"status-dot inactive\"></span>\n                  <span>未激活</span>\n                </div>\n              </template>\n            </el-option>\n            <el-option label=\"已禁用\" value=\"disabled\">\n              <template #default>\n                <div class=\"status-option\">\n                  <span class=\"status-dot disabled\"></span>\n                  <span>已禁用</span>\n                </div>\n              </template>\n            </el-option>\n          </el-select>\n        </el-form-item>\n        \n        <div v-if=\"!isEditMode\" class=\"password-section\">\n          <div class=\"section-header\">\n            <i class=\"el-icon-lock\"></i>\n            <span>密码设置</span>\n          </div>\n          \n          <el-form-item label=\"密码\" prop=\"password\">\n            <el-input \n              v-model=\"userForm.password\" \n              type=\"password\"\n              prefix-icon=\"el-icon-lock\"\n              placeholder=\"请输入密码\"\n              show-password\n            />\n          </el-form-item>\n          \n          <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n            <el-input \n              v-model=\"userForm.confirmPassword\" \n              type=\"password\"\n              prefix-icon=\"el-icon-lock\"\n              placeholder=\"请再次输入密码\"\n              show-password\n            />\n          </el-form-item>\n        </div>\n      </el-form>\n      \n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"userDialogVisible = false\" class=\"cancel-btn\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitUserForm\" :loading=\"submitting\" class=\"submit-btn\">\n            {{ isEditMode ? '保存修改' : '创建用户' }}\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'UserManagement',\n  \n  setup() {\n    const store = useStore()\n    \n    // 加载和提交状态\n    const loading = ref(false)\n    const submitting = ref(false)\n    \n    // 筛选表单\n    const filterForm = reactive({\n      status: '',\n      role: '',\n      search: ''\n    })\n    \n    // 分页信息\n    const pagination = reactive({\n      page: 1,\n      pageSize: 10,\n      total: 0\n    })\n    \n    // 用户表单对话框\n    const userDialogVisible = ref(false)\n    const userFormRef = ref(null)\n    const isEditMode = ref(false)\n    \n    // 用户表单\n    const userForm = reactive({\n      id: '',\n      username: '',\n      name: '',\n      email: '',\n      role: 'user',\n      status: 'active',\n      password: '',\n      confirmPassword: ''\n    })\n    \n    // 表单验证规则\n    const userFormRules = {\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' },\n        { min: 3, max: 20, message: '用户名长度在3到20个字符之间', trigger: 'blur' }\n      ],\n      name: [\n        { required: true, message: '请输入姓名', trigger: 'blur' }\n      ],\n      email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入有效的邮箱地址', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, message: '密码至少需要6个字符', trigger: 'blur' }\n      ],\n      confirmPassword: [\n        { required: true, message: '请确认密码', trigger: 'blur' },\n        {\n          validator: (rule, value, callback) => {\n            if (value !== userForm.password) {\n              callback(new Error('两次输入的密码不一致'))\n            } else {\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ]\n    }\n    \n    // 用户数据来自Vuex store\n    const users = computed(() => store.getters['user/allUsers'])\n    \n    // 获取角色显示名称\n    const getRoleDisplayName = (role) => {\n      const roleMap = {\n        admin: '管理员',\n        user: '普通用户',\n        readonly: '只读用户'\n      }\n      return roleMap[role] || role\n    }\n    \n    // 获取角色标签类型\n    const getRoleTagType = (role) => {\n      const typeMap = {\n        admin: 'danger',\n        user: 'primary',\n        readonly: 'info'\n      }\n      return typeMap[role] || ''\n    }\n    \n    // 获取角色图标\n    const getRoleIcon = (role) => {\n      const iconMap = {\n        admin: 'el-icon-s-tools',\n        user: 'el-icon-user',\n        readonly: 'el-icon-view'\n      }\n      return iconMap[role] || 'el-icon-user'\n    }\n    \n    // 获取状态显示名称\n    const getStatusDisplayName = (status) => {\n      const statusMap = {\n        active: '已激活',\n        inactive: '未激活',\n        disabled: '已禁用'\n      }\n      return statusMap[status] || status\n    }\n    \n    // 获取状态标签类型\n    const getStatusTagType = (status) => {\n      const typeMap = {\n        active: 'success',\n        inactive: 'warning',\n        disabled: 'info'\n      }\n      return typeMap[status] || ''\n    }\n    \n    // 格式化日期时间\n    const formatDateTime = (dateTimeString) => {\n      if (!dateTimeString) return '从未登录'\n      \n      try {\n        const date = new Date(dateTimeString)\n        if (isNaN(date.getTime())) return '无效日期'\n        \n        return date.toLocaleDateString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      } catch (error) {\n        console.error('日期格式化错误:', error)\n        return '无效日期'\n      }\n    }\n    \n    // 搜索用户\n    const searchUsers = async () => {\n      loading.value = true\n      \n      try {\n        await store.dispatch('user/fetchUsers', {\n          page: pagination.page,\n          limit: pagination.pageSize,\n          search: filterForm.search,\n          status: filterForm.status,\n          role: filterForm.role\n        })\n        \n        // 更新分页数据\n        const storePagination = store.getters['user/pagination']\n        pagination.total = storePagination.total\n      } catch (error) {\n        ElMessage.error(`加载用户数据失败: ${error.message || '未知错误'}`)\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 在页面加载时获取用户数据\n    onMounted(() => {\n      searchUsers()\n    })\n    \n    // 处理分页变化\n    const handlePageChange = (newPage) => {\n      pagination.page = newPage\n      searchUsers()\n    }\n    \n    // 处理每页显示数量变化\n    const handleSizeChange = (newSize) => {\n      pagination.pageSize = newSize\n      pagination.page = 1 // 重置到第一页\n      searchUsers()\n    }\n    \n    // 显示添加用户对话框\n    const showAddUserDialog = () => {\n      isEditMode.value = false\n      // 重置表单\n      Object.assign(userForm, {\n        id: '',\n        username: '',\n        name: '',\n        email: '',\n        role: 'user',\n        status: 'active',\n        password: '',\n        confirmPassword: ''\n      })\n      \n      userDialogVisible.value = true\n    }\n    \n    // 显示编辑用户对话框\n    const showEditUserDialog = (user) => {\n      isEditMode.value = true\n      // 填充表单数据\n      Object.assign(userForm, {\n        id: user.id,\n        username: user.username,\n        first_name: user.first_name || '',\n        last_name: user.last_name || '',\n        name: `${user.first_name || ''} ${user.last_name || ''}`.trim(),\n        email: user.email,\n        role: user.role,\n        status: user.status,\n        password: '',\n        confirmPassword: ''\n      })\n      \n      userDialogVisible.value = true\n    }\n    \n    // 提交用户表单\n    const submitUserForm = async () => {\n      // eslint-disable-next-line no-unused-vars\n      await userFormRef.value.validate(async (valid, fields) => {\n        if (valid) {\n          submitting.value = true\n          \n          try {\n            // 准备提交数据\n            const userData = {\n              username: userForm.username,\n              email: userForm.email,\n              first_name: userForm.name.split(' ')[0],\n              last_name: userForm.name.split(' ').slice(1).join(' ') || '',\n              role: userForm.role,\n              status: userForm.status\n            }\n            \n            // 对于新用户，需要添加密码\n            if (!isEditMode.value) {\n              userData.password = userForm.password\n            } else if (userForm.password) {\n              // 编辑时，仅在提供密码的情况下更新密码\n              userData.new_password = userForm.password\n            }\n            \n            if (isEditMode.value) {\n              // 更新用户\n              await store.dispatch('user/updateUser', {\n                id: userForm.id,\n                data: userData\n              })\n              ElMessage.success('用户信息已成功更新')\n            } else {\n              // 创建新用户\n              await store.dispatch('user/createUser', userData)\n              ElMessage.success('用户已成功创建')\n            }\n            \n            userDialogVisible.value = false\n            // 刷新用户列表\n            searchUsers()\n          } catch (error) {\n            ElMessage.error(`操作失败: ${error.response?.data?.error || error.message || '未知错误'}`)\n          } finally {\n            submitting.value = false\n          }\n        }\n      })\n    }\n    \n    // 删除用户\n    const confirmDeleteUser = (user) => {\n      ElMessageBox.confirm(\n        `确定要删除用户 ${user.name || user.username} 吗？此操作不可恢复。`,\n        '确认删除',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(async () => {\n        loading.value = true\n        \n        try {\n          await store.dispatch('user/deleteUser', user.id)\n          ElMessage.success('用户已成功删除')\n          // 刷新用户列表\n          searchUsers()\n        } catch (error) {\n          ElMessage.error(`删除失败: ${error.response?.data?.error || error.message || '未知错误'}`)\n        } finally {\n          loading.value = false\n        }\n      }).catch(() => {\n        // 用户取消删除\n      })\n    }\n    \n    // 切换用户状态\n    const toggleUserStatus = async (user) => {\n      loading.value = true\n      \n      try {\n        const newStatus = user.status === 'active' ? 'disabled' : 'active'\n        \n        await store.dispatch('user/updateUser', {\n          id: user.id,\n          data: { status: newStatus }\n        })\n        \n        ElMessage.success(`用户状态已更新为${getStatusDisplayName(newStatus)}`)\n        // 刷新用户列表\n        searchUsers()\n      } catch (error) {\n        ElMessage.error(`更新状态失败: ${error.response?.data?.error || error.message || '未知错误'}`)\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 重置筛选条件\n    const resetFilter = () => {\n      Object.assign(filterForm, {\n        status: '',\n        role: '',\n        search: ''\n      })\n      searchUsers()\n    }\n    \n    return {\n      users,\n      loading,\n      submitting,\n      filterForm,\n      pagination,\n      userDialogVisible,\n      userFormRef,\n      userForm,\n      userFormRules,\n      isEditMode,\n      getRoleDisplayName,\n      getRoleTagType,\n      getRoleIcon,\n      getStatusDisplayName,\n      getStatusTagType,\n      formatDateTime,\n      searchUsers,\n      resetFilter,\n      handlePageChange,\n      handleSizeChange,\n      showAddUserDialog,\n      showEditUserDialog,\n      submitUserForm,\n      confirmDeleteUser,\n      toggleUserStatus\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.user-management-page {\n  padding: 24px;\n  animation: fadeIn 0.6s ease;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  flex-wrap: wrap;\n  gap: 16px;\n  \n  .header-content {\n    flex: 1;\n  }\n  \n  .page-title {\n    font-size: 28px;\n    font-weight: 600;\n    margin: 0 0 8px 0;\n    display: flex;\n    align-items: center;\n    color: #303133;\n    \n    .title-icon {\n      margin-right: 12px;\n      font-size: 28px;\n      color: #409EFF;\n    }\n    \n    .title-highlight {\n      background: linear-gradient(120deg, #409EFF, #53A8FF);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      margin-left: 8px;\n      font-weight: 700;\n    }\n  }\n  \n  .page-subtitle {\n    color: #606266;\n    font-size: 16px;\n    margin: 0;\n  }\n  \n  .header-actions {\n    .add-user-btn {\n      border-radius: 8px;\n      padding: 10px 20px;\n      font-weight: 500;\n      transition: all 0.3s;\n      \n      i {\n        margin-right: 6px;\n      }\n      \n      &:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 4px 12px rgba(64, 158, 255, 0.2);\n      }\n    }\n  }\n}\n\n.filter-container,\n.user-table-container {\n  margin-bottom: 24px;\n}\n\n.filter-card,\n.user-table-card {\n  border-radius: 12px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s;\n  position: relative;\n  overflow: hidden;\n  \n  &:hover {\n    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.09);\n  }\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 4px;\n    background: linear-gradient(90deg, #409EFF, #53A8FF);\n  }\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 4px 0;\n}\n\n.filter-title {\n  font-size: 16px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n  display: flex;\n  align-items: center;\n  \n  i {\n    margin-right: 8px;\n    font-size: 16px;\n    color: #409EFF;\n  }\n}\n\n.filter-form {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  padding: 8px 0;\n  \n  .filter-select,\n  .search-input {\n    min-width: 200px;\n    \n    :deep(.el-input__inner) {\n      border-radius: 8px;\n      transition: all 0.3s;\n      \n      &:focus {\n        box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.2);\n      }\n    }\n  }\n  \n  .filter-buttons {\n    margin-left: auto;\n    display: flex;\n    gap: 12px;\n    \n    .search-btn,\n    .reset-btn {\n      border-radius: 8px;\n      padding: 10px 16px;\n      transition: all 0.3s;\n      \n      i {\n        margin-right: 6px;\n      }\n      \n      &:hover {\n        transform: translateY(-2px);\n      }\n    }\n    \n    .search-btn:hover {\n      box-shadow: 0 4px 12px rgba(64, 158, 255, 0.2);\n    }\n  }\n}\n\n.status-option,\n.role-option {\n  display: flex;\n  align-items: center;\n  \n  .status-dot {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    margin-right: 8px;\n    \n    &.active {\n      background-color: #67C23A;\n    }\n    \n    &.inactive {\n      background-color: #E6A23C;\n    }\n    \n    &.disabled {\n      background-color: #909399;\n    }\n  }\n  \n  .role-icon {\n    margin-right: 8px;\n    font-size: 16px;\n    \n    &.admin {\n      color: #F56C6C;\n    }\n    \n    &.user {\n      color: #409EFF;\n    }\n    \n    &.readonly {\n      color: #909399;\n    }\n  }\n}\n\n.user-table-title {\n  font-size: 16px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n  display: flex;\n  align-items: center;\n  \n  i {\n    margin-right: 8px;\n    font-size: 16px;\n    color: #409EFF;\n  }\n}\n\n.user-table {\n  margin-top: 8px;\n  border-radius: 8px;\n  overflow: hidden;\n  \n  :deep(.el-table__header) {\n    th {\n      font-weight: 600;\n      padding: 12px 0;\n    }\n  }\n  \n  :deep(.el-table__row) {\n    transition: all 0.2s;\n    \n    &:hover {\n      background-color: #f5f7fc !important;\n    }\n  }\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  \n  .user-avatar {\n    background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n    color: #606266;\n  }\n  \n  .username {\n    font-weight: 500;\n    color: #303133;\n  }\n}\n\n.email-info,\n.login-info {\n  display: flex;\n  align-items: center;\n  \n  .email-icon,\n  .login-icon {\n    margin-right: 6px;\n    color: #909399;\n    font-size: 14px;\n  }\n}\n\n.role-tag,\n.status-tag {\n  display: flex;\n  align-items: center;\n  padding: 4px 8px;\n  border-radius: 4px;\n  \n  .role-icon {\n    margin-right: 4px;\n    font-size: 14px;\n  }\n  \n  .status-dot {\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    margin-right: 6px;\n    \n    &.active {\n      background-color: #67C23A;\n    }\n    \n    &.inactive {\n      background-color: #E6A23C;\n    }\n    \n    &.disabled {\n      background-color: #909399;\n    }\n  }\n}\n\n.table-actions {\n  display: flex;\n  gap: 8px;\n  \n  .action-btn {\n    padding: 4px 8px;\n    border-radius: 4px;\n    transition: all 0.3s;\n    \n    i {\n      margin-right: 4px;\n    }\n    \n    &:hover {\n      opacity: 0.9;\n      transform: translateY(-1px);\n    }\n    \n    &.edit-btn {\n      background-color: #409EFF;\n      border-color: #409EFF;\n    }\n    \n    &.toggle-btn {\n      &.el-button--warning {\n        background-color: #E6A23C;\n        border-color: #E6A23C;\n      }\n      \n      &.el-button--success {\n        background-color: #67C23A;\n        border-color: #67C23A;\n      }\n    }\n    \n    &.delete-btn {\n      background-color: #F56C6C;\n      border-color: #F56C6C;\n    }\n  }\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n  \n  .pagination {\n    :deep(.el-pagination__total) {\n      font-weight: 500;\n    }\n    \n    :deep(.el-pagination__sizes) {\n      margin-right: 16px;\n    }\n    \n    :deep(.btn-prev, .btn-next, .el-pager li) {\n      transition: all 0.3s;\n      \n      &:hover {\n        transform: translateY(-2px);\n      }\n    }\n    \n    :deep(.el-pager li.active) {\n      font-weight: 700;\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .user-management-page {\n    padding: 16px;\n  }\n  \n  .page-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .filter-form {\n    flex-direction: column;\n    gap: 12px;\n    \n    .filter-buttons {\n      margin-left: 0;\n      width: 100%;\n      \n      .search-btn,\n      .reset-btn {\n        flex: 1;\n      }\n    }\n  }\n  \n  .el-form-item {\n    margin-bottom: 10px;\n  }\n  \n  .table-actions {\n    flex-direction: column;\n    gap: 4px;\n    \n    .action-btn {\n      width: 100%;\n    }\n  }\n}\n\n/* 用户对话框样式 */\n:deep(.user-dialog) {\n  .el-dialog__header {\n    padding: 20px;\n    margin-right: 0;\n    border-bottom: 1px solid #EBEEF5;\n    \n    .el-dialog__title {\n      font-size: 18px;\n      font-weight: 600;\n      color: #303133;\n    }\n  }\n  \n  .el-dialog__body {\n    padding: 24px;\n  }\n  \n  .el-dialog__footer {\n    padding: 16px 24px;\n    border-top: 1px solid #EBEEF5;\n  }\n}\n\n.dialog-header {\n  margin-bottom: 24px;\n  \n  .user-preview {\n    display: flex;\n    align-items: center;\n    \n    .preview-avatar {\n      background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-weight: bold;\n      color: #606266;\n      margin-right: 16px;\n      font-size: 20px;\n    }\n    \n    .preview-info {\n      h3 {\n        margin: 0 0 4px 0;\n        font-size: 16px;\n        color: #303133;\n      }\n      \n      p {\n        margin: 0;\n        color: #909399;\n        font-size: 14px;\n      }\n    }\n  }\n}\n\n.user-form {\n  .form-tip {\n    color: #909399;\n    font-size: 12px;\n    margin-top: 4px;\n  }\n  \n  :deep(.el-input__inner) {\n    border-radius: 8px;\n    \n    &:focus {\n      box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.1);\n    }\n  }\n  \n  :deep(.el-select .el-input__inner) {\n    border-radius: 8px;\n  }\n}\n\n.password-section {\n  margin-top: 16px;\n  border-top: 1px dashed #EBEEF5;\n  padding-top: 16px;\n  \n  .section-header {\n    display: flex;\n    align-items: center;\n    margin-bottom: 16px;\n    color: #606266;\n    font-weight: 600;\n    \n    i {\n      color: #F56C6C;\n      margin-right: 6px;\n    }\n  }\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  \n  .cancel-btn,\n  .submit-btn {\n    min-width: 100px;\n    border-radius: 8px;\n    transition: all 0.3s;\n    \n    &:hover {\n      transform: translateY(-2px);\n    }\n  }\n  \n  .submit-btn:hover {\n    box-shadow: 0 4px 12px rgba(64, 158, 255, 0.2);\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}