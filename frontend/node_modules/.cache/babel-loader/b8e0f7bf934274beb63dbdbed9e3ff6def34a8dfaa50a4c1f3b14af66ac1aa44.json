{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport axios from 'axios';\nvar state = {\n  token: localStorage.getItem('token') || null,\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  loading: false,\n  error: null\n};\nvar getters = {\n  isAuthenticated: function isAuthenticated(state) {\n    return !!state.token;\n  },\n  isAdmin: function isAdmin(state) {\n    return state.user && state.user.role === 'admin';\n  },\n  currentUser: function currentUser(state) {\n    return state.user;\n  },\n  authError: function authError(state) {\n    return state.error;\n  },\n  authLoading: function authLoading(state) {\n    return state.loading;\n  }\n};\nvar mutations = {\n  AUTH_REQUEST: function AUTH_REQUEST(state) {\n    state.loading = true;\n    state.error = null;\n  },\n  AUTH_SUCCESS: function AUTH_SUCCESS(state, _ref) {\n    var token = _ref.token,\n      user = _ref.user;\n    state.token = token;\n    state.user = user;\n    state.loading = false;\n    state.error = null;\n  },\n  AUTH_ERROR: function AUTH_ERROR(state, error) {\n    state.loading = false;\n    state.error = error;\n  },\n  LOGOUT: function LOGOUT(state) {\n    state.token = null;\n    state.user = null;\n  },\n  UPDATE_USER: function UPDATE_USER(state, user) {\n    state.user = _objectSpread(_objectSpread({}, state.user), user);\n  }\n};\nvar actions = {\n  // 用户登录\n  login: function login(_ref2, credentials) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, dispatch, response, _response$data, token, user, _error$response, message;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref2.commit, dispatch = _ref2.dispatch;\n            _context.prev = 1;\n            commit('AUTH_REQUEST');\n            _context.next = 5;\n            return axios.post('/auth/login', credentials);\n          case 5:\n            response = _context.sent;\n            _response$data = response.data, token = _response$data.token, user = _response$data.user; // 保存到本地存储\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n\n            // 更新状态\n            commit('AUTH_SUCCESS', {\n              token: token,\n              user: user\n            });\n\n            // 设置axios默认Authorization头\n            axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n\n            // 添加欢迎通知\n            dispatch('addNotification', {\n              type: 'success',\n              message: \"\\u6B22\\u8FCE\\u56DE\\u6765\\uFF0C\".concat(user.firstName, \"\\uFF01\"),\n              title: '登录成功'\n            }, {\n              root: true\n            });\n            return _context.abrupt(\"return\", {\n              success: true\n            });\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            message = ((_error$response = _context.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || '登录失败，请检查您的凭据';\n            commit('AUTH_ERROR', message);\n            return _context.abrupt(\"return\", {\n              success: false,\n              message: message\n            });\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 15]]);\n    }))();\n  },\n  // 用户注册\n  register: function register(_ref3, userData) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var commit, dispatch, response, _response$data2, token, user, _error$response2, message;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref3.commit, dispatch = _ref3.dispatch;\n            _context2.prev = 1;\n            commit('AUTH_REQUEST');\n            _context2.next = 5;\n            return axios.post('/auth/register', userData);\n          case 5:\n            response = _context2.sent;\n            _response$data2 = response.data, token = _response$data2.token, user = _response$data2.user; // 保存到本地存储\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n\n            // 更新状态\n            commit('AUTH_SUCCESS', {\n              token: token,\n              user: user\n            });\n\n            // 设置axios默认Authorization头\n            axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n\n            // 添加欢迎通知\n            dispatch('addNotification', {\n              type: 'success',\n              message: \"\\u6B22\\u8FCE\\u52A0\\u5165\\uFF0C\".concat(user.firstName, \"\\uFF01\"),\n              title: '注册成功'\n            }, {\n              root: true\n            });\n            return _context2.abrupt(\"return\", {\n              success: true\n            });\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](1);\n            message = ((_error$response2 = _context2.t0.response) === null || _error$response2 === void 0 || (_error$response2 = _error$response2.data) === null || _error$response2 === void 0 ? void 0 : _error$response2.error) || '注册失败，请检查输入信息';\n            commit('AUTH_ERROR', message);\n            return _context2.abrupt(\"return\", {\n              success: false,\n              message: message\n            });\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 15]]);\n    }))();\n  },\n  // 恢复会话\n  restoreSession: function restoreSession(_ref4) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var commit, state, response, user;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref4.commit, state = _ref4.state;\n            if (state.token) {\n              _context3.next = 3;\n              break;\n            }\n            return _context3.abrupt(\"return\", {\n              success: false\n            });\n          case 3:\n            _context3.prev = 3;\n            // 设置axios默认Authorization头\n            axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(state.token);\n\n            // 尝试获取当前用户信息以验证令牌\n            _context3.next = 7;\n            return axios.get('/users/me');\n          case 7:\n            response = _context3.sent;\n            user = response.data; // 更新本地存储中的用户信息\n            localStorage.setItem('user', JSON.stringify(user));\n\n            // 更新状态\n            commit('UPDATE_USER', user);\n            return _context3.abrupt(\"return\", {\n              success: true\n            });\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](3);\n            console.error('恢复会话失败:', _context3.t0);\n            // 如果令牌无效，退出登录\n            commit('LOGOUT');\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            delete axios.defaults.headers.common['Authorization'];\n            return _context3.abrupt(\"return\", {\n              success: false\n            });\n          case 22:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[3, 14]]);\n    }))();\n  },\n  // 用户退出\n  logout: function logout(_ref5) {\n    var commit = _ref5.commit;\n    // 清除本地存储\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // 移除axios默认Authorization头\n    delete axios.defaults.headers.common['Authorization'];\n\n    // 更新状态\n    commit('LOGOUT');\n  },\n  // 更新用户信息\n  updateUserInfo: function updateUserInfo(_ref6, user) {\n    var commit = _ref6.commit;\n    // 更新本地存储\n    localStorage.setItem('user', JSON.stringify(_objectSpread(_objectSpread({}, state.user), user)));\n\n    // 更新状态\n    commit('UPDATE_USER', user);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"names":["axios","state","token","localStorage","getItem","user","JSON","parse","loading","error","getters","isAuthenticated","isAdmin","role","currentUser","authError","authLoading","mutations","AUTH_REQUEST","AUTH_SUCCESS","_ref","AUTH_ERROR","LOGOUT","UPDATE_USER","_objectSpread","actions","login","_ref2","credentials","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","dispatch","response","_response$data","_error$response","message","wrap","_callee$","_context","prev","next","post","sent","data","setItem","stringify","defaults","headers","common","concat","type","firstName","title","root","abrupt","success","t0","stop","register","_ref3","userData","_callee2","_response$data2","_error$response2","_callee2$","_context2","restoreSession","_ref4","_callee3","_callee3$","_context3","get","console","removeItem","logout","_ref5","updateUserInfo","_ref6","namespaced"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\n\nconst state = {\n  token: localStorage.getItem('token') || null,\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  loading: false,\n  error: null\n}\n\nconst getters = {\n  isAuthenticated: state => !!state.token,\n  isAdmin: state => state.user && state.user.role === 'admin',\n  currentUser: state => state.user,\n  authError: state => state.error,\n  authLoading: state => state.loading\n}\n\nconst mutations = {\n  AUTH_REQUEST(state) {\n    state.loading = true\n    state.error = null\n  },\n  \n  AUTH_SUCCESS(state, { token, user }) {\n    state.token = token\n    state.user = user\n    state.loading = false\n    state.error = null\n  },\n  \n  AUTH_ERROR(state, error) {\n    state.loading = false\n    state.error = error\n  },\n  \n  LOGOUT(state) {\n    state.token = null\n    state.user = null\n  },\n  \n  UPDATE_USER(state, user) {\n    state.user = { ...state.user, ...user }\n  }\n}\n\nconst actions = {\n  // 用户登录\n  async login({ commit, dispatch }, credentials) {\n    try {\n      commit('AUTH_REQUEST')\n      \n      const response = await axios.post('/auth/login', credentials)\n      const { token, user } = response.data\n      \n      // 保存到本地存储\n      localStorage.setItem('token', token)\n      localStorage.setItem('user', JSON.stringify(user))\n      \n      // 更新状态\n      commit('AUTH_SUCCESS', { token, user })\n      \n      // 设置axios默认Authorization头\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n      \n      // 添加欢迎通知\n      dispatch('addNotification', {\n        type: 'success',\n        message: `欢迎回来，${user.firstName}！`,\n        title: '登录成功'\n      }, { root: true })\n      \n      return { success: true }\n    } catch (error) {\n      const message = error.response?.data?.error || '登录失败，请检查您的凭据'\n      commit('AUTH_ERROR', message)\n      return { success: false, message }\n    }\n  },\n  \n  // 用户注册\n  async register({ commit, dispatch }, userData) {\n    try {\n      commit('AUTH_REQUEST')\n      \n      const response = await axios.post('/auth/register', userData)\n      const { token, user } = response.data\n      \n      // 保存到本地存储\n      localStorage.setItem('token', token)\n      localStorage.setItem('user', JSON.stringify(user))\n      \n      // 更新状态\n      commit('AUTH_SUCCESS', { token, user })\n      \n      // 设置axios默认Authorization头\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n      \n      // 添加欢迎通知\n      dispatch('addNotification', {\n        type: 'success',\n        message: `欢迎加入，${user.firstName}！`,\n        title: '注册成功'\n      }, { root: true })\n      \n      return { success: true }\n    } catch (error) {\n      const message = error.response?.data?.error || '注册失败，请检查输入信息'\n      commit('AUTH_ERROR', message)\n      return { success: false, message }\n    }\n  },\n  \n  // 恢复会话\n  async restoreSession({ commit, state }) {\n    if (!state.token) return { success: false }\n    \n    try {\n      // 设置axios默认Authorization头\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`\n      \n      // 尝试获取当前用户信息以验证令牌\n      const response = await axios.get('/users/me')\n      const user = response.data\n      \n      // 更新本地存储中的用户信息\n      localStorage.setItem('user', JSON.stringify(user))\n      \n      // 更新状态\n      commit('UPDATE_USER', user)\n      \n      return { success: true }\n    } catch (error) {\n      console.error('恢复会话失败:', error)\n      // 如果令牌无效，退出登录\n      commit('LOGOUT')\n      localStorage.removeItem('token')\n      localStorage.removeItem('user')\n      delete axios.defaults.headers.common['Authorization']\n      return { success: false }\n    }\n  },\n  \n  // 用户退出\n  logout({ commit }) {\n    // 清除本地存储\n    localStorage.removeItem('token')\n    localStorage.removeItem('user')\n    \n    // 移除axios默认Authorization头\n    delete axios.defaults.headers.common['Authorization']\n    \n    // 更新状态\n    commit('LOGOUT')\n  },\n  \n  // 更新用户信息\n  updateUserInfo({ commit }, user) {\n    // 更新本地存储\n    localStorage.setItem('user', JSON.stringify({ ...state.user, ...user }))\n    \n    // 更新状态\n    commit('UPDATE_USER', user)\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}