{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport axios from 'axios';\nvar state = {\n  data: {\n    totalVulnerabilities: 0,\n    vulnerabilitiesBySeverity: {},\n    vulnerabilitiesByStatus: {},\n    recentVulnerabilities: [],\n    topAffectedSystems: [],\n    vulnerabilitiesByMonth: [],\n    riskScore: 0,\n    teamVulnerabilities: [],\n    criticalVulnerabilities: [],\n    remediationProgress: {\n      resolvedCount: 0,\n      totalCount: 0,\n      progressRate: 0,\n      averageDays: 0\n    },\n    vulnerabilityTrends: {\n      newVulnerabilities: [],\n      resolvedVulnerabilities: [],\n      timeLabels: [],\n      netChange: []\n    }\n  },\n  loading: false,\n  error: null\n};\nvar getters = {\n  dashboardData: function dashboardData(state) {\n    return state.data;\n  },\n  isLoading: function isLoading(state) {\n    return state.loading;\n  },\n  error: function error(state) {\n    return state.error;\n  },\n  // 获取总漏洞数\n  totalVulnerabilities: function totalVulnerabilities(state) {\n    return state.data.totalVulnerabilities || 0;\n  },\n  // 获取严重程度统计\n  severityCounts: function severityCounts(state) {\n    return state.data.vulnerabilitiesBySeverity || {};\n  },\n  // 获取状态统计\n  statusCounts: function statusCounts(state) {\n    return state.data.vulnerabilitiesByStatus || {};\n  },\n  // 获取风险分数\n  riskScore: function riskScore(state) {\n    return Math.round(state.data.riskScore || 0);\n  },\n  // 获取团队漏洞统计\n  teamVulnerabilities: function teamVulnerabilities(state) {\n    return state.data.teamVulnerabilities || [];\n  },\n  // 获取需优先关注的高危漏洞\n  criticalVulnerabilities: function criticalVulnerabilities(state) {\n    return state.data.criticalVulnerabilities || [];\n  },\n  // 获取修复进度\n  remediationProgress: function remediationProgress(state) {\n    return state.data.remediationProgress || {\n      resolvedCount: 0,\n      totalCount: 0,\n      progressRate: 0,\n      averageDays: 0\n    };\n  },\n  // 获取漏洞趋势\n  vulnerabilityTrends: function vulnerabilityTrends(state) {\n    return state.data.vulnerabilityTrends || {\n      newVulnerabilities: [],\n      resolvedVulnerabilities: [],\n      timeLabels: [],\n      netChange: []\n    };\n  },\n  // 获取修复率百分比\n  remediationRate: function remediationRate(state) {\n    var progress = state.data.remediationProgress || {};\n    if (progress.totalCount > 0) {\n      return Math.round(progress.progressRate);\n    }\n    return 0;\n  }\n};\nvar mutations = {\n  SET_DASHBOARD_DATA: function SET_DASHBOARD_DATA(state, data) {\n    state.data = data;\n  },\n  SET_LOADING: function SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR: function SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nvar actions = {\n  // 获取仪表盘数据\n  fetchDashboardData: function fetchDashboardData(_ref) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, response, dashboardData, _error$response, message;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit;\n            _context.prev = 1;\n            commit('SET_LOADING', true);\n            _context.next = 5;\n            return axios.get('/api/dashboard');\n          case 5:\n            response = _context.sent;\n            // 如果需要，在此处对数据进行处理或格式化\n            dashboardData = response.data;\n            commit('SET_DASHBOARD_DATA', dashboardData);\n            commit('SET_LOADING', false);\n            commit('SET_ERROR', null);\n            return _context.abrupt(\"return\", dashboardData);\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            message = ((_error$response = _context.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.error) || '获取仪表盘数据失败';\n            commit('SET_ERROR', message);\n            commit('SET_LOADING', false);\n            throw _context.t0;\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 13]]);\n    }))();\n  },\n  // 重置仪表盘数据\n  resetDashboardData: function resetDashboardData(_ref2) {\n    var commit = _ref2.commit;\n    commit('SET_DASHBOARD_DATA', {\n      totalVulnerabilities: 0,\n      vulnerabilitiesBySeverity: {},\n      vulnerabilitiesByStatus: {},\n      recentVulnerabilities: [],\n      topAffectedSystems: [],\n      vulnerabilitiesByMonth: [],\n      riskScore: 0,\n      teamVulnerabilities: [],\n      criticalVulnerabilities: [],\n      remediationProgress: {\n        resolvedCount: 0,\n        totalCount: 0,\n        progressRate: 0,\n        averageDays: 0\n      },\n      vulnerabilityTrends: {\n        newVulnerabilities: [],\n        resolvedVulnerabilities: [],\n        timeLabels: [],\n        netChange: []\n      }\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"names":["axios","state","data","totalVulnerabilities","vulnerabilitiesBySeverity","vulnerabilitiesByStatus","recentVulnerabilities","topAffectedSystems","vulnerabilitiesByMonth","riskScore","teamVulnerabilities","criticalVulnerabilities","remediationProgress","resolvedCount","totalCount","progressRate","averageDays","vulnerabilityTrends","newVulnerabilities","resolvedVulnerabilities","timeLabels","netChange","loading","error","getters","dashboardData","isLoading","severityCounts","statusCounts","Math","round","remediationRate","progress","mutations","SET_DASHBOARD_DATA","SET_LOADING","SET_ERROR","actions","fetchDashboardData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","response","_error$response","message","wrap","_callee$","_context","prev","next","get","sent","abrupt","t0","stop","resetDashboardData","_ref2","namespaced"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/store/modules/dashboard.js"],"sourcesContent":["import axios from 'axios'\n\nconst state = {\n  data: {\n    totalVulnerabilities: 0,\n    vulnerabilitiesBySeverity: {},\n    vulnerabilitiesByStatus: {},\n    recentVulnerabilities: [],\n    topAffectedSystems: [],\n    vulnerabilitiesByMonth: [],\n    riskScore: 0,\n    teamVulnerabilities: [],\n    criticalVulnerabilities: [],\n    remediationProgress: {\n      resolvedCount: 0,\n      totalCount: 0,\n      progressRate: 0,\n      averageDays: 0\n    },\n    vulnerabilityTrends: {\n      newVulnerabilities: [],\n      resolvedVulnerabilities: [],\n      timeLabels: [],\n      netChange: []\n    }\n  },\n  loading: false,\n  error: null\n}\n\nconst getters = {\n  dashboardData: state => state.data,\n  isLoading: state => state.loading,\n  error: state => state.error,\n  \n  // 获取总漏洞数\n  totalVulnerabilities: state => state.data.totalVulnerabilities || 0,\n  \n  // 获取严重程度统计\n  severityCounts: state => state.data.vulnerabilitiesBySeverity || {},\n  \n  // 获取状态统计\n  statusCounts: state => state.data.vulnerabilitiesByStatus || {},\n  \n  // 获取风险分数\n  riskScore: state => Math.round(state.data.riskScore || 0),\n  \n  // 获取团队漏洞统计\n  teamVulnerabilities: state => state.data.teamVulnerabilities || [],\n  \n  // 获取需优先关注的高危漏洞\n  criticalVulnerabilities: state => state.data.criticalVulnerabilities || [],\n  \n  // 获取修复进度\n  remediationProgress: state => state.data.remediationProgress || {\n    resolvedCount: 0,\n    totalCount: 0,\n    progressRate: 0,\n    averageDays: 0\n  },\n  \n  // 获取漏洞趋势\n  vulnerabilityTrends: state => state.data.vulnerabilityTrends || {\n    newVulnerabilities: [],\n    resolvedVulnerabilities: [],\n    timeLabels: [],\n    netChange: []\n  },\n  \n  // 获取修复率百分比\n  remediationRate: state => {\n    const progress = state.data.remediationProgress || {}\n    if (progress.totalCount > 0) {\n      return Math.round(progress.progressRate)\n    }\n    return 0\n  }\n}\n\nconst mutations = {\n  SET_DASHBOARD_DATA(state, data) {\n    state.data = data\n  },\n  \n  SET_LOADING(state, loading) {\n    state.loading = loading\n  },\n  \n  SET_ERROR(state, error) {\n    state.error = error\n  }\n}\n\nconst actions = {\n  // 获取仪表盘数据\n  async fetchDashboardData({ commit }) {\n    try {\n      commit('SET_LOADING', true)\n      \n      const response = await axios.get('/api/dashboard')\n      \n      // 如果需要，在此处对数据进行处理或格式化\n      const dashboardData = response.data\n      \n      commit('SET_DASHBOARD_DATA', dashboardData)\n      commit('SET_LOADING', false)\n      commit('SET_ERROR', null)\n      \n      return dashboardData\n    } catch (error) {\n      const message = error.response?.data?.error || '获取仪表盘数据失败'\n      commit('SET_ERROR', message)\n      commit('SET_LOADING', false)\n      throw error\n    }\n  },\n  \n  // 重置仪表盘数据\n  resetDashboardData({ commit }) {\n    commit('SET_DASHBOARD_DATA', {\n      totalVulnerabilities: 0,\n      vulnerabilitiesBySeverity: {},\n      vulnerabilitiesByStatus: {},\n      recentVulnerabilities: [],\n      topAffectedSystems: [],\n      vulnerabilitiesByMonth: [],\n      riskScore: 0,\n      teamVulnerabilities: [],\n      criticalVulnerabilities: [],\n      remediationProgress: {\n        resolvedCount: 0,\n        totalCount: 0,\n        progressRate: 0,\n        averageDays: 0\n      },\n      vulnerabilityTrends: {\n        newVulnerabilities: [],\n        resolvedVulnerabilities: [],\n        timeLabels: [],\n        netChange: []\n      }\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}