{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { ElMessageBox, ElMessage } from 'element-plus';\nexport default {\n  name: 'VulnerabilityList',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    // 数据和状态\n    const loading = computed(() => store.getters['vulnerability/isLoading']);\n    const vulnerabilities = computed(() => store.getters['vulnerability/allVulnerabilities']);\n    const pagination = computed(() => store.getters['vulnerability/pagination']);\n\n    // 搜索参数\n    const searchParams = reactive({\n      severity: '',\n      status: '',\n      assignedTo: '',\n      searchTerm: '',\n      sortBy: 'createdAt',\n      sortOrder: 'desc',\n      page: 1,\n      perPage: 10\n    });\n\n    // 获取漏洞列表\n    const fetchVulnerabilities = async () => {\n      try {\n        await store.dispatch('vulnerability/fetchVulnerabilities');\n      } catch (error) {\n        ElMessage.error('获取漏洞列表失败：' + (error.message || '未知错误'));\n      }\n    };\n\n    // 搜索漏洞\n    const searchVulnerabilities = () => {\n      store.dispatch('vulnerability/updateSearchParams', searchParams);\n    };\n\n    // 重置搜索\n    const resetSearch = () => {\n      Object.assign(searchParams, {\n        severity: '',\n        status: '',\n        assignedTo: '',\n        searchTerm: '',\n        sortBy: 'createdAt',\n        sortOrder: 'desc',\n        page: 1\n      });\n      searchVulnerabilities();\n    };\n\n    // 分页处理\n    const handleSizeChange = size => {\n      searchParams.perPage = size;\n      searchVulnerabilities();\n    };\n    const handleCurrentChange = page => {\n      searchParams.page = page;\n      searchVulnerabilities();\n    };\n\n    // 漏洞操作\n    const viewDetails = id => {\n      router.push(`/vulnerabilities/${id}`);\n    };\n    const editVulnerability = id => {\n      router.push(`/vulnerabilities/${id}?edit=true`);\n    };\n    const deleteVulnerability = id => {\n      ElMessageBox.confirm('确定要删除这个漏洞吗？此操作不可恢复。', '删除确认', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await store.dispatch('vulnerability/deleteVulnerability', id);\n          ElMessage.success('漏洞已成功删除');\n        } catch (error) {\n          ElMessage.error('删除漏洞失败：' + (error.message || '未知错误'));\n        }\n      }).catch(() => {\n        // 用户取消删除\n      });\n    };\n    const markStatus = async (id, status) => {\n      try {\n        await store.dispatch('vulnerability/updateVulnerability', {\n          id,\n          data: {\n            status\n          }\n        });\n        ElMessage.success('漏洞状态已更新');\n      } catch (error) {\n        ElMessage.error('更新漏洞状态失败：' + (error.message || '未知错误'));\n      }\n    };\n\n    // 新增和导入漏洞\n    const handleCreate = () => {\n      router.push('/vulnerabilities/create');\n    };\n    const handleImport = () => {\n      router.push('/vulnerabilities/import');\n    };\n\n    // 页面加载时获取数据\n    onMounted(() => {\n      fetchVulnerabilities();\n    });\n    return {\n      loading,\n      vulnerabilities,\n      pagination,\n      searchParams,\n      searchVulnerabilities,\n      resetSearch,\n      handleSizeChange,\n      handleCurrentChange,\n      viewDetails,\n      editVulnerability,\n      deleteVulnerability,\n      markStatus,\n      handleCreate,\n      handleImport\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useStore","useRouter","ElMessageBox","ElMessage","name","setup","store","router","loading","getters","vulnerabilities","pagination","searchParams","severity","status","assignedTo","searchTerm","sortBy","sortOrder","page","perPage","fetchVulnerabilities","dispatch","error","message","searchVulnerabilities","resetSearch","Object","assign","handleSizeChange","size","handleCurrentChange","viewDetails","id","push","editVulnerability","deleteVulnerability","confirm","confirmButtonText","cancelButtonText","type","then","success","catch","markStatus","data","handleCreate","handleImport"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/vulnerabilities/VulnerabilityList.vue"],"sourcesContent":["<template>\n  <div class=\"vulnerability-list\">\n    <div class=\"page-header\">\n      <div class=\"header-left\">\n        <h1 class=\"page-title\">漏洞列表</h1>\n        <p class=\"page-subtitle\">管理和跟踪所有安全漏洞</p>\n      </div>\n      <div class=\"header-right\">\n        <el-button type=\"primary\" @click=\"handleCreate\">新增漏洞</el-button>\n        <el-button @click=\"handleImport\">导入漏洞</el-button>\n      </div>\n    </div>\n\n    <!-- 搜索和筛选 -->\n    <el-card shadow=\"hover\" class=\"filter-card\">\n      <el-form :model=\"searchParams\" inline>\n        <el-form-item label=\"关键词\">\n          <el-input\n            v-model=\"searchParams.searchTerm\"\n            placeholder=\"标题/CVE/描述\"\n            clearable\n            @keyup.enter=\"searchVulnerabilities\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"严重程度\">\n          <el-select v-model=\"searchParams.severity\" placeholder=\"所有严重程度\" clearable>\n            <el-option label=\"严重\" value=\"critical\" />\n            <el-option label=\"高危\" value=\"high\" />\n            <el-option label=\"中危\" value=\"medium\" />\n            <el-option label=\"低危\" value=\"low\" />\n            <el-option label=\"信息\" value=\"info\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"状态\">\n          <el-select v-model=\"searchParams.status\" placeholder=\"所有状态\" clearable>\n            <el-option label=\"开放\" value=\"open\" />\n            <el-option label=\"处理中\" value=\"in_progress\" />\n            <el-option label=\"已解决\" value=\"resolved\" />\n            <el-option label=\"已关闭\" value=\"closed\" />\n            <el-option label=\"误报\" value=\"false_positive\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"searchVulnerabilities\">搜索</el-button>\n          <el-button @click=\"resetSearch\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 漏洞表格 -->\n    <el-card shadow=\"hover\" class=\"vuln-table-card\">\n      <div v-loading=\"loading\">\n        <el-table\n          v-if=\"vulnerabilities.length > 0\"\n          :data=\"vulnerabilities\"\n          style=\"width: 100%\"\n          border\n          stripe\n          :header-cell-style=\"{background:'#f5f7fa'}\"\n        >\n          <el-table-column label=\"标题\" prop=\"title\" min-width=\"200\">\n            <template #default=\"scope\">\n              <router-link :to=\"`/vulnerabilities/${scope.row.id}`\" class=\"vuln-title-link\">\n                {{ scope.row.title }}\n              </router-link>\n            </template>\n          </el-table-column>\n          \n          <el-table-column label=\"CVE\" prop=\"cve\" width=\"120\" />\n          \n          <el-table-column label=\"严重程度\" prop=\"severity\" width=\"100\">\n            <template #default=\"scope\">\n              <el-tag :type=\"$filters.severityClass(scope.row.severity)\" size=\"small\">\n                {{ $filters.severityText(scope.row.severity) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          \n          <el-table-column label=\"状态\" prop=\"status\" width=\"100\">\n            <template #default=\"scope\">\n              <el-tag :type=\"$filters.statusClass(scope.row.status)\" size=\"small\">\n                {{ $filters.statusText(scope.row.status) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          \n          <el-table-column label=\"报告时间\" prop=\"reportedAt\" width=\"150\">\n            <template #default=\"scope\">\n              {{ $filters.formatDate(scope.row.reportedAt) }}\n            </template>\n          </el-table-column>\n          \n          <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n            <template #default=\"scope\">\n              <el-button size=\"small\" @click=\"viewDetails(scope.row.id)\">查看</el-button>\n              <el-dropdown>\n                <el-button size=\"small\" type=\"primary\" icon=\"el-icon-more\">\n                  <i class=\"el-icon-arrow-down el-icon--right\"></i>\n                </el-button>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item @click=\"editVulnerability(scope.row.id)\">编辑</el-dropdown-item>\n                    <el-dropdown-item @click=\"markStatus(scope.row.id, 'in_progress')\">标记为处理中</el-dropdown-item>\n                    <el-dropdown-item @click=\"markStatus(scope.row.id, 'resolved')\">标记为已解决</el-dropdown-item>\n                    <el-dropdown-item @click=\"markStatus(scope.row.id, 'closed')\">标记为已关闭</el-dropdown-item>\n                    <el-dropdown-item divided @click=\"deleteVulnerability(scope.row.id)\">\n                      <span style=\"color: #F56C6C;\">删除</span>\n                    </el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </template>\n          </el-table-column>\n        </el-table>\n        \n        <div v-else-if=\"!loading\" class=\"empty-state\">\n          <el-empty description=\"暂无漏洞数据\">\n            <el-button type=\"primary\" @click=\"handleCreate\">新增漏洞</el-button>\n          </el-empty>\n        </div>\n        \n        <!-- 分页 -->\n        <div class=\"pagination-wrapper\" v-if=\"pagination.total > 0\">\n          <el-pagination\n            background\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :current-page=\"searchParams.page\"\n            :page-size=\"searchParams.perPage\"\n            :page-sizes=\"[10, 20, 50, 100]\"\n            :total=\"pagination.total\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport { ElMessageBox, ElMessage } from 'element-plus'\n\nexport default {\n  name: 'VulnerabilityList',\n  \n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    \n    // 数据和状态\n    const loading = computed(() => store.getters['vulnerability/isLoading'])\n    const vulnerabilities = computed(() => store.getters['vulnerability/allVulnerabilities'])\n    const pagination = computed(() => store.getters['vulnerability/pagination'])\n    \n    // 搜索参数\n    const searchParams = reactive({\n      severity: '',\n      status: '',\n      assignedTo: '',\n      searchTerm: '',\n      sortBy: 'createdAt',\n      sortOrder: 'desc',\n      page: 1,\n      perPage: 10\n    })\n    \n    // 获取漏洞列表\n    const fetchVulnerabilities = async () => {\n      try {\n        await store.dispatch('vulnerability/fetchVulnerabilities')\n      } catch (error) {\n        ElMessage.error('获取漏洞列表失败：' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 搜索漏洞\n    const searchVulnerabilities = () => {\n      store.dispatch('vulnerability/updateSearchParams', searchParams)\n    }\n    \n    // 重置搜索\n    const resetSearch = () => {\n      Object.assign(searchParams, {\n        severity: '',\n        status: '',\n        assignedTo: '',\n        searchTerm: '',\n        sortBy: 'createdAt',\n        sortOrder: 'desc',\n        page: 1\n      })\n      searchVulnerabilities()\n    }\n    \n    // 分页处理\n    const handleSizeChange = (size) => {\n      searchParams.perPage = size\n      searchVulnerabilities()\n    }\n    \n    const handleCurrentChange = (page) => {\n      searchParams.page = page\n      searchVulnerabilities()\n    }\n    \n    // 漏洞操作\n    const viewDetails = (id) => {\n      router.push(`/vulnerabilities/${id}`)\n    }\n    \n    const editVulnerability = (id) => {\n      router.push(`/vulnerabilities/${id}?edit=true`)\n    }\n    \n    const deleteVulnerability = (id) => {\n      ElMessageBox.confirm(\n        '确定要删除这个漏洞吗？此操作不可恢复。',\n        '删除确认',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          await store.dispatch('vulnerability/deleteVulnerability', id)\n          ElMessage.success('漏洞已成功删除')\n        } catch (error) {\n          ElMessage.error('删除漏洞失败：' + (error.message || '未知错误'))\n        }\n      }).catch(() => {\n        // 用户取消删除\n      })\n    }\n    \n    const markStatus = async (id, status) => {\n      try {\n        await store.dispatch('vulnerability/updateVulnerability', {\n          id,\n          data: { status }\n        })\n        ElMessage.success('漏洞状态已更新')\n      } catch (error) {\n        ElMessage.error('更新漏洞状态失败：' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 新增和导入漏洞\n    const handleCreate = () => {\n      router.push('/vulnerabilities/create')\n    }\n    \n    const handleImport = () => {\n      router.push('/vulnerabilities/import')\n    }\n    \n    // 页面加载时获取数据\n    onMounted(() => {\n      fetchVulnerabilities()\n    })\n    \n    return {\n      loading,\n      vulnerabilities,\n      pagination,\n      searchParams,\n      searchVulnerabilities,\n      resetSearch,\n      handleSizeChange,\n      handleCurrentChange,\n      viewDetails,\n      editVulnerability,\n      deleteVulnerability,\n      markStatus,\n      handleCreate,\n      handleImport\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.vulnerability-list {\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.page-subtitle {\n  color: #909399;\n  margin: 4px 0 0;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.vuln-table-card {\n  margin-bottom: 20px;\n}\n\n.vuln-title-link {\n  color: #409EFF;\n  text-decoration: none;\n  font-weight: 500;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n}\n\n.pagination-wrapper {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.empty-state {\n  padding: 40px 0;\n  display: flex;\n  justify-content: center;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}