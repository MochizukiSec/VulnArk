{"ast":null,"code":"import _slicedToArray from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport default {\n  name: 'ResourceOptimizationDetail',\n  props: {\n    analysisData: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      pieSettings: {\n        radius: '65%',\n        offsetY: '60px',\n        label: {\n          formatter: '{b}: {d}%'\n        }\n      }\n    };\n  },\n  computed: {\n    currentAllocationData: function currentAllocationData() {\n      return this.transformAllocationData(this.analysisData.currentAllocation);\n    },\n    recommendedAllocationData: function recommendedAllocationData() {\n      return this.transformAllocationData(this.analysisData.recommendedAllocation);\n    },\n    comparisonTableData: function comparisonTableData() {\n      var _this = this;\n      var data = [];\n\n      // 获取所有资源类别\n      var categories = _toConsumableArray(new Set([].concat(_toConsumableArray(Object.keys(this.analysisData.currentAllocation)), _toConsumableArray(Object.keys(this.analysisData.recommendedAllocation)))));\n\n      // 构建表格数据\n      categories.forEach(function (category) {\n        var current = _this.analysisData.currentAllocation[category] || 0;\n        var recommended = _this.analysisData.recommendedAllocation[category] || 0;\n        var change = recommended - current;\n        data.push({\n          category: category,\n          current: current,\n          recommended: recommended,\n          change: change\n        });\n      });\n      return data;\n    }\n  },\n  methods: {\n    transformAllocationData: function transformAllocationData(allocation) {\n      var rows = Object.entries(allocation).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          category = _ref2[0],\n          value = _ref2[1];\n        return {\n          category: category,\n          percentage: value\n        };\n      });\n      return {\n        columns: ['category', 'percentage'],\n        rows: rows\n      };\n    },\n    formatChange: function formatChange(value) {\n      return value > 0 ? \"+\".concat(value, \"%\") : \"\".concat(value, \"%\");\n    },\n    getChangeClass: function getChangeClass(value) {\n      if (value > 0) return 'change-increase';\n      if (value < 0) return 'change-decrease';\n      return 'change-neutral';\n    },\n    getSeverityType: function getSeverityType(severity) {\n      var types = {\n        '高': 'danger',\n        '中': 'warning',\n        '低': 'info'\n      };\n      return types[severity] || 'info';\n    },\n    percentFormat: function percentFormat(percentage) {\n      return percentage.toFixed(1) + '%';\n    }\n  }\n};","map":{"version":3,"names":["name","props","analysisData","type","Object","required","data","pieSettings","radius","offsetY","label","formatter","computed","currentAllocationData","transformAllocationData","currentAllocation","recommendedAllocationData","recommendedAllocation","comparisonTableData","_this","categories","_toConsumableArray","Set","concat","keys","forEach","category","current","recommended","change","push","methods","allocation","rows","entries","map","_ref","_ref2","_slicedToArray","value","percentage","columns","formatChange","getChangeClass","getSeverityType","severity","types","percentFormat","toFixed"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/components/ai/details/ResourceOptimizationDetail.vue"],"sourcesContent":["<template>\n  <div class=\"resource-optimization-detail\">\n    <!-- 资源分配对比卡片 -->\n    <el-card class=\"detail-card\">\n      <template v-slot:header>\n        <div class=\"card-header\">\n          <span><i class=\"el-icon-s-operation\"></i> 资源分配对比</span>\n        </div>\n      </template>\n      <div class=\"allocation-comparison\">\n        <div class=\"comparison-charts\">\n          <div class=\"chart-wrapper\">\n            <h3 class=\"chart-title\">当前资源分配</h3>\n            <ve-pie\n              :data=\"currentAllocationData\"\n              :settings=\"pieSettings\"\n              height=\"300px\">\n            </ve-pie>\n          </div>\n          <div class=\"comparison-arrow\">\n            <i class=\"el-icon-right\"></i>\n          </div>\n          <div class=\"chart-wrapper\">\n            <h3 class=\"chart-title\">推荐资源分配</h3>\n            <ve-pie\n              :data=\"recommendedAllocationData\"\n              :settings=\"pieSettings\"\n              height=\"300px\">\n            </ve-pie>\n          </div>\n        </div>\n        \n        <div class=\"comparison-table\">\n          <el-table :data=\"comparisonTableData\" style=\"width: 100%\">\n            <el-table-column prop=\"category\" label=\"资源类别\"></el-table-column>\n            <el-table-column prop=\"current\" label=\"当前分配\">\n              <template v-slot=\"scope\">\n                {{ scope.row.current }}%\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"recommended\" label=\"推荐分配\">\n              <template v-slot=\"scope\">\n                {{ scope.row.recommended }}%\n              </template>\n            </el-table-column>\n            <el-table-column label=\"变化\">\n              <template v-slot=\"scope\">\n                <span :class=\"getChangeClass(scope.row.change)\">\n                  {{ formatChange(scope.row.change) }}\n                </span>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </div>\n    </el-card>\n    \n    <!-- 潜在改进卡片 -->\n    <el-card class=\"detail-card\">\n      <template v-slot:header>\n        <div class=\"card-header\">\n          <span><i class=\"el-icon-data-analysis\"></i> 潜在改进效果</span>\n        </div>\n      </template>\n      <div class=\"improvement-info\">\n        <div class=\"improvement-metric\">\n          <div class=\"metric-label\">预计效率提升</div>\n          <div class=\"metric-value\">{{ analysisData.potentialImprovement.toFixed(1) }}%</div>\n          <el-progress :percentage=\"analysisData.potentialImprovement\" :format=\"percentFormat\" status=\"success\"></el-progress>\n        </div>\n        <div class=\"improvement-description\">\n          <p>通过优化资源分配，预计可以提高安全团队的整体效率，减少漏洞修复时间，提升安全防御能力。</p>\n        </div>\n      </div>\n    </el-card>\n    \n    <!-- 瓶颈分析卡片 -->\n    <el-card class=\"detail-card\">\n      <template v-slot:header>\n        <div class=\"card-header\">\n          <span><i class=\"el-icon-warning-outline\"></i> 已识别的资源瓶颈</span>\n        </div>\n      </template>\n      <div class=\"bottlenecks\">\n        <el-collapse accordion>\n          <el-collapse-item v-for=\"(bottleneck, index) in analysisData.bottlenecksIdentified\" :key=\"index\">\n            <template v-slot:title>\n              <div class=\"bottleneck-title\">\n                <el-tag :type=\"getSeverityType(bottleneck.severity)\" size=\"medium\">{{ bottleneck.severity }}</el-tag>\n                <span class=\"bottleneck-area\">{{ bottleneck.area }}</span>\n              </div>\n            </template>\n            <div class=\"bottleneck-content\">\n              <p class=\"bottleneck-description\">\n                <strong>问题描述：</strong> {{ bottleneck.description }}\n              </p>\n              <p class=\"bottleneck-solution\">\n                <strong>推荐解决方案：</strong> {{ bottleneck.solution }}\n              </p>\n            </div>\n          </el-collapse-item>\n        </el-collapse>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ResourceOptimizationDetail',\n  props: {\n    analysisData: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      pieSettings: {\n        radius: '65%',\n        offsetY: '60px',\n        label: {\n          formatter: '{b}: {d}%'\n        }\n      }\n    }\n  },\n  computed: {\n    currentAllocationData() {\n      return this.transformAllocationData(this.analysisData.currentAllocation)\n    },\n    recommendedAllocationData() {\n      return this.transformAllocationData(this.analysisData.recommendedAllocation)\n    },\n    comparisonTableData() {\n      const data = []\n      \n      // 获取所有资源类别\n      const categories = [...new Set([\n        ...Object.keys(this.analysisData.currentAllocation),\n        ...Object.keys(this.analysisData.recommendedAllocation)\n      ])]\n      \n      // 构建表格数据\n      categories.forEach(category => {\n        const current = this.analysisData.currentAllocation[category] || 0\n        const recommended = this.analysisData.recommendedAllocation[category] || 0\n        const change = recommended - current\n        \n        data.push({\n          category,\n          current,\n          recommended,\n          change\n        })\n      })\n      \n      return data\n    }\n  },\n  methods: {\n    transformAllocationData(allocation) {\n      const rows = Object.entries(allocation).map(([category, value]) => ({\n        category,\n        percentage: value\n      }))\n      \n      return {\n        columns: ['category', 'percentage'],\n        rows\n      }\n    },\n    formatChange(value) {\n      return value > 0 ? `+${value}%` : `${value}%`\n    },\n    getChangeClass(value) {\n      if (value > 0) return 'change-increase'\n      if (value < 0) return 'change-decrease'\n      return 'change-neutral'\n    },\n    getSeverityType(severity) {\n      const types = {\n        '高': 'danger',\n        '中': 'warning',\n        '低': 'info'\n      }\n      return types[severity] || 'info'\n    },\n    percentFormat(percentage) {\n      return percentage.toFixed(1) + '%'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.resource-optimization-detail {\n  .detail-card {\n    margin-bottom: 24px;\n    \n    .card-header {\n      display: flex;\n      align-items: center;\n      \n      i {\n        margin-right: 10px;\n        font-size: 18px;\n      }\n    }\n    \n    .allocation-comparison {\n      .comparison-charts {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        margin-bottom: 30px;\n        \n        @media (max-width: 992px) {\n          flex-direction: column;\n        }\n        \n        .chart-wrapper {\n          flex: 1;\n          \n          .chart-title {\n            text-align: center;\n            font-size: 16px;\n            font-weight: 500;\n            margin-bottom: 10px;\n            color: #303133;\n          }\n        }\n        \n        .comparison-arrow {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          padding: 0 20px;\n          \n          @media (max-width: 992px) {\n            transform: rotate(90deg);\n            padding: 20px 0;\n          }\n          \n          i {\n            font-size: 32px;\n            color: #909399;\n          }\n        }\n      }\n      \n      .comparison-table {\n        margin-top: 20px;\n        \n        .change-increase {\n          color: #67C23A;\n          font-weight: bold;\n        }\n        \n        .change-decrease {\n          color: #F56C6C;\n          font-weight: bold;\n        }\n        \n        .change-neutral {\n          color: #909399;\n        }\n      }\n    }\n    \n    .improvement-info {\n      display: flex;\n      \n      @media (max-width: 768px) {\n        flex-direction: column;\n      }\n      \n      .improvement-metric {\n        flex: 1;\n        padding: 20px;\n        background-color: #F5F7FA;\n        border-radius: 8px;\n        margin-right: 20px;\n        \n        @media (max-width: 768px) {\n          margin-right: 0;\n          margin-bottom: 20px;\n        }\n        \n        .metric-label {\n          font-size: 16px;\n          margin-bottom: 10px;\n          color: #606266;\n        }\n        \n        .metric-value {\n          font-size: 36px;\n          font-weight: 700;\n          color: #67C23A;\n          margin-bottom: 15px;\n        }\n      }\n      \n      .improvement-description {\n        flex: 2;\n        \n        p {\n          font-size: 16px;\n          line-height: 1.6;\n          color: #606266;\n        }\n      }\n    }\n    \n    .bottlenecks {\n      .bottleneck-title {\n        display: flex;\n        align-items: center;\n        \n        .bottleneck-area {\n          margin-left: 10px;\n          font-weight: 500;\n        }\n      }\n      \n      .bottleneck-content {\n        padding: 10px 0;\n        \n        .bottleneck-description,\n        .bottleneck-solution {\n          margin: 10px 0;\n          line-height: 1.5;\n          color: #606266;\n        }\n      }\n    }\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}