{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, openBlock as _openBlock, createElementBlock as _createElementBlock, withDirectives as _withDirectives, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"user-management-page\"\n};\nvar _hoisted_2 = {\n  \"class\": \"page-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"header-actions\"\n};\nvar _hoisted_4 = {\n  \"class\": \"user-info\"\n};\nvar _hoisted_5 = {\n  \"class\": \"username\"\n};\nvar _hoisted_6 = {\n  \"class\": \"pagination-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[15] || (_cache[15] = _createElementVNode(\"div\", {\n    \"class\": \"header-content\"\n  }, [_createElementVNode(\"h1\", {\n    \"class\": \"page-title\"\n  }, \"用户管理\"), _createElementVNode(\"p\", {\n    \"class\": \"page-subtitle\"\n  }, \"管理系统用户、权限和组织结构\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.showAddUserDialog\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[14] || (_cache[14] = [_createElementVNode(\"i\", {\n        \"class\": \"el-icon-plus\"\n      }, null, -1 /* HOISTED */), _createTextVNode(\" 添加用户 \")]);\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])]), _createCommentVNode(\" 用户筛选和搜索 \"), _createVNode(_component_el_card, {\n    shadow: \"hover\",\n    \"class\": \"filter-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        inline: true,\n        model: $setup.filterForm,\n        \"class\": \"filter-form\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"状态\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.filterForm.status,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.filterForm.status = $event;\n                }),\n                placeholder: \"选择状态\",\n                clearable: \"\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_option, {\n                    label: \"已激活\",\n                    value: \"active\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"未激活\",\n                    value: \"inactive\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"已禁用\",\n                    value: \"disabled\"\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"角色\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.filterForm.role,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.filterForm.role = $event;\n                }),\n                placeholder: \"选择角色\",\n                clearable: \"\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_option, {\n                    label: \"管理员\",\n                    value: \"admin\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"普通用户\",\n                    value: \"user\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"只读用户\",\n                    value: \"readonly\"\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"搜索\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.filterForm.search,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.filterForm.search = $event;\n                }),\n                placeholder: \"搜索用户名、邮箱或姓名\",\n                clearable: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.searchUsers\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[16] || (_cache[16] = [_createTextVNode(\"搜索\")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                onClick: $setup.resetFilter\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[17] || (_cache[17] = [_createTextVNode(\"重置\")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 用户列表 \"), _createVNode(_component_el_card, {\n    shadow: \"hover\",\n    \"class\": \"user-table-card\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_withDirectives((_openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_table, {\n        data: $setup.users,\n        border: \"\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"username\",\n            label: \"用户名\",\n            \"min-width\": \"120\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_avatar, {\n                size: 32,\n                src: scope.row.avatar\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString(scope.row.username.charAt(0).toUpperCase()), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"]), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(scope.row.username), 1 /* TEXT */)])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"name\",\n            label: \"姓名\",\n            \"min-width\": \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"email\",\n            label: \"邮箱\",\n            \"min-width\": \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"role\",\n            label: \"角色\",\n            width: \"120\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tag, {\n                type: $setup.getRoleTagType(scope.row.role)\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($setup.getRoleDisplayName(scope.row.role)), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\",\n            width: \"100\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tag, {\n                type: $setup.getStatusTagType(scope.row.status)\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($setup.getStatusDisplayName(scope.row.status)), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"lastLogin\",\n            label: \"最后登录\",\n            width: \"160\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createTextVNode(_toDisplayString($setup.formatDateTime(scope.row.lastLogin)), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            width: \"200\",\n            fixed: \"right\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"primary\",\n                link: \"\",\n                onClick: function onClick($event) {\n                  return $setup.editUser(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[18] || (_cache[18] = [_createTextVNode(\" 编辑 \")]);\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: scope.row.status === 'active' ? 'warning' : 'success',\n                link: \"\",\n                onClick: function onClick($event) {\n                  return $setup.toggleUserStatus(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString(scope.row.status === 'active' ? '禁用' : '启用'), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\", \"onClick\"]), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"danger\",\n                link: \"\",\n                onClick: function onClick($event) {\n                  return $setup.confirmDeleteUser(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[19] || (_cache[19] = [_createTextVNode(\" 删除 \")]);\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 分页 \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_pagination, {\n        currentPage: $setup.pagination.page,\n        \"onUpdate:currentPage\": _cache[3] || (_cache[3] = function ($event) {\n          return $setup.pagination.page = $event;\n        }),\n        \"page-size\": $setup.pagination.pageSize,\n        \"onUpdate:pageSize\": _cache[4] || (_cache[4] = function ($event) {\n          return $setup.pagination.pageSize = $event;\n        }),\n        \"page-sizes\": [10, 20, 50, 100],\n        layout: \"total, sizes, prev, pager, next, jumper\",\n        total: $setup.pagination.total,\n        onSizeChange: $setup.handleSizeChange,\n        onCurrentChange: $setup.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"currentPage\", \"page-size\", \"total\", \"onSizeChange\", \"onCurrentChange\"])])])), [[_directive_loading, $setup.loading]])];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 添加/编辑用户对话框 \"), _createVNode(_component_el_dialog, {\n    title: $setup.isEditMode ? '编辑用户' : '添加用户',\n    modelValue: $setup.userDialogVisible,\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = function ($event) {\n      return $setup.userDialogVisible = $event;\n    }),\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createVNode(_component_el_button, {\n        onClick: _cache[12] || (_cache[12] = function ($event) {\n          return $setup.userDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[20] || (_cache[20] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitUserForm,\n        loading: $setup.submitting\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createTextVNode(_toDisplayString($setup.isEditMode ? '保存' : '添加'), 1 /* TEXT */)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"userFormRef\",\n        model: $setup.userForm,\n        rules: $setup.userFormRules,\n        \"label-width\": \"100px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"用户名\",\n            prop: \"username\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.username,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                  return $setup.userForm.username = $event;\n                }),\n                disabled: $setup.isEditMode\n              }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"姓名\",\n            prop: \"name\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.name,\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n                  return $setup.userForm.name = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"邮箱\",\n            prop: \"email\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.email,\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n                  return $setup.userForm.email = $event;\n                }),\n                type: \"email\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"角色\",\n            prop: \"role\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.userForm.role,\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n                  return $setup.userForm.role = $event;\n                }),\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_option, {\n                    label: \"管理员\",\n                    value: \"admin\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"普通用户\",\n                    value: \"user\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"只读用户\",\n                    value: \"readonly\"\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"状态\",\n            prop: \"status\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.userForm.status,\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = function ($event) {\n                  return $setup.userForm.status = $event;\n                }),\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_option, {\n                    label: \"已激活\",\n                    value: \"active\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"未激活\",\n                    value: \"inactive\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"已禁用\",\n                    value: \"disabled\"\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), !$setup.isEditMode ? (_openBlock(), _createBlock(_component_el_form_item, {\n            key: 0,\n            label: \"密码\",\n            prop: \"password\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.password,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = function ($event) {\n                  return $setup.userForm.password = $event;\n                }),\n                type: \"password\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true), !$setup.isEditMode ? (_openBlock(), _createBlock(_component_el_form_item, {\n            key: 1,\n            label: \"确认密码\",\n            prop: \"confirmPassword\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.userForm.confirmPassword,\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = function ($event) {\n                  return $setup.userForm.confirmPassword = $event;\n                }),\n                type: \"password\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true)];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_button","type","onClick","$setup","showAddUserDialog","_withCtx","_cache","_createTextVNode","_","_createCommentVNode","_component_el_card","shadow","_component_el_form","inline","model","filterForm","_component_el_form_item","label","_component_el_select","modelValue","status","$event","placeholder","clearable","_component_el_option","value","role","_component_el_input","search","searchUsers","resetFilter","_component_el_table","data","users","border","style","_component_el_table_column","prop","scope","_hoisted_4","_component_el_avatar","size","src","row","avatar","_toDisplayString","username","charAt","toUpperCase","_hoisted_5","width","_component_el_tag","getRoleTagType","getRoleDisplayName","getStatusTagType","getStatusDisplayName","formatDateTime","lastLogin","fixed","link","editUser","toggleUserStatus","confirmDeleteUser","_hoisted_6","_component_el_pagination","currentPage","pagination","page","pageSize","layout","total","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","loading","_component_el_dialog","title","isEditMode","userDialogVisible","footer","submitUserForm","submitting","ref","userForm","rules","userFormRules","disabled","name","email","_createBlock","key","password","confirmPassword"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/admin/UserManagement.vue"],"sourcesContent":["<template>\n  <div class=\"user-management-page\">\n    <div class=\"page-header\">\n      <div class=\"header-content\">\n        <h1 class=\"page-title\">用户管理</h1>\n        <p class=\"page-subtitle\">管理系统用户、权限和组织结构</p>\n      </div>\n      <div class=\"header-actions\">\n        <el-button type=\"primary\" @click=\"showAddUserDialog\">\n          <i class=\"el-icon-plus\"></i> 添加用户\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 用户筛选和搜索 -->\n    <el-card shadow=\"hover\" class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\n        <el-form-item label=\"状态\">\n          <el-select v-model=\"filterForm.status\" placeholder=\"选择状态\" clearable>\n            <el-option label=\"已激活\" value=\"active\" />\n            <el-option label=\"未激活\" value=\"inactive\" />\n            <el-option label=\"已禁用\" value=\"disabled\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"角色\">\n          <el-select v-model=\"filterForm.role\" placeholder=\"选择角色\" clearable>\n            <el-option label=\"管理员\" value=\"admin\" />\n            <el-option label=\"普通用户\" value=\"user\" />\n            <el-option label=\"只读用户\" value=\"readonly\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"搜索\">\n          <el-input \n            v-model=\"filterForm.search\" \n            placeholder=\"搜索用户名、邮箱或姓名\"\n            clearable\n          />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"searchUsers\">搜索</el-button>\n          <el-button @click=\"resetFilter\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 用户列表 -->\n    <el-card shadow=\"hover\" class=\"user-table-card\">\n      <div v-loading=\"loading\">\n        <el-table \n          :data=\"users\" \n          border \n          style=\"width: 100%\"\n        >\n          <el-table-column prop=\"username\" label=\"用户名\" min-width=\"120\">\n            <template #default=\"scope\">\n              <div class=\"user-info\">\n                <el-avatar :size=\"32\" :src=\"scope.row.avatar\">\n                  {{ scope.row.username.charAt(0).toUpperCase() }}\n                </el-avatar>\n                <span class=\"username\">{{ scope.row.username }}</span>\n              </div>\n            </template>\n          </el-table-column>\n          \n          <el-table-column prop=\"name\" label=\"姓名\" min-width=\"120\" />\n          \n          <el-table-column prop=\"email\" label=\"邮箱\" min-width=\"180\" />\n          \n          <el-table-column prop=\"role\" label=\"角色\" width=\"120\">\n            <template #default=\"scope\">\n              <el-tag :type=\"getRoleTagType(scope.row.role)\">\n                {{ getRoleDisplayName(scope.row.role) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          \n          <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n            <template #default=\"scope\">\n              <el-tag :type=\"getStatusTagType(scope.row.status)\">\n                {{ getStatusDisplayName(scope.row.status) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          \n          <el-table-column prop=\"lastLogin\" label=\"最后登录\" width=\"160\">\n            <template #default=\"scope\">\n              {{ formatDateTime(scope.row.lastLogin) }}\n            </template>\n          </el-table-column>\n          \n          <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n            <template #default=\"scope\">\n              <el-button \n                size=\"small\" \n                type=\"primary\" \n                link\n                @click=\"editUser(scope.row)\"\n              >\n                编辑\n              </el-button>\n              \n              <el-button \n                size=\"small\" \n                :type=\"scope.row.status === 'active' ? 'warning' : 'success'\" \n                link\n                @click=\"toggleUserStatus(scope.row)\"\n              >\n                {{ scope.row.status === 'active' ? '禁用' : '启用' }}\n              </el-button>\n              \n              <el-button \n                size=\"small\" \n                type=\"danger\" \n                link\n                @click=\"confirmDeleteUser(scope.row)\"\n              >\n                删除\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        \n        <!-- 分页 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            v-model:currentPage=\"pagination.page\"\n            v-model:page-size=\"pagination.pageSize\"\n            :page-sizes=\"[10, 20, 50, 100]\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"pagination.total\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n      </div>\n    </el-card>\n\n    <!-- 添加/编辑用户对话框 -->\n    <el-dialog\n      :title=\"isEditMode ? '编辑用户' : '添加用户'\"\n      v-model=\"userDialogVisible\"\n      width=\"500px\"\n    >\n      <el-form \n        ref=\"userFormRef\"\n        :model=\"userForm\" \n        :rules=\"userFormRules\" \n        label-width=\"100px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"userForm.username\" :disabled=\"isEditMode\" />\n        </el-form-item>\n        \n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"userForm.name\" />\n        </el-form-item>\n        \n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"userForm.email\" type=\"email\" />\n        </el-form-item>\n        \n        <el-form-item label=\"角色\" prop=\"role\">\n          <el-select v-model=\"userForm.role\" style=\"width: 100%\">\n            <el-option label=\"管理员\" value=\"admin\" />\n            <el-option label=\"普通用户\" value=\"user\" />\n            <el-option label=\"只读用户\" value=\"readonly\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"userForm.status\" style=\"width: 100%\">\n            <el-option label=\"已激活\" value=\"active\" />\n            <el-option label=\"未激活\" value=\"inactive\" />\n            <el-option label=\"已禁用\" value=\"disabled\" />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"密码\" prop=\"password\" v-if=\"!isEditMode\">\n          <el-input v-model=\"userForm.password\" type=\"password\" />\n        </el-form-item>\n        \n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\" v-if=\"!isEditMode\">\n          <el-input v-model=\"userForm.confirmPassword\" type=\"password\" />\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <el-button @click=\"userDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitUserForm\" :loading=\"submitting\">\n          {{ isEditMode ? '保存' : '添加' }}\n        </el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\n\nexport default {\n  name: 'UserManagement',\n  \n  setup() {\n    // 加载和提交状态\n    const loading = ref(false)\n    const submitting = ref(false)\n    \n    // 筛选表单\n    const filterForm = reactive({\n      status: '',\n      role: '',\n      search: ''\n    })\n    \n    // 分页信息\n    const pagination = reactive({\n      page: 1,\n      pageSize: 10,\n      total: 0\n    })\n    \n    // 用户表单对话框\n    const userDialogVisible = ref(false)\n    const userFormRef = ref(null)\n    const isEditMode = ref(false)\n    \n    // 用户表单\n    const userForm = reactive({\n      id: '',\n      username: '',\n      name: '',\n      email: '',\n      role: 'user',\n      status: 'active',\n      password: '',\n      confirmPassword: ''\n    })\n    \n    // 表单验证规则\n    const userFormRules = {\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' },\n        { min: 3, max: 20, message: '用户名长度在3到20个字符之间', trigger: 'blur' }\n      ],\n      name: [\n        { required: true, message: '请输入姓名', trigger: 'blur' }\n      ],\n      email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入有效的邮箱地址', trigger: 'blur' }\n      ],\n      role: [\n        { required: true, message: '请选择角色', trigger: 'change' }\n      ],\n      status: [\n        { required: true, message: '请选择状态', trigger: 'change' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, message: '密码长度不能小于6个字符', trigger: 'blur' }\n      ],\n      confirmPassword: [\n        { required: true, message: '请确认密码', trigger: 'blur' },\n        {\n          validator: (rule, value, callback) => {\n            if (value !== userForm.password) {\n              callback(new Error('两次输入的密码不一致'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }\n      ]\n    }\n    \n    // 模拟用户数据\n    const users = ref([\n      {\n        id: '1',\n        username: 'admin',\n        name: '管理员',\n        email: 'admin@example.com',\n        role: 'admin',\n        status: 'active',\n        lastLogin: '2023-06-20T08:30:00Z',\n        avatar: ''\n      },\n      {\n        id: '2',\n        username: 'user1',\n        name: '张三',\n        email: 'user1@example.com',\n        role: 'user',\n        status: 'active',\n        lastLogin: '2023-06-19T14:20:00Z',\n        avatar: ''\n      },\n      {\n        id: '3',\n        username: 'user2',\n        name: '李四',\n        email: 'user2@example.com',\n        role: 'readonly',\n        status: 'inactive',\n        lastLogin: null,\n        avatar: ''\n      },\n      {\n        id: '4',\n        username: 'user3',\n        name: '王五',\n        email: 'user3@example.com',\n        role: 'user',\n        status: 'disabled',\n        lastLogin: '2023-05-10T09:15:00Z',\n        avatar: ''\n      }\n    ])\n    \n    // 计算总用户数\n    pagination.total = computed(() => users.value.length).value\n    \n    // 获取角色显示名称\n    const getRoleDisplayName = (role) => {\n      const roleMap = {\n        admin: '管理员',\n        user: '普通用户',\n        readonly: '只读用户'\n      }\n      return roleMap[role] || role\n    }\n    \n    // 获取角色标签类型\n    const getRoleTagType = (role) => {\n      const typeMap = {\n        admin: 'danger',\n        user: 'primary',\n        readonly: 'info'\n      }\n      return typeMap[role] || ''\n    }\n    \n    // 获取状态显示名称\n    const getStatusDisplayName = (status) => {\n      const statusMap = {\n        active: '已激活',\n        inactive: '未激活',\n        disabled: '已禁用'\n      }\n      return statusMap[status] || status\n    }\n    \n    // 获取状态标签类型\n    const getStatusTagType = (status) => {\n      const typeMap = {\n        active: 'success',\n        inactive: 'warning',\n        disabled: 'info'\n      }\n      return typeMap[status] || ''\n    }\n    \n    // 格式化日期时间\n    const formatDateTime = (dateTimeString) => {\n      if (!dateTimeString) return '从未登录'\n      \n      const date = new Date(dateTimeString)\n      return date.toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }\n    \n    // 搜索用户\n    const searchUsers = () => {\n      loading.value = true\n      \n      // 实际应用中，这里应该调用API进行搜索\n      // 模拟异步搜索\n      setTimeout(() => {\n        loading.value = false\n      }, 500)\n    }\n    \n    // 重置筛选条件\n    const resetFilter = () => {\n      Object.assign(filterForm, {\n        status: '',\n        role: '',\n        search: ''\n      })\n      searchUsers()\n    }\n    \n    // 处理分页大小变化\n    const handleSizeChange = (size) => {\n      pagination.pageSize = size\n      searchUsers()\n    }\n    \n    // 处理页码变化\n    const handleCurrentChange = (page) => {\n      pagination.page = page\n      searchUsers()\n    }\n    \n    // 显示添加用户对话框\n    const showAddUserDialog = () => {\n      isEditMode.value = false\n      resetUserForm()\n      userDialogVisible.value = true\n    }\n    \n    // 编辑用户\n    const editUser = (user) => {\n      isEditMode.value = true\n      resetUserForm()\n      \n      // 填充表单数据\n      Object.assign(userForm, {\n        id: user.id,\n        username: user.username,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        status: user.status\n      })\n      \n      userDialogVisible.value = true\n    }\n    \n    // 重置用户表单\n    const resetUserForm = () => {\n      Object.assign(userForm, {\n        id: '',\n        username: '',\n        name: '',\n        email: '',\n        role: 'user',\n        status: 'active',\n        password: '',\n        confirmPassword: ''\n      })\n      \n      // 重置表单验证\n      if (userFormRef.value) {\n        userFormRef.value.resetFields()\n      }\n    }\n    \n    // 提交用户表单\n    const submitUserForm = async () => {\n      if (!userFormRef.value) return\n      \n      await userFormRef.value.validate(async (valid) => {\n        if (!valid) {\n          return false\n        }\n        \n        submitting.value = true\n        \n        try {\n          if (isEditMode.value) {\n            // 更新现有用户\n            const index = users.value.findIndex(u => u.id === userForm.id)\n            if (index !== -1) {\n              const updatedUser = { ...users.value[index], ...userForm }\n              users.value.splice(index, 1, updatedUser)\n              ElMessage.success('用户已更新')\n            }\n          } else {\n            // 添加新用户\n            const newUser = {\n              id: Date.now().toString(),\n              username: userForm.username,\n              name: userForm.name,\n              email: userForm.email,\n              role: userForm.role,\n              status: userForm.status,\n              lastLogin: null,\n              avatar: ''\n            }\n            users.value.unshift(newUser)\n            pagination.total += 1\n            ElMessage.success('用户已添加')\n          }\n          \n          userDialogVisible.value = false\n        } catch (error) {\n          ElMessage.error('操作失败: ' + (error.message || '未知错误'))\n        } finally {\n          submitting.value = false\n        }\n      })\n    }\n    \n    // 切换用户状态\n    const toggleUserStatus = (user) => {\n      const newStatus = user.status === 'active' ? 'disabled' : 'active'\n      const action = newStatus === 'active' ? '启用' : '禁用'\n      \n      ElMessageBox.confirm(\n        `确定要${action}用户 \"${user.username}\" 吗？`,\n        '确认操作',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(() => {\n        // 更新用户状态\n        const index = users.value.findIndex(u => u.id === user.id)\n        if (index !== -1) {\n          users.value[index].status = newStatus\n          ElMessage.success(`用户已${action}`)\n        }\n      }).catch(() => {\n        // 用户取消操作\n      })\n    }\n    \n    // 确认删除用户\n    const confirmDeleteUser = (user) => {\n      ElMessageBox.confirm(\n        `确定要删除用户 \"${user.username}\" 吗？此操作不可撤销。`,\n        '删除确认',\n        {\n          confirmButtonText: '删除',\n          cancelButtonText: '取消',\n          type: 'danger'\n        }\n      ).then(() => {\n        // 删除用户\n        const index = users.value.findIndex(u => u.id === user.id)\n        if (index !== -1) {\n          users.value.splice(index, 1)\n          pagination.total -= 1\n          ElMessage.success('用户已删除')\n        }\n      }).catch(() => {\n        // 用户取消删除\n      })\n    }\n    \n    return {\n      loading,\n      submitting,\n      filterForm,\n      pagination,\n      users,\n      userDialogVisible,\n      userFormRef,\n      userForm,\n      userFormRules,\n      isEditMode,\n      getRoleDisplayName,\n      getRoleTagType,\n      getStatusDisplayName,\n      getStatusTagType,\n      formatDateTime,\n      searchUsers,\n      resetFilter,\n      handleSizeChange,\n      handleCurrentChange,\n      showAddUserDialog,\n      editUser,\n      submitUserForm,\n      toggleUserStatus,\n      confirmDeleteUser\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.user-management-page {\n  margin-bottom: 40px;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  flex-wrap: wrap;\n  gap: 16px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.page-subtitle {\n  color: #909399;\n  margin: 4px 0 0;\n}\n\n.filter-card {\n  margin-bottom: 24px;\n}\n\n.filter-form {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.user-table-card {\n  margin-bottom: 24px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.username {\n  font-weight: 500;\n}\n\n@media (max-width: 768px) {\n  .page-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .filter-form {\n    flex-direction: column;\n  }\n  \n  .el-form-item {\n    margin-bottom: 10px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}