{"ast":null,"code":"import { ref, reactive, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'Register',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const registerForm = ref(null);\n\n    // 表单数据\n    const registerData = reactive({\n      firstName: '',\n      lastName: '',\n      username: '',\n      email: '',\n      department: '',\n      password: '',\n      confirmPassword: ''\n    });\n\n    // 表单验证规则\n    const rules = {\n      firstName: [{\n        required: true,\n        message: '请输入名',\n        trigger: 'blur'\n      }],\n      lastName: [{\n        required: true,\n        message: '请输入姓',\n        trigger: 'blur'\n      }],\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 30,\n        message: '用户名长度在3到30个字符之间',\n        trigger: 'blur'\n      }],\n      email: [{\n        required: true,\n        message: '请输入邮箱',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱格式',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 8,\n        message: '密码长度不能少于8个字符',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        required: true,\n        message: '请再次输入密码',\n        trigger: 'blur'\n      }, {\n        validator: (rule, value, callback) => {\n          if (value !== registerData.password) {\n            callback(new Error('两次输入的密码不一致'));\n          } else {\n            callback();\n          }\n        },\n        trigger: 'blur'\n      }]\n    };\n\n    // 从store中获取状态\n    const loading = computed(() => store.getters['auth/authLoading']);\n    const error = computed(() => store.getters['auth/authError']);\n\n    // 提交表单\n    const submitForm = async () => {\n      if (!registerForm.value) return;\n      await registerForm.value.validate(async valid => {\n        if (valid) {\n          await handleRegister();\n        }\n      });\n    };\n\n    // 处理注册逻辑\n    const handleRegister = async () => {\n      // 创建一个符合后端期望的数据结构\n      const userData = {\n        firstName: registerData.firstName,\n        lastName: registerData.lastName,\n        username: registerData.username,\n        email: registerData.email,\n        department: registerData.department,\n        password: registerData.password\n      };\n      const result = await store.dispatch('auth/register', userData);\n      if (result.success) {\n        router.push('/dashboard');\n      }\n    };\n    return {\n      registerForm,\n      registerData,\n      rules,\n      loading,\n      error,\n      submitForm,\n      handleRegister\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","useStore","useRouter","name","setup","store","router","registerForm","registerData","firstName","lastName","username","email","department","password","confirmPassword","rules","required","message","trigger","min","max","type","validator","rule","value","callback","Error","loading","getters","error","submitForm","validate","valid","handleRegister","userData","result","dispatch","success","push"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/auth/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-card\">\n      <div class=\"register-header\">\n        <h1 class=\"register-title\">漏洞管理平台</h1>\n        <p class=\"register-subtitle\">创建新账号</p>\n      </div>\n      \n      <el-form \n        ref=\"registerForm\" \n        :model=\"registerData\" \n        :rules=\"rules\" \n        label-position=\"top\" \n        @submit.prevent=\"handleRegister\"\n      >\n        <el-alert \n          v-if=\"error\" \n          :title=\"error\" \n          type=\"error\" \n          show-icon \n          :closable=\"false\"\n          style=\"margin-bottom: 20px\"\n        />\n        \n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"姓\" prop=\"lastName\">\n              <el-input \n                v-model=\"registerData.lastName\" \n                placeholder=\"请输入姓\"\n              />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"名\" prop=\"firstName\">\n              <el-input \n                v-model=\"registerData.firstName\" \n                placeholder=\"请输入名\"\n              />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        \n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input \n            v-model=\"registerData.username\" \n            placeholder=\"请输入用户名\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input \n            v-model=\"registerData.email\" \n            type=\"email\"\n            placeholder=\"请输入邮箱\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"部门\" prop=\"department\">\n          <el-input \n            v-model=\"registerData.department\" \n            placeholder=\"请输入部门(可选)\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input \n            v-model=\"registerData.password\" \n            type=\"password\"\n            placeholder=\"请输入密码\"\n            show-password\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input \n            v-model=\"registerData.confirmPassword\" \n            type=\"password\"\n            placeholder=\"请再次输入密码\"\n            show-password\n          />\n        </el-form-item>\n        \n        <div class=\"form-actions\">\n          <el-button \n            type=\"primary\" \n            :loading=\"loading\" \n            @click=\"submitForm\" \n            class=\"submit-button\"\n          >\n            注册\n          </el-button>\n        </div>\n        \n        <div class=\"form-footer\">\n          <p>已有账号？<router-link to=\"/login\">返回登录</router-link></p>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  name: 'Register',\n  \n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    const registerForm = ref(null)\n    \n    // 表单数据\n    const registerData = reactive({\n      firstName: '',\n      lastName: '',\n      username: '',\n      email: '',\n      department: '',\n      password: '',\n      confirmPassword: ''\n    })\n    \n    // 表单验证规则\n    const rules = {\n      firstName: [\n        { required: true, message: '请输入名', trigger: 'blur' }\n      ],\n      lastName: [\n        { required: true, message: '请输入姓', trigger: 'blur' }\n      ],\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' },\n        { min: 3, max: 30, message: '用户名长度在3到30个字符之间', trigger: 'blur' }\n      ],\n      email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 8, message: '密码长度不能少于8个字符', trigger: 'blur' }\n      ],\n      confirmPassword: [\n        { required: true, message: '请再次输入密码', trigger: 'blur' },\n        {\n          validator: (rule, value, callback) => {\n            if (value !== registerData.password) {\n              callback(new Error('两次输入的密码不一致'))\n            } else {\n              callback()\n            }\n          },\n          trigger: 'blur'\n        }\n      ]\n    }\n    \n    // 从store中获取状态\n    const loading = computed(() => store.getters['auth/authLoading'])\n    const error = computed(() => store.getters['auth/authError'])\n    \n    // 提交表单\n    const submitForm = async () => {\n      if (!registerForm.value) return\n      \n      await registerForm.value.validate(async (valid) => {\n        if (valid) {\n          await handleRegister()\n        }\n      })\n    }\n    \n    // 处理注册逻辑\n    const handleRegister = async () => {\n      // 创建一个符合后端期望的数据结构\n      const userData = {\n        firstName: registerData.firstName,\n        lastName: registerData.lastName,\n        username: registerData.username,\n        email: registerData.email,\n        department: registerData.department,\n        password: registerData.password\n      }\n      \n      const result = await store.dispatch('auth/register', userData)\n      \n      if (result.success) {\n        router.push('/dashboard')\n      }\n    }\n    \n    return {\n      registerForm,\n      registerData,\n      rules,\n      loading,\n      error,\n      submitForm,\n      handleRegister\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.register-container {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 20px;\n}\n\n.register-card {\n  width: 100%;\n  max-width: 650px;\n  padding: 40px;\n  background-color: white;\n  border-radius: 16px;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n}\n\n.register-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.register-title {\n  font-size: 28px;\n  font-weight: 700;\n  color: #303133;\n  margin-bottom: 8px;\n}\n\n.register-subtitle {\n  font-size: 16px;\n  color: #909399;\n}\n\n.form-actions {\n  margin-top: 20px;\n}\n\n.submit-button {\n  width: 100%;\n  padding: 12px 0;\n  font-size: 16px;\n  border-radius: 8px;\n}\n\n.form-footer {\n  margin-top: 20px;\n  text-align: center;\n  font-size: 14px;\n  color: #606266;\n  \n  a {\n    color: #409eff;\n    text-decoration: none;\n    font-weight: 500;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n}\n\n:deep(.el-form-item__label) {\n  font-weight: 500;\n  color: #303133;\n}\n\n:deep(.el-input__inner) {\n  border-radius: 8px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}