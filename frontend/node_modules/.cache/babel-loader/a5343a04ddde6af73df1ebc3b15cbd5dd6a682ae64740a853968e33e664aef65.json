{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { formatDate } from '@/utils/format';\nimport AnalysisParameters from '@/components/ai/AnalysisParameters.vue';\nimport AnalysisDetail from '@/components/ai/AnalysisDetail.vue';\nimport AnalysisHistory from '@/components/ai/AnalysisHistory.vue';\nexport default {\n  name: 'AIAnalysis',\n  components: {\n    AnalysisParameters: AnalysisParameters,\n    AnalysisDetail: AnalysisDetail,\n    AnalysisHistory: AnalysisHistory\n  },\n  data: function data() {\n    return {\n      analysisCount: 42,\n      averageConfidence: 87.5,\n      improvementRate: 35,\n      analysisTypes: [{\n        title: '漏洞趋势预测',\n        description: '基于历史漏洞数据，预测未来安全趋势和漏洞发展模式，帮助提前做好防御准备。',\n        icon: 'el-icon-data-line',\n        type: 'trend_prediction',\n        colorClass: 'blue-header'\n      }, {\n        title: '安全资源优化',\n        description: '分析当前安全资源分配状况，提供优化建议，提高安全投入的回报率。',\n        icon: 'el-icon-s-operation',\n        type: 'resource_optimization',\n        colorClass: 'green-header'\n      }, {\n        title: '异常检测分析',\n        description: '识别漏洞数据中的异常模式和潜在安全事件，及早发现攻击迹象。',\n        icon: 'el-icon-warning-outline',\n        type: 'anomaly_detection',\n        colorClass: 'orange-header'\n      }],\n      recentAnalyses: [],\n      loading: false,\n      analysisDialogVisible: false,\n      detailDialogVisible: false,\n      historyDialogVisible: false,\n      currentAnalysisType: null,\n      currentAnalysisId: null,\n      currentAnalysisTypeLabel: ''\n    };\n  },\n  created: function created() {\n    this.fetchRecentAnalyses();\n  },\n  methods: {\n    formatDate: formatDate,\n    fetchRecentAnalyses: function fetchRecentAnalyses() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.loading = true;\n              try {\n                // 从API获取最近的分析结果\n                // const { data } = await this.$api.ai.getRecentAnalyses()\n                // this.recentAnalyses = data.analyses\n\n                // 模拟数据\n                _this.recentAnalyses = [{\n                  id: '61e8f5c3b32f6c001a9b3d01',\n                  title: '未来30天漏洞趋势预测',\n                  type: 'trend_prediction',\n                  confidence: 0.85,\n                  createdAt: new Date(Date.now() - 86400000 * 2)\n                }, {\n                  id: '61e8f5c3b32f6c001a9b3d02',\n                  title: '安全资源优化配置建议',\n                  type: 'resource_optimization',\n                  confidence: 0.78,\n                  createdAt: new Date(Date.now() - 86400000 * 5)\n                }, {\n                  id: '61e8f5c3b32f6c001a9b3d03',\n                  title: '过去7天漏洞异常检测',\n                  type: 'anomaly_detection',\n                  confidence: 0.82,\n                  createdAt: new Date(Date.now() - 86400000 * 1)\n                }];\n              } catch (error) {\n                _this.$message.error('获取分析结果失败: ' + error.message);\n              } finally {\n                _this.loading = false;\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    startAnalysis: function startAnalysis(type) {\n      this.currentAnalysisType = type;\n      this.analysisDialogVisible = true;\n    },\n    executeAnalysis: function executeAnalysis(parameters) {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var mockIdMap;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.analysisDialogVisible = false;\n              _this2.loading = true;\n              _context2.prev = 2;\n              _context2.next = 5;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 2000);\n              });\n            case 5:\n              _this2.$message.success('分析完成！');\n              _this2.fetchRecentAnalyses();\n\n              // 显示结果\n              // this.currentAnalysisId = data.id\n              // this.detailDialogVisible = true\n\n              // 模拟ID\n              mockIdMap = {\n                'trend_prediction': '61e8f5c3b32f6c001a9b3d01',\n                'resource_optimization': '61e8f5c3b32f6c001a9b3d02',\n                'anomaly_detection': '61e8f5c3b32f6c001a9b3d03'\n              };\n              _this2.currentAnalysisId = mockIdMap[_this2.currentAnalysisType];\n              _this2.detailDialogVisible = true;\n              _context2.next = 15;\n              break;\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](2);\n              _this2.$message.error('执行分析失败: ' + _context2.t0.message);\n            case 15:\n              _context2.prev = 15;\n              _this2.loading = false;\n              return _context2.finish(15);\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[2, 12, 15, 18]]);\n      }))();\n    },\n    viewAnalysisDetail: function viewAnalysisDetail(id) {\n      this.currentAnalysisId = id;\n      this.detailDialogVisible = true;\n    },\n    viewHistory: function viewHistory(type) {\n      this.currentAnalysisType = type;\n      this.currentAnalysisTypeLabel = this.getAnalysisTypeLabel(type);\n      this.historyDialogVisible = true;\n    },\n    deleteAnalysis: function deleteAnalysis(id) {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _this3.$confirm('确定要删除这个分析结果吗？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              });\n            case 3:\n              // 从API删除分析结果\n              // await this.$api.ai.deleteAnalysis(id)\n\n              _this3.$message.success('删除成功');\n              _this3.recentAnalyses = _this3.recentAnalyses.filter(function (item) {\n                return item.id !== id;\n              });\n              _context3.next = 10;\n              break;\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              if (_context3.t0 !== 'cancel') {\n                _this3.$message.error('删除失败: ' + _context3.t0.message);\n              }\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 7]]);\n      }))();\n    },\n    getAnalysisTypeLabel: function getAnalysisTypeLabel(type) {\n      var typeMap = {\n        'trend_prediction': '漏洞趋势预测',\n        'resource_optimization': '安全资源优化',\n        'anomaly_detection': '异常检测'\n      };\n      return typeMap[type] || '未知类型';\n    },\n    getAnalysisTypeTag: function getAnalysisTypeTag(type) {\n      var typeMap = {\n        'trend_prediction': 'primary',\n        'resource_optimization': 'success',\n        'anomaly_detection': 'warning'\n      };\n      return typeMap[type] || 'info';\n    },\n    getConfidenceColor: function getConfidenceColor(confidence) {\n      if (confidence >= 0.8) return '#67C23A';\n      if (confidence >= 0.6) return '#E6A23C';\n      return '#F56C6C';\n    }\n  }\n};","map":{"version":3,"names":["formatDate","AnalysisParameters","AnalysisDetail","AnalysisHistory","name","components","data","analysisCount","averageConfidence","improvementRate","analysisTypes","title","description","icon","type","colorClass","recentAnalyses","loading","analysisDialogVisible","detailDialogVisible","historyDialogVisible","currentAnalysisType","currentAnalysisId","currentAnalysisTypeLabel","created","fetchRecentAnalyses","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","id","confidence","createdAt","Date","now","error","$message","message","stop","startAnalysis","executeAnalysis","parameters","_this2","_callee2","mockIdMap","_callee2$","_context2","Promise","resolve","setTimeout","success","t0","finish","viewAnalysisDetail","viewHistory","getAnalysisTypeLabel","deleteAnalysis","_this3","_callee3","_callee3$","_context3","$confirm","confirmButtonText","cancelButtonText","filter","item","typeMap","getAnalysisTypeTag","getConfidenceColor"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/ai/AIAnalysis.vue"],"sourcesContent":["<template>\n  <div class=\"ai-analysis-container\">\n    <h1 class=\"page-title\">\n      <i class=\"el-icon-cpu\"></i> AI 智能分析\n    </h1>\n    \n    <el-card class=\"intro-card\">\n      <div class=\"intro-content\">\n        <div class=\"intro-text\">\n          <h2>安全数据智能分析</h2>\n          <p>利用人工智能技术对漏洞数据进行深度分析，提供趋势预测、资源优化建议和异常检测。帮助您更高效地管理安全资源，提前发现潜在威胁。</p>\n          <div class=\"analysis-metrics\">\n            <div class=\"metric\">\n              <div class=\"metric-value\">{{ analysisCount }}</div>\n              <div class=\"metric-label\">分析报告</div>\n            </div>\n            <div class=\"metric\">\n              <div class=\"metric-value\">{{ averageConfidence.toFixed(0) }}%</div>\n              <div class=\"metric-label\">平均置信度</div>\n            </div>\n            <div class=\"metric\">\n              <div class=\"metric-value\">{{ improvementRate.toFixed(0) }}%</div>\n              <div class=\"metric-label\">效率提升</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"intro-image\">\n          <img src=\"@/assets/images/ai-analysis.svg\" alt=\"AI分析\" />\n        </div>\n      </div>\n    </el-card>\n\n    <div class=\"analysis-types\">\n      <el-row :gutter=\"20\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"8\" :lg=\"8\" :xl=\"8\" v-for=\"(analysisType, index) in analysisTypes\" :key=\"index\">\n          <el-card class=\"analysis-card\" :body-style=\"{ padding: '0px' }\" shadow=\"hover\">\n            <div class=\"analysis-card-header\" :class=\"analysisType.colorClass\">\n              <i :class=\"analysisType.icon\"></i>\n            </div>\n            <div class=\"analysis-card-content\">\n              <h3>{{ analysisType.title }}</h3>\n              <p>{{ analysisType.description }}</p>\n              <div class=\"card-actions\">\n                <el-button type=\"primary\" size=\"small\" @click=\"startAnalysis(analysisType.type)\">\n                  开始分析\n                </el-button>\n                <el-button size=\"small\" @click=\"viewHistory(analysisType.type)\">\n                  历史结果\n                </el-button>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n\n    <div class=\"recent-analyses\" v-if=\"recentAnalyses.length > 0\">\n      <h2 class=\"section-title\">最近分析结果</h2>\n      <el-table :data=\"recentAnalyses\" style=\"width: 100%\" border stripe>\n        <el-table-column prop=\"title\" label=\"分析标题\" min-width=\"200\">\n          <template v-slot=\"scope\">\n            <el-link type=\"primary\" @click=\"viewAnalysisDetail(scope.row.id)\">\n              {{ scope.row.title }}\n            </el-link>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"type\" label=\"分析类型\" width=\"150\">\n          <template v-slot=\"scope\">\n            <el-tag :type=\"getAnalysisTypeTag(scope.row.type)\">\n              {{ getAnalysisTypeLabel(scope.row.type) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"confidence\" label=\"置信度\" width=\"100\">\n          <template v-slot=\"scope\">\n            <el-progress :percentage=\"scope.row.confidence * 100\" :color=\"getConfidenceColor(scope.row.confidence)\"></el-progress>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\">\n          <template v-slot=\"scope\">\n            {{ formatDate(scope.row.createdAt) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n          <template v-slot=\"scope\">\n            <el-button type=\"text\" @click=\"viewAnalysisDetail(scope.row.id)\">查看详情</el-button>\n            <el-button type=\"text\" @click=\"deleteAnalysis(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 开始分析对话框 -->\n    <el-dialog \n      :title=\"currentAnalysisType ? `开始${getAnalysisTypeLabel(currentAnalysisType)}分析` : '开始分析'\" \n      v-model=\"analysisDialogVisible\"\n      width=\"600px\">\n      <analysis-parameters \n        v-if=\"analysisDialogVisible\" \n        :analysis-type=\"currentAnalysisType\"\n        @start=\"executeAnalysis\"\n        @cancel=\"analysisDialogVisible = false\">\n      </analysis-parameters>\n    </el-dialog>\n\n    <!-- 分析结果详情对话框 -->\n    <el-dialog \n      title=\"分析结果详情\" \n      v-model=\"detailDialogVisible\" \n      width=\"80%\"\n      fullscreen>\n      <analysis-detail \n        v-if=\"detailDialogVisible && currentAnalysisId\" \n        :analysis-id=\"currentAnalysisId\"\n        @close=\"detailDialogVisible = false\">\n      </analysis-detail>\n    </el-dialog>\n\n    <!-- 历史分析结果对话框 -->\n    <el-dialog \n      :title=\"`${currentAnalysisTypeLabel || ''}分析历史`\" \n      v-model=\"historyDialogVisible\" \n      width=\"80%\">\n      <analysis-history \n        v-if=\"historyDialogVisible\" \n        :analysis-type=\"currentAnalysisType\"\n        @view-detail=\"viewAnalysisDetail\"\n        @close=\"historyDialogVisible = false\">\n      </analysis-history>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { formatDate } from '@/utils/format'\nimport AnalysisParameters from '@/components/ai/AnalysisParameters.vue'\nimport AnalysisDetail from '@/components/ai/AnalysisDetail.vue'\nimport AnalysisHistory from '@/components/ai/AnalysisHistory.vue'\n\nexport default {\n  name: 'AIAnalysis',\n  components: {\n    AnalysisParameters,\n    AnalysisDetail,\n    AnalysisHistory\n  },\n  data() {\n    return {\n      analysisCount: 42,\n      averageConfidence: 87.5,\n      improvementRate: 35,\n      analysisTypes: [\n        {\n          title: '漏洞趋势预测',\n          description: '基于历史漏洞数据，预测未来安全趋势和漏洞发展模式，帮助提前做好防御准备。',\n          icon: 'el-icon-data-line',\n          type: 'trend_prediction',\n          colorClass: 'blue-header'\n        },\n        {\n          title: '安全资源优化',\n          description: '分析当前安全资源分配状况，提供优化建议，提高安全投入的回报率。',\n          icon: 'el-icon-s-operation',\n          type: 'resource_optimization',\n          colorClass: 'green-header'\n        },\n        {\n          title: '异常检测分析',\n          description: '识别漏洞数据中的异常模式和潜在安全事件，及早发现攻击迹象。',\n          icon: 'el-icon-warning-outline',\n          type: 'anomaly_detection',\n          colorClass: 'orange-header'\n        }\n      ],\n      recentAnalyses: [],\n      loading: false,\n      analysisDialogVisible: false,\n      detailDialogVisible: false,\n      historyDialogVisible: false,\n      currentAnalysisType: null,\n      currentAnalysisId: null,\n      currentAnalysisTypeLabel: ''\n    }\n  },\n  created() {\n    this.fetchRecentAnalyses()\n  },\n  methods: {\n    formatDate,\n    async fetchRecentAnalyses() {\n      this.loading = true\n      try {\n        // 从API获取最近的分析结果\n        // const { data } = await this.$api.ai.getRecentAnalyses()\n        // this.recentAnalyses = data.analyses\n        \n        // 模拟数据\n        this.recentAnalyses = [\n          {\n            id: '61e8f5c3b32f6c001a9b3d01',\n            title: '未来30天漏洞趋势预测',\n            type: 'trend_prediction',\n            confidence: 0.85,\n            createdAt: new Date(Date.now() - 86400000 * 2)\n          },\n          {\n            id: '61e8f5c3b32f6c001a9b3d02',\n            title: '安全资源优化配置建议',\n            type: 'resource_optimization',\n            confidence: 0.78,\n            createdAt: new Date(Date.now() - 86400000 * 5)\n          },\n          {\n            id: '61e8f5c3b32f6c001a9b3d03',\n            title: '过去7天漏洞异常检测',\n            type: 'anomaly_detection',\n            confidence: 0.82,\n            createdAt: new Date(Date.now() - 86400000 * 1)\n          }\n        ]\n      } catch (error) {\n        this.$message.error('获取分析结果失败: ' + error.message)\n      } finally {\n        this.loading = false\n      }\n    },\n    startAnalysis(type) {\n      this.currentAnalysisType = type\n      this.analysisDialogVisible = true\n    },\n    async executeAnalysis(parameters) {\n      this.analysisDialogVisible = false\n      this.loading = true\n      \n      try {\n        // 调用API执行分析\n        // const { data } = await this.$api.ai.runAnalysis({\n        //   type: this.currentAnalysisType,\n        //   parameters\n        // })\n        \n        // 模拟分析过程\n        await new Promise(resolve => setTimeout(resolve, 2000))\n        \n        this.$message.success('分析完成！')\n        this.fetchRecentAnalyses()\n        \n        // 显示结果\n        // this.currentAnalysisId = data.id\n        // this.detailDialogVisible = true\n        \n        // 模拟ID\n        const mockIdMap = {\n          'trend_prediction': '61e8f5c3b32f6c001a9b3d01',\n          'resource_optimization': '61e8f5c3b32f6c001a9b3d02',\n          'anomaly_detection': '61e8f5c3b32f6c001a9b3d03'\n        }\n        \n        this.currentAnalysisId = mockIdMap[this.currentAnalysisType]\n        this.detailDialogVisible = true\n      } catch (error) {\n        this.$message.error('执行分析失败: ' + error.message)\n      } finally {\n        this.loading = false\n      }\n    },\n    viewAnalysisDetail(id) {\n      this.currentAnalysisId = id\n      this.detailDialogVisible = true\n    },\n    viewHistory(type) {\n      this.currentAnalysisType = type\n      this.currentAnalysisTypeLabel = this.getAnalysisTypeLabel(type)\n      this.historyDialogVisible = true\n    },\n    async deleteAnalysis(id) {\n      try {\n        await this.$confirm('确定要删除这个分析结果吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        // 从API删除分析结果\n        // await this.$api.ai.deleteAnalysis(id)\n        \n        this.$message.success('删除成功')\n        this.recentAnalyses = this.recentAnalyses.filter(item => item.id !== id)\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败: ' + error.message)\n        }\n      }\n    },\n    getAnalysisTypeLabel(type) {\n      const typeMap = {\n        'trend_prediction': '漏洞趋势预测',\n        'resource_optimization': '安全资源优化',\n        'anomaly_detection': '异常检测'\n      }\n      return typeMap[type] || '未知类型'\n    },\n    getAnalysisTypeTag(type) {\n      const typeMap = {\n        'trend_prediction': 'primary',\n        'resource_optimization': 'success',\n        'anomaly_detection': 'warning'\n      }\n      return typeMap[type] || 'info'\n    },\n    getConfidenceColor(confidence) {\n      if (confidence >= 0.8) return '#67C23A'\n      if (confidence >= 0.6) return '#E6A23C'\n      return '#F56C6C'\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.ai-analysis-container {\n  padding: 24px;\n  \n  .page-title {\n    margin-bottom: 24px;\n    font-size: 24px;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    color: #303133;\n    \n    i {\n      margin-right: 12px;\n      color: #409EFF;\n      font-size: 28px;\n    }\n  }\n  \n  .intro-card {\n    margin-bottom: 30px;\n    \n    .intro-content {\n      display: flex;\n      align-items: center;\n      \n      @media (max-width: 768px) {\n        flex-direction: column-reverse;\n      }\n      \n      .intro-text {\n        flex: 3;\n        padding-right: 30px;\n        \n        @media (max-width: 768px) {\n          padding-right: 0;\n          margin-top: 20px;\n        }\n        \n        h2 {\n          font-size: 22px;\n          margin-top: 0;\n          margin-bottom: 16px;\n          color: #303133;\n        }\n        \n        p {\n          font-size: 16px;\n          color: #606266;\n          line-height: 1.6;\n          margin-bottom: 24px;\n        }\n        \n        .analysis-metrics {\n          display: flex;\n          margin-top: 20px;\n          \n          .metric {\n            flex: 1;\n            text-align: center;\n            border-right: 1px solid #EBEEF5;\n            padding: 0 15px;\n            \n            &:last-child {\n              border-right: none;\n            }\n            \n            .metric-value {\n              font-size: 28px;\n              font-weight: 600;\n              color: #409EFF;\n              margin-bottom: 8px;\n            }\n            \n            .metric-label {\n              font-size: 14px;\n              color: #909399;\n            }\n          }\n        }\n      }\n      \n      .intro-image {\n        flex: 2;\n        text-align: center;\n        \n        img {\n          max-width: 100%;\n          max-height: 240px;\n        }\n      }\n    }\n  }\n  \n  .analysis-types {\n    margin-bottom: 30px;\n    \n    .analysis-card {\n      height: 100%;\n      transition: all 0.3s;\n      position: relative;\n      overflow: hidden;\n      margin-bottom: 20px;\n      \n      &:hover {\n        transform: translateY(-5px);\n        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n      }\n      \n      .analysis-card-header {\n        height: 120px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: #fff;\n        \n        i {\n          font-size: 48px;\n        }\n        \n        &.blue-header {\n          background: linear-gradient(135deg, #1976d2, #64b5f6);\n        }\n        \n        &.green-header {\n          background: linear-gradient(135deg, #388e3c, #81c784);\n        }\n        \n        &.orange-header {\n          background: linear-gradient(135deg, #e64a19, #ff8a65);\n        }\n      }\n      \n      .analysis-card-content {\n        padding: 20px;\n        \n        h3 {\n          margin-top: 0;\n          margin-bottom: 12px;\n          font-size: 18px;\n          color: #303133;\n        }\n        \n        p {\n          color: #606266;\n          font-size: 14px;\n          line-height: 1.5;\n          margin-bottom: 20px;\n          height: 63px;\n          overflow: hidden;\n        }\n        \n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n        }\n      }\n    }\n  }\n  \n  .recent-analyses {\n    .section-title {\n      font-size: 20px;\n      font-weight: 600;\n      margin-bottom: 20px;\n      position: relative;\n      padding-left: 12px;\n      \n      &:before {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 50%;\n        transform: translateY(-50%);\n        width: 4px;\n        height: 18px;\n        background-color: #409EFF;\n        border-radius: 2px;\n      }\n    }\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}