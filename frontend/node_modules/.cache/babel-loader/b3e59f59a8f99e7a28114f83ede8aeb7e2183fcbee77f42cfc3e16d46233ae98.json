{"ast":null,"code":"import _toConsumableArray from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yue/Desktop/vuln-Management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { ref, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport PieChart from '@/components/charts/PieChart.vue';\nimport DoughnutChart from '@/components/charts/DoughnutChart.vue';\nimport LineChart from '@/components/charts/LineChart.vue';\nexport default {\n  name: 'Dashboard',\n  components: {\n    PieChart: PieChart,\n    DoughnutChart: DoughnutChart,\n    LineChart: LineChart\n  },\n  setup: function setup() {\n    var router = useRouter();\n    var store = useStore();\n    var loading = ref(true);\n    var dashboardData = ref({\n      totalVulnerabilities: 0,\n      statusCounts: {},\n      severityCounts: {},\n      monthlyData: [],\n      recentVulnerabilities: [],\n      topAffectedSystems: []\n    });\n\n    // 获取仪表盘数据\n    var fetchDashboardData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              try {\n                // 这里应该调用后端 API 获取实际数据\n                // 目前使用模拟数据进行前端开发\n                setTimeout(function () {\n                  dashboardData.value = {\n                    totalVulnerabilities: 127,\n                    statusCounts: {\n                      open: 43,\n                      in_progress: 28,\n                      resolved: 56\n                    },\n                    severityCounts: {\n                      critical: 12,\n                      high: 35,\n                      medium: 48,\n                      low: 32\n                    },\n                    monthlyData: [{\n                      month: '1月',\n                      count: 12\n                    }, {\n                      month: '2月',\n                      count: 19\n                    }, {\n                      month: '3月',\n                      count: 15\n                    }, {\n                      month: '4月',\n                      count: 22\n                    }, {\n                      month: '5月',\n                      count: 18\n                    }, {\n                      month: '6月',\n                      count: 41\n                    }],\n                    recentVulnerabilities: [{\n                      id: '1',\n                      title: 'SQL注入漏洞 - 用户认证模块',\n                      severity: 'critical',\n                      status: 'open',\n                      createdAt: new Date('2023-06-15').toISOString()\n                    }, {\n                      id: '2',\n                      title: 'XSS漏洞 - 评论功能',\n                      severity: 'high',\n                      status: 'in_progress',\n                      createdAt: new Date('2023-06-12').toISOString()\n                    }, {\n                      id: '3',\n                      title: '密码策略不合规 - 用户管理',\n                      severity: 'medium',\n                      status: 'in_progress',\n                      createdAt: new Date('2023-06-10').toISOString()\n                    }, {\n                      id: '4',\n                      title: 'CSRF漏洞 - 支付页面',\n                      severity: 'high',\n                      status: 'open',\n                      createdAt: new Date('2023-06-05').toISOString()\n                    }, {\n                      id: '5',\n                      title: '日志记录不充分 - 登录功能',\n                      severity: 'low',\n                      status: 'resolved',\n                      createdAt: new Date('2023-06-01').toISOString()\n                    }],\n                    topAffectedSystems: [{\n                      system: '用户认证系统',\n                      count: 18\n                    }, {\n                      system: '支付系统',\n                      count: 15\n                    }, {\n                      system: '数据库系统',\n                      count: 12\n                    }, {\n                      system: '管理后台',\n                      count: 9\n                    }, {\n                      system: 'API网关',\n                      count: 6\n                    }]\n                  };\n                  loading.value = false;\n                }, 1000);\n              } catch (error) {\n                console.error('获取仪表盘数据失败:', error);\n                loading.value = false;\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function fetchDashboardData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // 初始化页面时获取数据\n    fetchDashboardData();\n\n    // 漏洞状态分布图表数据\n    var statusChartData = computed(function () {\n      if (!dashboardData.value.statusCounts) return null;\n      return {\n        labels: ['待处理', '处理中', '已解决'],\n        datasets: [{\n          backgroundColor: ['#FF9800', '#2196F3', '#4CAF50'],\n          data: [dashboardData.value.statusCounts.open || 0, dashboardData.value.statusCounts.in_progress || 0, dashboardData.value.statusCounts.resolved || 0],\n          borderColor: '#ffffff',\n          borderWidth: 2\n        }]\n      };\n    });\n\n    // 漏洞严重程度分布图表数据\n    var severityChartData = computed(function () {\n      if (!dashboardData.value.severityCounts) return null;\n      return {\n        labels: ['严重', '高危', '中危', '低危'],\n        datasets: [{\n          backgroundColor: ['#F44336', '#FF9800', '#FFEB3B', '#8BC34A'],\n          data: [dashboardData.value.severityCounts.critical || 0, dashboardData.value.severityCounts.high || 0, dashboardData.value.severityCounts.medium || 0, dashboardData.value.severityCounts.low || 0],\n          borderColor: '#ffffff',\n          borderWidth: 2\n        }]\n      };\n    });\n\n    // 月度漏洞趋势图表数据\n    var monthlyChartData = computed(function () {\n      if (!dashboardData.value.monthlyData || dashboardData.value.monthlyData.length === 0) return null;\n      return {\n        labels: dashboardData.value.monthlyData.map(function (item) {\n          return item.month;\n        }),\n        datasets: [{\n          label: '漏洞数量',\n          backgroundColor: 'rgba(33, 150, 243, 0.2)',\n          borderColor: '#2196F3',\n          pointBackgroundColor: '#2196F3',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: '#2196F3',\n          data: dashboardData.value.monthlyData.map(function (item) {\n            return item.count;\n          }),\n          tension: 0.4,\n          borderWidth: 3,\n          fill: true\n        }]\n      };\n    });\n\n    // 图表选项\n    var pieChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            padding: 20,\n            usePointStyle: true,\n            pointStyle: 'circle'\n          }\n        },\n        tooltip: {\n          callbacks: {\n            label: function label(context) {\n              var label = context.label || '';\n              var value = context.raw || 0;\n              var total = context.dataset.data.reduce(function (a, b) {\n                return a + b;\n              }, 0);\n              var percentage = Math.round(value * 100 / total);\n              return \"\".concat(label, \": \").concat(value, \" (\").concat(percentage, \"%)\");\n            }\n          }\n        }\n      },\n      cutout: '0%'\n    };\n    var doughnutChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            padding: 20,\n            usePointStyle: true,\n            pointStyle: 'circle'\n          }\n        },\n        tooltip: {\n          callbacks: {\n            label: function label(context) {\n              var label = context.label || '';\n              var value = context.raw || 0;\n              var total = context.dataset.data.reduce(function (a, b) {\n                return a + b;\n              }, 0);\n              var percentage = Math.round(value * 100 / total);\n              return \"\".concat(label, \": \").concat(value, \" (\").concat(percentage, \"%)\");\n            }\n          }\n        }\n      },\n      cutout: '60%'\n    };\n    var lineChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: false\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          grid: {\n            color: 'rgba(0, 0, 0, 0.05)'\n          }\n        },\n        x: {\n          grid: {\n            display: false\n          }\n        }\n      }\n    };\n\n    // 获取特定状态的数量\n    var getStatusCount = function getStatusCount(status) {\n      var _dashboardData$value$;\n      return ((_dashboardData$value$ = dashboardData.value.statusCounts) === null || _dashboardData$value$ === void 0 ? void 0 : _dashboardData$value$[status]) || 0;\n    };\n\n    // 获取严重和高危漏洞总数\n    var getCriticalHighCount = function getCriticalHighCount() {\n      var _dashboardData$value$2, _dashboardData$value$3;\n      return (((_dashboardData$value$2 = dashboardData.value.severityCounts) === null || _dashboardData$value$2 === void 0 ? void 0 : _dashboardData$value$2.critical) || 0) + (((_dashboardData$value$3 = dashboardData.value.severityCounts) === null || _dashboardData$value$3 === void 0 ? void 0 : _dashboardData$value$3.high) || 0);\n    };\n\n    // 是否有数据\n    var hasSeverityData = computed(function () {\n      if (!dashboardData.value.severityCounts) return false;\n      return Object.values(dashboardData.value.severityCounts).some(function (count) {\n        return count > 0;\n      });\n    });\n    var hasStatusData = computed(function () {\n      if (!dashboardData.value.statusCounts) return false;\n      return Object.values(dashboardData.value.statusCounts).some(function (count) {\n        return count > 0;\n      });\n    });\n    var hasMonthlyData = computed(function () {\n      return dashboardData.value.monthlyData && dashboardData.value.monthlyData.length > 1;\n    });\n    var hasRecentVulnerabilities = computed(function () {\n      return dashboardData.value.recentVulnerabilities && dashboardData.value.recentVulnerabilities.length > 0;\n    });\n    var hasTopAffectedSystems = computed(function () {\n      return dashboardData.value.topAffectedSystems && dashboardData.value.topAffectedSystems.length > 0;\n    });\n\n    // 获取系统图标颜色\n    var getSystemColor = function getSystemColor(index) {\n      var colors = ['#F44336', '#2196F3', '#4CAF50', '#FFC107', '#9C27B0'];\n      return colors[index % colors.length];\n    };\n\n    // 获取系统图标背景色（浅色）\n    var getSystemColorLight = function getSystemColorLight(index) {\n      var colors = ['rgba(244, 67, 54, 0.1)', 'rgba(33, 150, 243, 0.1)', 'rgba(76, 175, 80, 0.1)', 'rgba(255, 193, 7, 0.1)', 'rgba(156, 39, 176, 0.1)'];\n      return colors[index % colors.length];\n    };\n\n    // 计算系统影响百分比\n    var getSystemPercentage = function getSystemPercentage(count) {\n      var maxCount = Math.max.apply(Math, _toConsumableArray(dashboardData.value.topAffectedSystems.map(function (s) {\n        return s.count;\n      })));\n      return Math.round(count / maxCount * 100);\n    };\n\n    // 导航函数\n    var goToVulnerabilities = function goToVulnerabilities() {\n      router.push('/vulnerabilities');\n    };\n    var goToCreateVulnerability = function goToCreateVulnerability() {\n      router.push('/vulnerabilities/create');\n    };\n    return {\n      loading: loading,\n      dashboardData: dashboardData,\n      statusChartData: statusChartData,\n      severityChartData: severityChartData,\n      monthlyChartData: monthlyChartData,\n      pieChartOptions: pieChartOptions,\n      doughnutChartOptions: doughnutChartOptions,\n      lineChartOptions: lineChartOptions,\n      hasSeverityData: hasSeverityData,\n      hasStatusData: hasStatusData,\n      hasMonthlyData: hasMonthlyData,\n      hasRecentVulnerabilities: hasRecentVulnerabilities,\n      hasTopAffectedSystems: hasTopAffectedSystems,\n      getStatusCount: getStatusCount,\n      getCriticalHighCount: getCriticalHighCount,\n      getSystemColor: getSystemColor,\n      getSystemColorLight: getSystemColorLight,\n      getSystemPercentage: getSystemPercentage,\n      goToVulnerabilities: goToVulnerabilities,\n      goToCreateVulnerability: goToCreateVulnerability\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","useRouter","useStore","PieChart","DoughnutChart","LineChart","name","components","setup","router","store","loading","dashboardData","totalVulnerabilities","statusCounts","severityCounts","monthlyData","recentVulnerabilities","topAffectedSystems","fetchDashboardData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","value","setTimeout","open","in_progress","resolved","critical","high","medium","low","month","count","id","title","severity","status","createdAt","Date","toISOString","system","error","console","stop","apply","arguments","statusChartData","labels","datasets","backgroundColor","data","borderColor","borderWidth","severityChartData","monthlyChartData","length","map","item","label","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","tension","fill","pieChartOptions","responsive","maintainAspectRatio","plugins","legend","position","padding","usePointStyle","pointStyle","tooltip","callbacks","context","raw","total","dataset","reduce","a","b","percentage","Math","round","concat","cutout","doughnutChartOptions","lineChartOptions","display","scales","y","beginAtZero","grid","color","x","getStatusCount","_dashboardData$value$","getCriticalHighCount","_dashboardData$value$2","_dashboardData$value$3","hasSeverityData","Object","values","some","hasStatusData","hasMonthlyData","hasRecentVulnerabilities","hasTopAffectedSystems","getSystemColor","index","colors","getSystemColorLight","getSystemPercentage","maxCount","max","_toConsumableArray","s","goToVulnerabilities","push","goToCreateVulnerability"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <!-- 页面标题 -->\n    <div class=\"dashboard-header\">\n      <h1 class=\"dashboard-title\">\n        <span class=\"title-icon\"><i class=\"el-icon-data-analysis\"></i></span>\n        仪表盘\n        <span class=\"title-highlight\">概览</span>\n      </h1>\n      <p class=\"dashboard-subtitle\">查看系统安全状态和最新漏洞信息，实时掌握安全态势</p>\n    </div>\n    \n    <el-row :gutter=\"24\">\n      <!-- 统计卡片 -->\n      <el-col :xs=\"12\" :sm=\"12\" :md=\"6\" :lg=\"6\">\n        <div class=\"stat-card red-gradient\">\n          <div class=\"stat-card-content\">\n            <div class=\"stat-icon-container\">\n              <i class=\"el-icon-warning\"></i>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-value\">{{ dashboardData.totalVulnerabilities || 0 }}</div>\n              <div class=\"stat-label\">总漏洞数</div>\n            </div>\n          </div>\n          <div class=\"stat-progress\"></div>\n        </div>\n      </el-col>\n      \n      <el-col :xs=\"12\" :sm=\"12\" :md=\"6\" :lg=\"6\">\n        <div class=\"stat-card orange-gradient\">\n          <div class=\"stat-card-content\">\n            <div class=\"stat-icon-container\">\n              <i class=\"el-icon-timer\"></i>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-value\">{{ getStatusCount('open') + getStatusCount('in_progress') }}</div>\n              <div class=\"stat-label\">待处理漏洞</div>\n            </div>\n          </div>\n          <div class=\"stat-progress\"></div>\n        </div>\n      </el-col>\n      \n      <el-col :xs=\"12\" :sm=\"12\" :md=\"6\" :lg=\"6\">\n        <div class=\"stat-card green-gradient\">\n          <div class=\"stat-card-content\">\n            <div class=\"stat-icon-container\">\n              <i class=\"el-icon-check\"></i>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-value\">{{ getStatusCount('resolved') }}</div>\n              <div class=\"stat-label\">已解决漏洞</div>\n            </div>\n          </div>\n          <div class=\"stat-progress\"></div>\n        </div>\n      </el-col>\n      \n      <el-col :xs=\"12\" :sm=\"12\" :md=\"6\" :lg=\"6\">\n        <div class=\"stat-card blue-gradient\">\n          <div class=\"stat-card-content\">\n            <div class=\"stat-icon-container\">\n              <i class=\"el-icon-document\"></i>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-value\">{{ getCriticalHighCount() }}</div>\n              <div class=\"stat-label\">高危漏洞</div>\n            </div>\n          </div>\n          <div class=\"stat-progress\"></div>\n        </div>\n      </el-col>\n    </el-row>\n    \n    <el-row :gutter=\"24\" class=\"chart-row\">\n      <!-- 漏洞严重程度统计图 -->\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\">\n        <div class=\"chart-card\">\n          <div class=\"chart-header\">\n            <h3 class=\"chart-title\">\n              <i class=\"el-icon-pie-chart chart-icon\"></i>\n              漏洞严重程度分布\n            </h3>\n          </div>\n          <div class=\"chart-container\" v-loading=\"loading\">\n            <pie-chart \n              v-if=\"!loading && hasSeverityData\" \n              :chart-data=\"severityChartData\" \n              :options=\"pieChartOptions\" \n            />\n            <div v-else-if=\"!loading && !hasSeverityData\" class=\"no-data\">\n              <i class=\"el-icon-data-analysis\"></i>\n              <p>暂无严重程度数据</p>\n              <span class=\"no-data-tip\">添加漏洞后将在此处显示数据</span>\n            </div>\n          </div>\n        </div>\n      </el-col>\n      \n      <!-- 漏洞状态统计图 -->\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\">\n        <div class=\"chart-card\">\n          <div class=\"chart-header\">\n            <h3 class=\"chart-title\">\n              <i class=\"el-icon-s-data chart-icon\"></i>\n              漏洞状态分布\n            </h3>\n          </div>\n          <div class=\"chart-container\" v-loading=\"loading\">\n            <doughnut-chart \n              v-if=\"!loading && hasStatusData\" \n              :chart-data=\"statusChartData\"\n              :options=\"doughnutChartOptions\"\n            />\n            <div v-else-if=\"!loading && !hasStatusData\" class=\"no-data\">\n              <i class=\"el-icon-data-analysis\"></i>\n              <p>暂无状态数据</p>\n              <span class=\"no-data-tip\">添加漏洞后将在此处显示数据</span>\n            </div>\n          </div>\n        </div>\n      </el-col>\n    </el-row>\n    \n    <el-row :gutter=\"24\" class=\"chart-row\">\n      <!-- 月度漏洞趋势图 -->\n      <el-col :xs=\"24\">\n        <div class=\"chart-card\">\n          <div class=\"chart-header\">\n            <h3 class=\"chart-title\">\n              <i class=\"el-icon-trend chart-icon\"></i>\n              月度漏洞趋势\n            </h3>\n          </div>\n          <div class=\"chart-container\" v-loading=\"loading\">\n            <line-chart \n              v-if=\"!loading && hasMonthlyData\" \n              :chart-data=\"monthlyChartData\"\n              :options=\"lineChartOptions\"\n            />\n            <div v-else-if=\"!loading && !hasMonthlyData\" class=\"no-data\">\n              <i class=\"el-icon-data-analysis\"></i>\n              <p>暂无趋势数据</p>\n              <span class=\"no-data-tip\">需要至少两个月的数据才能显示趋势</span>\n            </div>\n          </div>\n        </div>\n      </el-col>\n    </el-row>\n    \n    <el-row :gutter=\"24\" class=\"chart-row\">\n      <!-- 最近漏洞列表 -->\n      <el-col :xs=\"24\" :md=\"16\">\n        <div class=\"recent-vulns-card\">\n          <div class=\"card-header\">\n            <div class=\"card-title-wrapper\">\n              <h3 class=\"card-title\">\n                <i class=\"el-icon-warning-outline chart-icon\"></i>\n                最近漏洞\n              </h3>\n              <span class=\"card-subtitle\">最新发现的系统安全漏洞</span>\n            </div>\n            <el-button \n              type=\"primary\" \n              plain\n              size=\"small\"\n              @click=\"goToVulnerabilities\" \n              class=\"view-all-btn\"\n            >\n              查看全部 <i class=\"el-icon-arrow-right\"></i>\n            </el-button>\n          </div>\n          <div v-loading=\"loading\">\n            <el-table \n              v-if=\"!loading && hasRecentVulnerabilities\"\n              :data=\"dashboardData.recentVulnerabilities\" \n              style=\"width: 100%\"\n              size=\"medium\"\n            >\n              <el-table-column label=\"标题\" prop=\"title\" min-width=\"200\">\n                <template #default=\"scope\">\n                  <router-link :to=\"`/vulnerabilities/${scope.row.id}`\" class=\"vuln-title-link\">\n                    {{ scope.row.title }}\n                  </router-link>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"严重程度\" prop=\"severity\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-tag :type=\"$filters.severityClass(scope.row.severity)\" size=\"small\" effect=\"dark\">\n                    {{ $filters.severityText(scope.row.severity) }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"状态\" prop=\"status\" width=\"100\">\n                <template #default=\"scope\">\n                  <el-tag :type=\"$filters.statusClass(scope.row.status)\" size=\"small\" effect=\"plain\">\n                    {{ $filters.statusText(scope.row.status) }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"创建时间\" prop=\"createdAt\" width=\"150\">\n                <template #default=\"scope\">\n                  <span class=\"date-text\">\n                    <i class=\"el-icon-time date-icon\"></i>\n                    {{ $filters.formatDate(scope.row.createdAt) }}\n                  </span>\n                </template>\n              </el-table-column>\n            </el-table>\n            <div v-else-if=\"!loading && !hasRecentVulnerabilities\" class=\"no-data\">\n              <i class=\"el-icon-document\"></i>\n              <p>暂无漏洞数据</p>\n              <el-button type=\"primary\" size=\"small\" @click=\"goToCreateVulnerability\">\n                创建漏洞\n              </el-button>\n            </div>\n          </div>\n        </div>\n      </el-col>\n      \n      <!-- 受影响最多的系统 -->\n      <el-col :xs=\"24\" :md=\"8\">\n        <div class=\"systems-card\">\n          <div class=\"card-header\">\n            <div class=\"card-title-wrapper\">\n              <h3 class=\"card-title\">\n                <i class=\"el-icon-cpu chart-icon\"></i>\n                受影响最多的系统\n              </h3>\n              <span class=\"card-subtitle\">按漏洞数量排序</span>\n            </div>\n          </div>\n          <div v-loading=\"loading\">\n            <div v-if=\"!loading && hasTopAffectedSystems\" class=\"systems-list\">\n              <div \n                v-for=\"(system, index) in dashboardData.topAffectedSystems\" \n                :key=\"index\"\n                class=\"system-item\"\n              >\n                <div class=\"system-icon\" :style=\"{ backgroundColor: getSystemColorLight(index) }\">\n                  <i class=\"el-icon-cpu\" :style=\"{ color: getSystemColor(index) }\"></i>\n                </div>\n                <div class=\"system-details\">\n                  <div class=\"system-info\">\n                    <div class=\"system-name\">{{ system.system }}</div>\n                    <div class=\"system-count\">{{ system.count }} 个漏洞</div>\n                  </div>\n                  <el-progress \n                    :percentage=\"getSystemPercentage(system.count)\" \n                    :color=\"getSystemColor(index)\"\n                    :show-text=\"false\"\n                    :stroke-width=\"8\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div v-else-if=\"!loading && !hasTopAffectedSystems\" class=\"no-data\">\n              <i class=\"el-icon-cpu\"></i>\n              <p>暂无系统数据</p>\n              <span class=\"no-data-tip\">添加漏洞并指定影响系统后将显示数据</span>\n            </div>\n          </div>\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport PieChart from '@/components/charts/PieChart.vue';\nimport DoughnutChart from '@/components/charts/DoughnutChart.vue';\nimport LineChart from '@/components/charts/LineChart.vue';\n\nexport default {\n  name: 'Dashboard',\n  components: {\n    PieChart,\n    DoughnutChart,\n    LineChart\n  },\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const loading = ref(true);\n    const dashboardData = ref({\n      totalVulnerabilities: 0,\n      statusCounts: {},\n      severityCounts: {},\n      monthlyData: [],\n      recentVulnerabilities: [],\n      topAffectedSystems: []\n    });\n\n    // 获取仪表盘数据\n    const fetchDashboardData = async () => {\n      loading.value = true;\n      try {\n        // 这里应该调用后端 API 获取实际数据\n        // 目前使用模拟数据进行前端开发\n        setTimeout(() => {\n          dashboardData.value = {\n            totalVulnerabilities: 127,\n            statusCounts: {\n              open: 43,\n              in_progress: 28,\n              resolved: 56\n            },\n            severityCounts: {\n              critical: 12,\n              high: 35,\n              medium: 48,\n              low: 32\n            },\n            monthlyData: [\n              { month: '1月', count: 12 },\n              { month: '2月', count: 19 },\n              { month: '3月', count: 15 },\n              { month: '4月', count: 22 },\n              { month: '5月', count: 18 },\n              { month: '6月', count: 41 }\n            ],\n            recentVulnerabilities: [\n              {\n                id: '1',\n                title: 'SQL注入漏洞 - 用户认证模块',\n                severity: 'critical',\n                status: 'open',\n                createdAt: new Date('2023-06-15').toISOString()\n              },\n              {\n                id: '2',\n                title: 'XSS漏洞 - 评论功能',\n                severity: 'high',\n                status: 'in_progress',\n                createdAt: new Date('2023-06-12').toISOString()\n              },\n              {\n                id: '3',\n                title: '密码策略不合规 - 用户管理',\n                severity: 'medium',\n                status: 'in_progress',\n                createdAt: new Date('2023-06-10').toISOString()\n              },\n              {\n                id: '4',\n                title: 'CSRF漏洞 - 支付页面',\n                severity: 'high',\n                status: 'open',\n                createdAt: new Date('2023-06-05').toISOString()\n              },\n              {\n                id: '5',\n                title: '日志记录不充分 - 登录功能',\n                severity: 'low',\n                status: 'resolved',\n                createdAt: new Date('2023-06-01').toISOString()\n              }\n            ],\n            topAffectedSystems: [\n              { system: '用户认证系统', count: 18 },\n              { system: '支付系统', count: 15 },\n              { system: '数据库系统', count: 12 },\n              { system: '管理后台', count: 9 },\n              { system: 'API网关', count: 6 }\n            ]\n          };\n          loading.value = false;\n        }, 1000);\n      } catch (error) {\n        console.error('获取仪表盘数据失败:', error);\n        loading.value = false;\n      }\n    };\n\n    // 初始化页面时获取数据\n    fetchDashboardData();\n\n    // 漏洞状态分布图表数据\n    const statusChartData = computed(() => {\n      if (!dashboardData.value.statusCounts) return null;\n      \n      return {\n        labels: ['待处理', '处理中', '已解决'],\n        datasets: [\n          {\n            backgroundColor: ['#FF9800', '#2196F3', '#4CAF50'],\n            data: [\n              dashboardData.value.statusCounts.open || 0,\n              dashboardData.value.statusCounts.in_progress || 0,\n              dashboardData.value.statusCounts.resolved || 0\n            ],\n            borderColor: '#ffffff',\n            borderWidth: 2\n          }\n        ]\n      };\n    });\n\n    // 漏洞严重程度分布图表数据\n    const severityChartData = computed(() => {\n      if (!dashboardData.value.severityCounts) return null;\n      \n      return {\n        labels: ['严重', '高危', '中危', '低危'],\n        datasets: [\n          {\n            backgroundColor: ['#F44336', '#FF9800', '#FFEB3B', '#8BC34A'],\n            data: [\n              dashboardData.value.severityCounts.critical || 0,\n              dashboardData.value.severityCounts.high || 0,\n              dashboardData.value.severityCounts.medium || 0,\n              dashboardData.value.severityCounts.low || 0\n            ],\n            borderColor: '#ffffff',\n            borderWidth: 2\n          }\n        ]\n      };\n    });\n\n    // 月度漏洞趋势图表数据\n    const monthlyChartData = computed(() => {\n      if (!dashboardData.value.monthlyData || dashboardData.value.monthlyData.length === 0) return null;\n      \n      return {\n        labels: dashboardData.value.monthlyData.map(item => item.month),\n        datasets: [\n          {\n            label: '漏洞数量',\n            backgroundColor: 'rgba(33, 150, 243, 0.2)',\n            borderColor: '#2196F3',\n            pointBackgroundColor: '#2196F3',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: '#2196F3',\n            data: dashboardData.value.monthlyData.map(item => item.count),\n            tension: 0.4,\n            borderWidth: 3,\n            fill: true\n          }\n        ]\n      };\n    });\n\n    // 图表选项\n    const pieChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            padding: 20,\n            usePointStyle: true,\n            pointStyle: 'circle'\n          }\n        },\n        tooltip: {\n          callbacks: {\n            label: function(context) {\n              let label = context.label || '';\n              let value = context.raw || 0;\n              let total = context.dataset.data.reduce((a, b) => a + b, 0);\n              let percentage = Math.round((value * 100) / total);\n              return `${label}: ${value} (${percentage}%)`;\n            }\n          }\n        }\n      },\n      cutout: '0%'\n    };\n\n    const doughnutChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'bottom',\n          labels: {\n            padding: 20,\n            usePointStyle: true,\n            pointStyle: 'circle'\n          }\n        },\n        tooltip: {\n          callbacks: {\n            label: function(context) {\n              let label = context.label || '';\n              let value = context.raw || 0;\n              let total = context.dataset.data.reduce((a, b) => a + b, 0);\n              let percentage = Math.round((value * 100) / total);\n              return `${label}: ${value} (${percentage}%)`;\n            }\n          }\n        }\n      },\n      cutout: '60%'\n    };\n\n    const lineChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: false\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true,\n          grid: {\n            color: 'rgba(0, 0, 0, 0.05)'\n          }\n        },\n        x: {\n          grid: {\n            display: false\n          }\n        }\n      }\n    };\n\n    // 获取特定状态的数量\n    const getStatusCount = (status) => {\n      return dashboardData.value.statusCounts?.[status] || 0;\n    };\n\n    // 获取严重和高危漏洞总数\n    const getCriticalHighCount = () => {\n      return (dashboardData.value.severityCounts?.critical || 0) + \n             (dashboardData.value.severityCounts?.high || 0);\n    };\n\n    // 是否有数据\n    const hasSeverityData = computed(() => {\n      if (!dashboardData.value.severityCounts) return false;\n      return Object.values(dashboardData.value.severityCounts).some(count => count > 0);\n    });\n\n    const hasStatusData = computed(() => {\n      if (!dashboardData.value.statusCounts) return false;\n      return Object.values(dashboardData.value.statusCounts).some(count => count > 0);\n    });\n\n    const hasMonthlyData = computed(() => {\n      return dashboardData.value.monthlyData && dashboardData.value.monthlyData.length > 1;\n    });\n\n    const hasRecentVulnerabilities = computed(() => {\n      return dashboardData.value.recentVulnerabilities && dashboardData.value.recentVulnerabilities.length > 0;\n    });\n\n    const hasTopAffectedSystems = computed(() => {\n      return dashboardData.value.topAffectedSystems && dashboardData.value.topAffectedSystems.length > 0;\n    });\n\n    // 获取系统图标颜色\n    const getSystemColor = (index) => {\n      const colors = ['#F44336', '#2196F3', '#4CAF50', '#FFC107', '#9C27B0'];\n      return colors[index % colors.length];\n    };\n\n    // 获取系统图标背景色（浅色）\n    const getSystemColorLight = (index) => {\n      const colors = [\n        'rgba(244, 67, 54, 0.1)',\n        'rgba(33, 150, 243, 0.1)',\n        'rgba(76, 175, 80, 0.1)',\n        'rgba(255, 193, 7, 0.1)',\n        'rgba(156, 39, 176, 0.1)'\n      ];\n      return colors[index % colors.length];\n    };\n\n    // 计算系统影响百分比\n    const getSystemPercentage = (count) => {\n      const maxCount = Math.max(\n        ...dashboardData.value.topAffectedSystems.map(s => s.count)\n      );\n      return Math.round((count / maxCount) * 100);\n    };\n\n    // 导航函数\n    const goToVulnerabilities = () => {\n      router.push('/vulnerabilities');\n    };\n\n    const goToCreateVulnerability = () => {\n      router.push('/vulnerabilities/create');\n    };\n\n    return {\n      loading,\n      dashboardData,\n      statusChartData,\n      severityChartData,\n      monthlyChartData,\n      pieChartOptions,\n      doughnutChartOptions,\n      lineChartOptions,\n      hasSeverityData,\n      hasStatusData,\n      hasMonthlyData,\n      hasRecentVulnerabilities,\n      hasTopAffectedSystems,\n      getStatusCount,\n      getCriticalHighCount,\n      getSystemColor,\n      getSystemColorLight,\n      getSystemPercentage,\n      goToVulnerabilities,\n      goToCreateVulnerability\n    };\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-container {\n  padding: 24px;\n  animation: fadeIn 0.6s ease;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.dashboard-header {\n  margin-bottom: 24px;\n  \n  .dashboard-title {\n    font-size: 28px;\n    font-weight: 600;\n    margin: 0 0 8px 0;\n    display: flex;\n    align-items: center;\n    color: #303133;\n    \n    .title-icon {\n      margin-right: 12px;\n      font-size: 28px;\n      color: #409EFF;\n    }\n    \n    .title-highlight {\n      background: linear-gradient(120deg, #409EFF, #53A8FF);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      margin-left: 8px;\n      font-weight: 700;\n    }\n  }\n  \n  .dashboard-subtitle {\n    color: #606266;\n    font-size: 16px;\n    margin: 0;\n  }\n}\n\n.el-row {\n  margin-bottom: 24px;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.stat-card {\n  height: 120px;\n  border-radius: 12px;\n  padding: 16px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s ease;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  position: relative;\n  overflow: hidden;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  }\n  \n  &.red-gradient {\n    background: linear-gradient(135deg, #f5515f, #ff7676);\n    color: white;\n  }\n  \n  &.orange-gradient {\n    background: linear-gradient(135deg, #ff9966, #ff5e62);\n    color: white;\n  }\n  \n  &.green-gradient {\n    background: linear-gradient(135deg, #43e97b, #38f9d7);\n    color: white;\n  }\n  \n  &.blue-gradient {\n    background: linear-gradient(135deg, #2193b0, #6dd5ed);\n    color: white;\n  }\n  \n  .stat-card-content {\n    display: flex;\n    align-items: center;\n    z-index: 2;\n    position: relative;\n  }\n  \n  .stat-icon-container {\n    width: 48px;\n    height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 12px;\n    margin-right: 16px;\n    background-color: rgba(255, 255, 255, 0.2);\n    font-size: 24px;\n  }\n  \n  .stat-info {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .stat-value {\n    font-size: 28px;\n    font-weight: 700;\n    line-height: 1.2;\n  }\n  \n  .stat-label {\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0.8;\n  }\n  \n  .stat-progress {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    height: 4px;\n    width: 100%;\n    background: rgba(255, 255, 255, 0.2);\n    \n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 35%;\n      background: rgba(255, 255, 255, 0.4);\n      animation: progressAnim 2s ease-in-out infinite;\n    }\n  }\n  \n  @keyframes progressAnim {\n    0% { width: 10%; }\n    50% { width: 70%; }\n    100% { width: 10%; }\n  }\n}\n\n.chart-row {\n  margin-bottom: 24px;\n}\n\n.chart-card, .recent-vulns-card, .systems-card {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.03);\n  padding: 20px;\n  height: 100%;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 24px;\n  \n  &:hover {\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);\n  }\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 4px;\n    background: linear-gradient(90deg, #409EFF, #53A8FF);\n  }\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  \n  .chart-title {\n    margin: 0;\n    font-size: 16px;\n    font-weight: 600;\n    color: #303133;\n    display: flex;\n    align-items: center;\n    \n    .chart-icon {\n      margin-right: 8px;\n      color: #409EFF;\n    }\n  }\n}\n\n.chart-container {\n  height: 300px;\n  position: relative;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  \n  .card-title-wrapper {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .card-title {\n    margin: 0;\n    font-size: 16px;\n    font-weight: 600;\n    color: #303133;\n    display: flex;\n    align-items: center;\n    \n    .chart-icon {\n      margin-right: 8px;\n      color: #409EFF;\n    }\n  }\n  \n  .card-subtitle {\n    font-size: 12px;\n    color: #909399;\n    margin-top: 4px;\n  }\n  \n  .view-all-btn {\n    font-size: 12px;\n    font-weight: 500;\n    \n    i {\n      margin-left: 4px;\n    }\n  }\n}\n\n.vuln-title-link {\n  color: #409EFF;\n  text-decoration: none;\n  transition: color 0.3s ease;\n  font-weight: 500;\n  \n  &:hover {\n    color: #66b1ff;\n    text-decoration: underline;\n  }\n}\n\n.date-text {\n  display: flex;\n  align-items: center;\n  color: #909399;\n  font-size: 13px;\n  \n  .date-icon {\n    margin-right: 4px;\n  }\n}\n\n.systems-list {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  \n  .system-item {\n    display: flex;\n    align-items: center;\n    \n    .system-icon {\n      width: 40px;\n      height: 40px;\n      border-radius: 8px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-right: 12px;\n      font-size: 18px;\n    }\n    \n    .system-details {\n      flex: 1;\n    }\n    \n    .system-info {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 8px;\n    }\n    \n    .system-name {\n      font-weight: 500;\n      color: #303133;\n    }\n    \n    .system-count {\n      font-size: 12px;\n      color: #606266;\n      font-weight: 500;\n    }\n  }\n}\n\n.no-data {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #909399;\n  \n  i {\n    font-size: 42px;\n    margin-bottom: 16px;\n    opacity: 0.5;\n  }\n  \n  p {\n    font-size: 16px;\n    margin: 0 0 16px 0;\n  }\n  \n  .no-data-tip {\n    font-size: 12px;\n    opacity: 0.8;\n    text-align: center;\n    max-width: 200px;\n    margin-bottom: 16px;\n  }\n}\n\n// 响应式调整\n@media (max-width: 768px) {\n  .dashboard-container {\n    padding: 16px;\n  }\n  \n  .dashboard-header {\n    .dashboard-title {\n      font-size: 24px;\n      \n      .title-icon {\n        font-size: 24px;\n      }\n    }\n    \n    .dashboard-subtitle {\n      font-size: 14px;\n    }\n  }\n  \n  .stat-card {\n    height: 100px;\n    \n    .stat-icon-container {\n      width: 36px;\n      height: 36px;\n      font-size: 18px;\n    }\n    \n    .stat-value {\n      font-size: 22px;\n    }\n    \n    .stat-label {\n      font-size: 12px;\n    }\n  }\n  \n  .chart-container {\n    height: 220px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}