{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessageBox, ElMessage } from 'element-plus';\nexport default {\n  name: 'VulnerabilityDetails',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    const loading = ref(true);\n    const vulnerability = computed(() => store.getters['vulnerability/currentVulnerability']);\n    const newComment = ref('');\n\n    // 时间线数据\n    const timeline = computed(() => {\n      if (!vulnerability.value || !vulnerability.value.activities) return [];\n\n      // 按时间排序活动\n      return [...vulnerability.value.activities].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    });\n\n    // 获取漏洞详情\n    const fetchVulnerabilityDetails = async () => {\n      loading.value = true;\n      try {\n        const vulnerabilityId = route.params.id;\n        await store.dispatch('vulnerability/fetchVulnerabilityById', vulnerabilityId);\n      } catch (error) {\n        ElMessage.error('获取漏洞详情失败：' + (error.message || '未知错误'));\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 修改漏洞状态\n    const changeStatus = async status => {\n      try {\n        await store.dispatch('vulnerability/updateVulnerability', {\n          id: vulnerability.value.id,\n          data: {\n            status\n          }\n        });\n        ElMessage.success('漏洞状态已更新');\n      } catch (error) {\n        ElMessage.error('更新漏洞状态失败：' + (error.message || '未知错误'));\n      }\n    };\n\n    // 删除漏洞\n    const handleDelete = () => {\n      ElMessageBox.confirm('确定要删除这个漏洞吗？此操作不可恢复。', '删除确认', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await store.dispatch('vulnerability/deleteVulnerability', vulnerability.value.id);\n          ElMessage.success('漏洞已成功删除');\n          router.push('/vulnerabilities');\n        } catch (error) {\n          ElMessage.error('删除漏洞失败：' + (error.message || '未知错误'));\n        }\n      }).catch(() => {\n        // 用户取消删除\n      });\n    };\n\n    // 编辑漏洞\n    const handleEdit = () => {\n      router.push(`/vulnerabilities/${vulnerability.value.id}/edit`);\n    };\n\n    // 提交评论\n    const submitComment = async () => {\n      if (!newComment.value.trim()) return;\n      try {\n        await store.dispatch('vulnerability/addComment', {\n          vulnerabilityId: vulnerability.value.id,\n          content: newComment.value\n        });\n        ElMessage.success('评论已添加');\n        newComment.value = '';\n      } catch (error) {\n        ElMessage.error('添加评论失败：' + (error.message || '未知错误'));\n      }\n    };\n\n    // 返回漏洞列表\n    const goBack = () => {\n      router.push('/vulnerabilities');\n    };\n\n    // 格式化文件大小\n    const formatFileSize = bytes => {\n      if (!bytes) return '0 Bytes';\n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n\n    // 根据活动类型获取时间线项目类型\n    const getTimelineItemType = action => {\n      const types = {\n        'created': 'primary',\n        'updated': 'warning',\n        'status_changed': 'success',\n        'comment_added': 'info',\n        'deleted': 'danger'\n      };\n      return types[action] || 'info';\n    };\n    onMounted(() => {\n      fetchVulnerabilityDetails();\n    });\n    return {\n      loading,\n      vulnerability,\n      timeline,\n      newComment,\n      fetchVulnerabilityDetails,\n      changeStatus,\n      handleDelete,\n      handleEdit,\n      submitComment,\n      goBack,\n      formatFileSize,\n      getTimelineItemType\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useStore","useRouter","useRoute","ElMessageBox","ElMessage","name","setup","store","router","route","loading","vulnerability","getters","newComment","timeline","value","activities","sort","a","b","Date","timestamp","fetchVulnerabilityDetails","vulnerabilityId","params","id","dispatch","error","message","changeStatus","status","data","success","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","push","catch","handleEdit","submitComment","trim","content","goBack","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","getTimelineItemType","action","types"],"sources":["/Users/yue/Desktop/vuln-Management/frontend/src/views/vulnerabilities/VulnerabilityDetails.vue"],"sourcesContent":["<template>\n  <div class=\"vulnerability-details\" v-loading=\"loading\">\n    <!-- 未找到漏洞 -->\n    <el-result\n      v-if=\"!loading && !vulnerability\"\n      icon=\"warning\"\n      title=\"未找到漏洞\"\n      sub-title=\"请检查链接是否正确或联系管理员\"\n    >\n      <template #extra>\n        <el-button type=\"primary\" @click=\"goBack\">返回漏洞列表</el-button>\n      </template>\n    </el-result>\n\n    <template v-if=\"vulnerability\">\n      <div class=\"page-header\">\n        <div class=\"header-content\">\n          <div class=\"header-left\">\n            <!-- 漏洞标题行 -->\n            <div class=\"title-row\">\n              <h1 class=\"vulnerability-title\">{{ vulnerability.title }}</h1>\n              <el-tag v-if=\"vulnerability.cve\" class=\"cve-tag\">{{ vulnerability.cve }}</el-tag>\n              <el-tag :type=\"$filters.severityClass(vulnerability.severity)\" class=\"severity-tag\">\n                {{ $filters.severityText(vulnerability.severity) }}\n              </el-tag>\n              <el-tag :type=\"$filters.statusClass(vulnerability.status)\" class=\"status-tag\">\n                {{ $filters.statusText(vulnerability.status) }}\n              </el-tag>\n            </div>\n            \n            <!-- 漏洞元数据 -->\n            <div class=\"metadata-row\">\n              <span v-if=\"vulnerability.reportedAt\" class=\"metadata-item\">\n                <i class=\"el-icon-date\"></i> 报告时间：{{ $filters.formatDate(vulnerability.reportedAt) }}\n              </span>\n              <span v-if=\"vulnerability.updatedAt\" class=\"metadata-item\">\n                <i class=\"el-icon-refresh\"></i> 更新时间：{{ $filters.formatDate(vulnerability.updatedAt) }}\n              </span>\n              <span v-if=\"vulnerability.reportedBy\" class=\"metadata-item\">\n                <i class=\"el-icon-user\"></i> 报告人：{{ vulnerability.reportedBy.name || vulnerability.reportedBy.email }}\n              </span>\n              <span v-if=\"vulnerability.assignedTo\" class=\"metadata-item\">\n                <i class=\"el-icon-s-custom\"></i> 负责人：{{ vulnerability.assignedTo.name || vulnerability.assignedTo.email }}\n              </span>\n            </div>\n          </div>\n          \n          <!-- 操作按钮 -->\n          <div class=\"header-right\">\n            <el-dropdown split-button type=\"primary\" @click=\"handleEdit\">\n              编辑漏洞\n              <template #dropdown>\n                <el-dropdown-menu>\n                  <el-dropdown-item @click=\"changeStatus('open')\">标记为开放</el-dropdown-item>\n                  <el-dropdown-item @click=\"changeStatus('in_progress')\">标记为处理中</el-dropdown-item>\n                  <el-dropdown-item @click=\"changeStatus('resolved')\">标记为已解决</el-dropdown-item>\n                  <el-dropdown-item @click=\"changeStatus('closed')\">标记为已关闭</el-dropdown-item>\n                  <el-dropdown-item @click=\"changeStatus('false_positive')\">标记为误报</el-dropdown-item>\n                  <el-dropdown-item divided @click=\"handleDelete\">\n                    <span style=\"color: #F56C6C;\">删除漏洞</span>\n                  </el-dropdown-item>\n                </el-dropdown-menu>\n              </template>\n            </el-dropdown>\n          </div>\n        </div>\n      </div>\n\n      <!-- 漏洞内容 -->\n      <el-row :gutter=\"20\" class=\"content-row\">\n        <!-- 左侧主内容 -->\n        <el-col :span=\"16\">\n          <el-card shadow=\"hover\" class=\"description-card\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>漏洞描述</span>\n              </div>\n            </template>\n            <div class=\"rich-content\" v-html=\"vulnerability.description\"></div>\n          </el-card>\n\n          <el-card shadow=\"hover\" class=\"section-card\" v-if=\"vulnerability.stepsToReproduce\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>复现步骤</span>\n              </div>\n            </template>\n            <div class=\"rich-content\" v-html=\"vulnerability.stepsToReproduce\"></div>\n          </el-card>\n\n          <el-card shadow=\"hover\" class=\"section-card\" v-if=\"vulnerability.impact\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>影响分析</span>\n              </div>\n            </template>\n            <div class=\"rich-content\" v-html=\"vulnerability.impact\"></div>\n          </el-card>\n\n          <el-card shadow=\"hover\" class=\"section-card\" v-if=\"vulnerability.remediation\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>修复建议</span>\n              </div>\n            </template>\n            <div class=\"rich-content\" v-html=\"vulnerability.remediation\"></div>\n          </el-card>\n\n          <!-- 附件部分 -->\n          <el-card shadow=\"hover\" class=\"section-card\" v-if=\"vulnerability.attachments && vulnerability.attachments.length > 0\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>附件</span>\n              </div>\n            </template>\n            <div class=\"attachments-list\">\n              <div v-for=\"(attachment, index) in vulnerability.attachments\" :key=\"index\" class=\"attachment-item\">\n                <i class=\"el-icon-document\"></i>\n                <a :href=\"attachment.url\" target=\"_blank\">{{ attachment.name }}</a>\n                <span class=\"attachment-size\">{{ formatFileSize(attachment.size) }}</span>\n              </div>\n            </div>\n          </el-card>\n\n          <!-- 注释部分 -->\n          <el-card shadow=\"hover\" class=\"section-card comments-card\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>评论区 ({{ vulnerability.comments ? vulnerability.comments.length : 0 }})</span>\n              </div>\n            </template>\n            \n            <!-- 评论列表 -->\n            <div class=\"comments-list\" v-if=\"vulnerability.comments && vulnerability.comments.length > 0\">\n              <div v-for=\"(comment, index) in vulnerability.comments\" :key=\"index\" class=\"comment-item\">\n                <div class=\"comment-header\">\n                  <el-avatar :size=\"40\" :src=\"comment.author.avatar\"></el-avatar>\n                  <div class=\"comment-info\">\n                    <div class=\"comment-author\">{{ comment.author.name || comment.author.email }}</div>\n                    <div class=\"comment-time\">{{ $filters.formatDate(comment.createdAt) }}</div>\n                  </div>\n                </div>\n                <div class=\"comment-content\" v-html=\"comment.content\"></div>\n              </div>\n            </div>\n            \n            <div v-else class=\"no-comments\">暂无评论</div>\n            \n            <!-- 添加评论 -->\n            <div class=\"add-comment\">\n              <el-input\n                v-model=\"newComment\"\n                type=\"textarea\"\n                :rows=\"4\"\n                placeholder=\"添加评论...\"\n              ></el-input>\n              <el-button type=\"primary\" @click=\"submitComment\" :disabled=\"!newComment.trim()\">提交评论</el-button>\n            </div>\n          </el-card>\n        </el-col>\n\n        <!-- 右侧信息栏 -->\n        <el-col :span=\"8\">\n          <!-- 漏洞详情 -->\n          <el-card shadow=\"hover\" class=\"info-card\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>漏洞信息</span>\n              </div>\n            </template>\n            \n            <el-descriptions :column=\"1\" class=\"info-descriptions\" border>\n              <el-descriptions-item label=\"CVE编号\" v-if=\"vulnerability.cve\">\n                {{ vulnerability.cve }}\n              </el-descriptions-item>\n              \n              <el-descriptions-item label=\"严重程度\">\n                <el-tag :type=\"$filters.severityClass(vulnerability.severity)\">\n                  {{ $filters.severityText(vulnerability.severity) }}\n                </el-tag>\n              </el-descriptions-item>\n              \n              <el-descriptions-item label=\"状态\">\n                <el-tag :type=\"$filters.statusClass(vulnerability.status)\">\n                  {{ $filters.statusText(vulnerability.status) }}\n                </el-tag>\n              </el-descriptions-item>\n              \n              <el-descriptions-item label=\"报告时间\">\n                {{ $filters.formatDate(vulnerability.reportedAt) }}\n              </el-descriptions-item>\n              \n              <el-descriptions-item label=\"更新时间\">\n                {{ $filters.formatDate(vulnerability.updatedAt) }}\n              </el-descriptions-item>\n              \n              <el-descriptions-item label=\"报告人\" v-if=\"vulnerability.reportedBy\">\n                {{ vulnerability.reportedBy.name || vulnerability.reportedBy.email }}\n              </el-descriptions-item>\n              \n              <el-descriptions-item label=\"负责人\" v-if=\"vulnerability.assignedTo\">\n                {{ vulnerability.assignedTo.name || vulnerability.assignedTo.email }}\n              </el-descriptions-item>\n              \n              <el-descriptions-item label=\"目标\" v-if=\"vulnerability.target\">\n                {{ vulnerability.target }}\n              </el-descriptions-item>\n              \n              <el-descriptions-item label=\"漏洞位置\" v-if=\"vulnerability.location\">\n                {{ vulnerability.location }}\n              </el-descriptions-item>\n              \n              <el-descriptions-item label=\"CVSS\" v-if=\"vulnerability.cvss\">\n                <el-tag>{{ vulnerability.cvss }}</el-tag>\n              </el-descriptions-item>\n            </el-descriptions>\n          </el-card>\n\n          <!-- 时间线 -->\n          <el-card shadow=\"hover\" class=\"timeline-card\">\n            <template #header>\n              <div class=\"card-header\">\n                <span>漏洞时间线</span>\n              </div>\n            </template>\n            \n            <el-timeline>\n              <el-timeline-item\n                v-for=\"(activity, index) in timeline\"\n                :key=\"index\"\n                :type=\"getTimelineItemType(activity.action)\"\n                :timestamp=\"$filters.formatDate(activity.timestamp)\"\n              >\n                {{ activity.description }}\n                <span v-if=\"activity.user\">\n                  by {{ activity.user.name || activity.user.email }}\n                </span>\n              </el-timeline-item>\n            </el-timeline>\n          </el-card>\n        </el-col>\n      </el-row>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter, useRoute } from 'vue-router'\nimport { ElMessageBox, ElMessage } from 'element-plus'\n\nexport default {\n  name: 'VulnerabilityDetails',\n  \n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    const route = useRoute()\n    \n    const loading = ref(true)\n    const vulnerability = computed(() => store.getters['vulnerability/currentVulnerability'])\n    const newComment = ref('')\n    \n    // 时间线数据\n    const timeline = computed(() => {\n      if (!vulnerability.value || !vulnerability.value.activities) return []\n      \n      // 按时间排序活动\n      return [...vulnerability.value.activities].sort((a, b) => \n        new Date(b.timestamp) - new Date(a.timestamp)\n      )\n    })\n    \n    // 获取漏洞详情\n    const fetchVulnerabilityDetails = async () => {\n      loading.value = true\n      try {\n        const vulnerabilityId = route.params.id\n        await store.dispatch('vulnerability/fetchVulnerabilityById', vulnerabilityId)\n      } catch (error) {\n        ElMessage.error('获取漏洞详情失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 修改漏洞状态\n    const changeStatus = async (status) => {\n      try {\n        await store.dispatch('vulnerability/updateVulnerability', {\n          id: vulnerability.value.id,\n          data: { status }\n        })\n        ElMessage.success('漏洞状态已更新')\n      } catch (error) {\n        ElMessage.error('更新漏洞状态失败：' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 删除漏洞\n    const handleDelete = () => {\n      ElMessageBox.confirm(\n        '确定要删除这个漏洞吗？此操作不可恢复。',\n        '删除确认',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          await store.dispatch('vulnerability/deleteVulnerability', vulnerability.value.id)\n          ElMessage.success('漏洞已成功删除')\n          router.push('/vulnerabilities')\n        } catch (error) {\n          ElMessage.error('删除漏洞失败：' + (error.message || '未知错误'))\n        }\n      }).catch(() => {\n        // 用户取消删除\n      })\n    }\n    \n    // 编辑漏洞\n    const handleEdit = () => {\n      router.push(`/vulnerabilities/${vulnerability.value.id}/edit`)\n    }\n    \n    // 提交评论\n    const submitComment = async () => {\n      if (!newComment.value.trim()) return\n      \n      try {\n        await store.dispatch('vulnerability/addComment', {\n          vulnerabilityId: vulnerability.value.id,\n          content: newComment.value\n        })\n        ElMessage.success('评论已添加')\n        newComment.value = ''\n      } catch (error) {\n        ElMessage.error('添加评论失败：' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 返回漏洞列表\n    const goBack = () => {\n      router.push('/vulnerabilities')\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (bytes) => {\n      if (!bytes) return '0 Bytes'\n      \n      const k = 1024\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      \n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n    \n    // 根据活动类型获取时间线项目类型\n    const getTimelineItemType = (action) => {\n      const types = {\n        'created': 'primary',\n        'updated': 'warning',\n        'status_changed': 'success',\n        'comment_added': 'info',\n        'deleted': 'danger'\n      }\n      \n      return types[action] || 'info'\n    }\n    \n    onMounted(() => {\n      fetchVulnerabilityDetails()\n    })\n    \n    return {\n      loading,\n      vulnerability,\n      timeline,\n      newComment,\n      fetchVulnerabilityDetails,\n      changeStatus,\n      handleDelete,\n      handleEdit,\n      submitComment,\n      goBack,\n      formatFileSize,\n      getTimelineItemType\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.vulnerability-details {\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n.page-header {\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.title-row {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n}\n\n.vulnerability-title {\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n  margin-right: 10px;\n}\n\n.cve-tag, .severity-tag, .status-tag {\n  margin-right: 8px;\n}\n\n.metadata-row {\n  color: #606266;\n  font-size: 14px;\n}\n\n.metadata-item {\n  margin-right: 16px;\n  \n  i {\n    margin-right: 4px;\n  }\n}\n\n.content-row {\n  margin-bottom: 20px;\n}\n\n.description-card, .section-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  font-weight: 600;\n  color: #303133;\n}\n\n.rich-content {\n  line-height: 1.6;\n  \n  ::v-deep(h1), ::v-deep(h2), ::v-deep(h3) {\n    margin-top: 16px;\n    margin-bottom: 12px;\n  }\n  \n  ::v-deep(p) {\n    margin-bottom: 12px;\n  }\n  \n  ::v-deep(ul), ::v-deep(ol) {\n    padding-left: 24px;\n    margin-bottom: 12px;\n  }\n  \n  ::v-deep(code) {\n    background-color: #f5f7fa;\n    padding: 2px 4px;\n    border-radius: 4px;\n    font-family: monospace;\n  }\n  \n  ::v-deep(pre) {\n    background-color: #f5f7fa;\n    padding: 12px;\n    border-radius: 4px;\n    overflow-x: auto;\n    margin-bottom: 12px;\n    \n    code {\n      background: none;\n      padding: 0;\n    }\n  }\n}\n\n.attachments-list {\n  .attachment-item {\n    padding: 8px 0;\n    border-bottom: 1px solid #ebeef5;\n    display: flex;\n    align-items: center;\n    \n    &:last-child {\n      border-bottom: none;\n    }\n    \n    i {\n      margin-right: 8px;\n      color: #409EFF;\n    }\n    \n    a {\n      color: #409EFF;\n      text-decoration: none;\n      \n      &:hover {\n        text-decoration: underline;\n      }\n    }\n    \n    .attachment-size {\n      color: #909399;\n      margin-left: 8px;\n      font-size: 12px;\n    }\n  }\n}\n\n.comments-card {\n  margin-bottom: 40px;\n}\n\n.comments-list {\n  .comment-item {\n    padding: 16px 0;\n    border-bottom: 1px solid #ebeef5;\n    \n    &:last-child {\n      border-bottom: none;\n    }\n    \n    .comment-header {\n      display: flex;\n      align-items: center;\n      margin-bottom: 8px;\n    }\n    \n    .comment-info {\n      margin-left: 12px;\n    }\n    \n    .comment-author {\n      font-weight: 500;\n    }\n    \n    .comment-time {\n      font-size: 12px;\n      color: #909399;\n    }\n    \n    .comment-content {\n      padding-left: 52px;\n      line-height: 1.6;\n    }\n  }\n}\n\n.no-comments {\n  color: #909399;\n  text-align: center;\n  padding: 20px 0;\n}\n\n.add-comment {\n  margin-top: 20px;\n  \n  .el-button {\n    margin-top: 12px;\n    float: right;\n  }\n}\n\n.info-card, .timeline-card {\n  margin-bottom: 20px;\n}\n\n.info-descriptions {\n  ::v-deep(.el-descriptions__label) {\n    width: 100px;\n  }\n}\n\n.el-timeline {\n  padding-left: 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}